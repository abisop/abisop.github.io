import{_ as a,c as t,al as o,o as r}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"Zynq UltraScale+ MPSoC","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm64/zynq-mpsoc/index.md","filePath":"en/platforms/arm64/zynq-mpsoc/index.md"}'),n={name:"en/platforms/arm64/zynq-mpsoc/index.md"};function i(l,e,s,d,p,c){return r(),t("div",null,e[0]||(e[0]=[o(`<h1 id="zynq-ultrascale-mpsoc" tabindex="-1">Zynq UltraScale+ MPSoC <a class="header-anchor" href="#zynq-ultrascale-mpsoc" aria-label="Permalink to &quot;Zynq UltraScale+ MPSoC&quot;">​</a></h1><p>The Zynq UltraScale+ MPSoC family consists of a system-on-chip (SoC) style integrated processing system (PS) and a Programmable Logic (PL) unit, providing an extensible and flexible SoC solution on a single die.There&#39;s 64-bit Quadcore ARM Cortex-A53 Processors and Dualcore ARM Cortex-R5 Real-Time Processors in the MPSoC, zynq-mpsoc given support for Quadcore ARM Cortex-A53 Processors of MPSoC</p><h2 id="peripheral-support" tabindex="-1">Peripheral Support <a class="header-anchor" href="#peripheral-support" aria-label="Permalink to &quot;Peripheral Support&quot;">​</a></h2><p>The following list indicates peripherals supported in NuttX:</p><p>Peripheral Support Notes</p><hr><p>MIO Yes<br> EMIO I2C CAN Yes No No Depending on PL NET SPI QSPI TIMER UART WDT DMA SDI Yes No No NO Yes No No No GEM3 ADC No Depending on PL DAC No Depending on PL PCI NO Depending on PL</p><h3 id="mio-emio" tabindex="-1">MIO/EMIO <a class="header-anchor" href="#mio-emio" aria-label="Permalink to &quot;MIO/EMIO&quot;">​</a></h3><p>Key features of the GPIO peripheral are summarized as follows:</p><ul><li></li></ul><pre><code>78 GPIO interfaces to the device pins.

:   -   Routed through the MIO multiplexer.
    -   Programmable I/O drive strength, slew rate, and 3-state
        control.
</code></pre><ul><li></li></ul><pre><code>96 GPIO interfaces to the PL (four allocated by software to reset PL logic).

:   -   Routed through the EMIO interface.
    -   Data inputs.
    -   Data outputs.
    -   Output enables.
</code></pre><ul><li>I/O interface is organized into six banks (3 MIO and 3 EMIO).</li></ul><p>Pins can be configured/operated using <code>zynq_mio_*</code> functions. To handled 96 GPIO in 3 EMIO banks you should map GPIO to chip&#39;s pin by HDL design in PL logic.</p><h3 id="uart" tabindex="-1">UART <a class="header-anchor" href="#uart" aria-label="Permalink to &quot;UART&quot;">​</a></h3><p>Zynq UltraScale+ MPSoC have two high-speed UARTs (up to 1Mb/s). The UART controller is a full-duplex asynchronous receiver and transmitter that supports a wide range of programmable baud rates and I/O signal formats. The controller can accommodate automatic parity generation and multi-master detection mode this may introduce a large number of interrupts which may be undesirable.</p><p>UART can be configured/operated using <code>zynq_uart_*</code> functions. Both receive and transmit can be operated in interrupt mode and polling mode.</p><h3 id="ethernet" tabindex="-1">ETHERNET <a class="header-anchor" href="#ethernet" aria-label="Permalink to &quot;ETHERNET&quot;">​</a></h3><p>The gigabit Ethernet controller (GEM) implements a 10/100/1000 Mb/s Ethernet MAC that is compatible with the IEEE Standard for Ethernet (IEEE Std 802.3-2008) and capable of operating in either half or full-duplex mode in 10/100 mode and full-duplex in 1000 mode. The processing system (PS) is equipped with four gigabit Ethernet controllers. Each controller can be configured independently. Each controller uses a reduced gigabit media independent interface (RGMII) v2.0. Each GEM controller provides management data input/output (MDIO) interfaces for PHY management. Key features of the NET driver are summarized as follows:</p><ul><li></li></ul><pre><code>Configurable MAC.

:   -   Configurable DMA receive buffer size.
    -   Configurable transmit packet size.
    -   Configurable TX and RX buffer number.
    -   Preallocate or malloc TX and RX buffer.
</code></pre><ul><li></li></ul><pre><code>Configurable PHY.

:   -   MDIO phy read and write interface.
    -   Configurable phy address.
    -   PHY autonegotiation to determine speed and mode.
    -   Board support phy initialize.
</code></pre><ul><li><p>Configurable ethernet 1,2,3,4.</p></li><li><p>Configurable ethernet speed 10M,100M,1000M.</p></li></ul><p>Access to the programmable logic (PL) is through the EMIO which provides the gigabit media independent interface (GMII). Other Ethernet communications interfaces can be created in the PL using the GMII available on the EMIO interface. GEM supports the serial gigabit media-independent interface (SGMII, 1000BASE-SX, and 1000BASE-LX) at 1000 Mb/s using the PS-GTR interface.</p><h3 id="psci-and-debug" tabindex="-1">Psci and debug <a class="header-anchor" href="#psci-and-debug" aria-label="Permalink to &quot;Psci and debug&quot;">​</a></h3><p>Default exception level is EL1 for the NuttX OS. However, if we debug NuttX by JTAG the XSCT of Vivado SDK will set the Zynq MPSoC to EL3. so have to config NuttX to run on EL3. Other levels are not supported at the moment. And in this operating condition we can&#39;t use SMC for there&#39;s no ATF support.</p><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>`,30)]))}const m=a(n,[["render",i]]);export{h as __pageData,m as default};
