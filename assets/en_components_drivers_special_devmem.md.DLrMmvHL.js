import{_ as r,c as s,al as t,o}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"DEVMEM Drivers","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/drivers/special/devmem.md","filePath":"en/components/drivers/special/devmem.md"}'),a={name:"en/components/drivers/special/devmem.md"};function i(d,e,n,p,m,c){return o(),s("div",null,e[0]||(e[0]=[t(`<h1 id="devmem-drivers" tabindex="-1">DEVMEM Drivers <a class="header-anchor" href="#devmem-drivers" aria-label="Permalink to &quot;DEVMEM Drivers&quot;">â€‹</a></h1><p>The [devmem]{.title-ref} driver provides an interface for accessing memory-mapped I/O in an embedded system. This driver allows for reading, writing, and memory mapping of specific memory regions or device registers.</p><p><code>read()</code>: This function reads data from the memory-mapped I/O address</p><p>: space into the buffer provided by the caller. The first byte read corresponds to the address specified by the device&#39;s &quot;current memory address&quot;. The addresses for subsequent bytes depend on the auto-increment behavior of the specific device.</p><p><code>write()</code>: This function transfers data from the provided data buffer by</p><p>: the caller to the memory-mapped I/O address space. The first byte written corresponds to the address specified by the device&#39;s &quot;current memory address&quot;.</p><p><code>mmap()</code>: The [mmap()]{.title-ref} function provides a mechanism to map a device&#39;s</p><p>: memory region into the user space, allowing direct access to device registers or memory regions. The mapped region can be accessed using normal memory operations.</p><pre><code>The function requires a base address and size for the memory region
to be mapped. If successful, it returns a pointer to the mapped
region. If mapping fails, it returns [EINVAL]{.title-ref} and
[errno]{.title-ref} is set appropriately.
</code></pre>`,9)]))}const l=r(a,[["render",i]]);export{h as __pageData,l as default};
