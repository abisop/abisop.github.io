import{_ as e,c as n,al as r,o as t}from"./chunks/framework.NFAqBSgQ.js";const i="/assets/board.CniuSYVY.jpg",h=JSON.parse('{"title":"Sparkfun nRF52832 Breakout","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nrf52/boards/nrf52832-sparkfun/index.md","filePath":"en/platforms/arm/nrf52/boards/nrf52832-sparkfun/index.md"}'),o={name:"en/platforms/arm/nrf52/boards/nrf52832-sparkfun/index.md"};function s(l,a,u,p,d,c){return t(),n("div",null,a[0]||(a[0]=[r('<h1 id="sparkfun-nrf52832-breakout" tabindex="-1">Sparkfun nRF52832 Breakout <a class="header-anchor" href="#sparkfun-nrf52832-breakout" aria-label="Permalink to &quot;Sparkfun nRF52832 Breakout&quot;">​</a></h1><p>chip:nrf52, chip:nrf52832</p><p>The <a href="https://wiki.makerdiary.co/nrf52832-mdk" target="_blank" rel="noreferrer">Sparkfun nRF52832 Breakout</a> is basic board providing access to all I/O pins, a 32kHz crystal and LED.</p><p><img src="'+i+`" alt="Sparkfun nRF52832 Breakout" class="align-center" width="50.0%"></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><blockquote><ul><li>nRF52832 MCU (QFAAB0), 512K FLASH and 64 SRAM</li><li>Reset and user button</li><li>Power LED (blue) and user LED (red)</li><li>32768 Hz crystal</li><li>NFC antenna connection pads</li><li>Cortex Debug connector</li><li>UART + SWD header</li></ul></blockquote><h2 id="pin-mapping" tabindex="-1">Pin Mapping <a class="header-anchor" href="#pin-mapping" aria-label="Permalink to &quot;Pin Mapping&quot;">​</a></h2><p>Pin Signal Notes</p><hr><p>P0.06 User Button Active LOW P0.07 P0.26 P0.27 User LED UART TXO UART RXI Active LOW</p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled in UART0, at 115200 bps).</p><h2 id="flash-debug" tabindex="-1">Flash &amp; Debug <a class="header-anchor" href="#flash-debug" aria-label="Permalink to &quot;Flash &amp; Debug&quot;">​</a></h2><p>An external debugger is required, so the procedure to flash/debug depends on the chosen interface. Using an ST-Link V2 you can flash using OpenOCD with:</p><pre><code>openocd -f interface/stlink-v2.cfg -f target/nrf52.cfg -c &quot;program nuttx/nuttx.bin 0x0000000 verify reset; shutdown&quot;
</code></pre>`,16)]))}const b=e(o,[["render",s]]);export{h as __pageData,b as default};
