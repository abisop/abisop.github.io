import{_ as t,c as a,al as d,o}from"./chunks/framework.NFAqBSgQ.js";const _=JSON.parse('{"title":"thttpd THTTPD server","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/thttpd/index.md","filePath":"en/applications/examples/thttpd/index.md"}'),i={name:"en/applications/examples/thttpd/index.md"};function s(n,e,p,r,l,c){return o(),a("div",null,e[0]||(e[0]=[d('<h1 id="thttpd-thttpd-server" tabindex="-1"><code>thttpd</code> THTTPD server <a class="header-anchor" href="#thttpd-thttpd-server" aria-label="Permalink to &quot;`thttpd` THTTPD server&quot;">​</a></h1><p>An example that builds <code>netutils/thttpd</code> with some simple NXFLAT CGI programs. In addition to those, this example accepts:</p><ul><li><code>CONFIG_EXAMPLES_THTTPD_NOMAC</code> – (May be defined to use software assigned MAC)</li><li><code>CONFIG_EXAMPLES_THTTPD_DRIPADDR</code> – Default router IP address.</li><li><code>CONFIG_EXAMPLES_THTTPD_NETMASK</code> – Network mask.</li></ul><p>Applications using this example will need to enable the following <code>netutils</code> libraries in the <code>defconfig</code> file: :</p><pre><code>CONFIG_NETUTILS_NETLIB=y\nCONFIG_NETUTILS_THTTPD=y\n</code></pre>',5)]))}const h=t(i,[["render",s]]);export{_ as __pageData,h as default};
