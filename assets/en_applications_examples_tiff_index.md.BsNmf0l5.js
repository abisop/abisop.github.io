import{_ as t,c as i,al as a,o}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"tiff TIFF file generation example","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/tiff/index.md","filePath":"en/applications/examples/tiff/index.md"}'),n={name:"en/applications/examples/tiff/index.md"};function l(f,e,r,d,p,s){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="tiff-tiff-file-generation-example" tabindex="-1"><code>tiff</code> TIFF file generation example <a class="header-anchor" href="#tiff-tiff-file-generation-example" aria-label="Permalink to &quot;`tiff` TIFF file generation example&quot;">​</a></h1><p>This is a simple unit test for the TIFF creation library at <code>apps/graphic/tiff</code>. It is configured to work in the Linux user-mode simulation and has not been tested in any other environment.</p><p>At a minimum, to run in an embedded environment, you will probably have to change the configured paths to the TIFF files defined in the example.</p><ul><li><code>CONFIG_EXAMPLES_TIFF_OUTFILE</code> – Name of the resulting TIFF file. Default is <code>/tmp/result.tif</code>.</li><li><code>CONFIG_EXAMPLES_TIFF_TMPFILE1/2</code> – Names of two temporaries files that will be used in the file creation. Defaults are <code>/tmp/tmpfile1.dat</code> and <code>/tmp/tmpfile2.dat</code>.</li></ul><p>The following must also be defined in your <code>apps/</code> configuration file: :</p><pre><code>CONFIG_EXAMPLES_TIFF=y\nCONFIG_GRAPHICS_TIFF=y\n</code></pre>',6)]))}const _=t(n,[["render",l]]);export{m as __pageData,_ as default};
