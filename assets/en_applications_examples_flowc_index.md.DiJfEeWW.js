import{_ as t,c as a,al as r,o}from"./chunks/framework.NFAqBSgQ.js";const f=JSON.parse('{"title":"flowc Serial Hardware Flow Control","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/flowc/index.md","filePath":"en/applications/examples/flowc/index.md"}'),l={name:"en/applications/examples/flowc/index.md"};function i(n,e,s,c,d,p){return o(),a("div",null,e[0]||(e[0]=[r('<h1 id="flowc-serial-hardware-flow-control" tabindex="-1"><code>flowc</code> Serial Hardware Flow Control <a class="header-anchor" href="#flowc-serial-hardware-flow-control" aria-label="Permalink to &quot;`flowc` Serial Hardware Flow Control&quot;">â€‹</a></h1><p>A simple test of serial hardware flow control.</p><p>General Usage Instructions:</p><ol><li>The receiver side enter, start the receiver program. The receiver is now waiting to receive data on the configured serial port.</li><li>On the sender side start the sender program. This will send data to the receiver which will verify that no data is lost.</li></ol><p>On Linux, you can alternatively do:</p><pre><code> stty -F /dev/ttyACM0 crtscts\n cat testdata.dat &gt;/dev/ttyACM0\n</code></pre><p>where you need to replace <code>/dev/ttyACM0</code> with your selected serial device.</p>',7)]))}const h=t(l,[["render",i]]);export{f as __pageData,h as default};
