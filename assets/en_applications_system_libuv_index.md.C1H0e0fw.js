import{_ as i,c as o,al as l,o as a}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"libuv libuv asynchronous I/O Library","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/system/libuv/index.md","filePath":"en/applications/system/libuv/index.md"}'),t={name:"en/applications/system/libuv/index.md"};function s(r,e,n,c,d,u){return a(),o("div",null,e[0]||(e[0]=[l('<h1 id="libuv-libuv-asynchronous-i-o-library" tabindex="-1"><code>libuv</code> libuv asynchronous I/O Library <a class="header-anchor" href="#libuv-libuv-asynchronous-i-o-library" aria-label="Permalink to &quot;`libuv` libuv asynchronous I/O Library&quot;">â€‹</a></h1><p>Most features of libuv are supported by current port, except SIGPROF relative function (loop_configure).</p><p>Nearly full libuv&#39;s test suite available on NuttX, but some known case can&#39;t run on sim:</p><ul><li><code>loop_update_time</code></li><li><code>idle_starvation</code></li><li><code>signal_multiple_loops</code></li><li><code>signal_pending_on_close</code></li><li><code>metrics_idle_time</code></li><li><code>metrics_idle_time_thread</code></li><li><code>metrics_idle_time_zero</code></li></ul><p>And some will cause crash by some reason:</p><ul><li><code>fs_poll_ref</code></li></ul>',6)]))}const b=i(t,[["render",s]]);export{p as __pageData,b as default};
