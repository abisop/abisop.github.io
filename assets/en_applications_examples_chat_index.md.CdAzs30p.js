import{_ as t,c as a,al as o,o as c}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"chat AT over TTY","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/chat/index.md","filePath":"en/applications/examples/chat/index.md"}'),s={name:"en/applications/examples/chat/index.md"};function i(n,e,r,d,l,p){return c(),a("div",null,e[0]||(e[0]=[o('<h1 id="chat-at-over-tty" tabindex="-1"><code>chat</code> AT over TTY <a class="header-anchor" href="#chat-at-over-tty" aria-label="Permalink to &quot;`chat` AT over TTY&quot;">​</a></h1><p>Demonstrates AT chat functionality over a TTY device. This is useful with AT modems, for example, to establish a <code>pppd</code> connection (see the related <code>pppd</code> example). Moreover, some AT modems – such as ones made by u-blox – have an internal TCP/IP stack, often with an implementation of TLS/SSL. In such cases the chat utility can be used to configure the internal TCP/IP stack, establish socket connections, set up security (e.g., download base64-encoded certificates to the modem), and perform data exchange through sockets over the TTY device.</p><p>Useful configuration parameters:</p><ul><li><code>CONFIG_EXAMPLES_CHAT_PRESET[0..3]</code> – preset chat scripts.</li><li><code>CONFIG_EXAMPLES_CHAT_TTY_DEVNODE</code> – TTY device node name.</li><li><code>CONFIG_EXAMPLES_CHAT_TIMEOUT_SECONDS</code> – default receive timeout.</li></ul>',4)]))}const _=t(s,[["render",i]]);export{h as __pageData,_ as default};
