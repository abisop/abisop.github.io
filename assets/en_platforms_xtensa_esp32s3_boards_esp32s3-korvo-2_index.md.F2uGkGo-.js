import{_ as o}from"./chunks/esp32-audio-config-file.nNc5QnB1.js";import{_ as a,c as t,al as r,o as n}from"./chunks/framework.NFAqBSgQ.js";const i="/assets/esp32-s3-korvo-2-v3.0-overview.DBEXLrHK.png",s="/assets/esp32-s3-korvo-2-v3.0.C0cLSqLv.png",p="/assets/esp32-s3-korvo-2-v3.0-electrical-block-diagram.DAsi33Uy.png",l="/assets/esp32-s3-korvo-2-v3.0-usb-ps.C8NWG2aS.png",d="/assets/esp32-s3-korvo-2-v3.0-battery-ps.Cclr1_Cc.png",c="/assets/esp32-s3-korvo-2-v3.0-ps-options.CcRPGDDM.png",h="/assets/esp32-s3-korvo-2-v3.0-digital-ps.DNH1pnp7.png",u="/assets/esp32-s3-korvo-2-v3.0-audio-ps.DEEVzQN8.png",m="/assets/esp32-s3-korvo-2-v3.0-aec-codec-o.Baxm5Xby.png",P="/assets/esp32-s3-korvo-2-v3.0-aec-pa-o.CoxC890M.png",f="/assets/esp32-s3-korvo-2-v3.0-aec-signal-collection.BHAMVJvY.png",k=JSON.parse('{"title":"ESP32-S3-Korvo-2 V3.0","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/xtensa/esp32s3/boards/esp32s3-korvo-2/index.md","filePath":"en/platforms/xtensa/esp32s3/boards/esp32s3-korvo-2/index.md"}'),S={name:"en/platforms/xtensa/esp32s3/boards/esp32s3-korvo-2/index.md"};function g(b,e,w,C,O,_){return n(),t("div",null,e[0]||(e[0]=[r('<h1 id="esp32-s3-korvo-2-v3-0" tabindex="-1">ESP32-S3-Korvo-2 V3.0 <a class="header-anchor" href="#esp32-s3-korvo-2-v3-0" aria-label="Permalink to &quot;ESP32-S3-Korvo-2 V3.0&quot;">​</a></h1><p>chip:esp32, chip:esp32s3</p><p>The ESP32-S3-Korvo-2 is a multimedia development board based on the ESP32-S3 chip. It is equipped with a two-microphone array which is suitable for voice recognition and near/far-field voice wake-up applications. The board integrates multiple peripherals such as LCD, camera, and microSD card. It also supports JPEG video stream processing. With all of its outstanding features, the board is an ideal choice for the development of low-cost and low-power network-connected audio and video products.</p><p><img src="'+i+`" alt="ESP32-S3-Korvo-2 V3.0 with ESP32-S3-WROOM-1
module" class="align-center"></p><p>This board mainly consists of the following parts:</p><ul><li>Main board: ESP32-S3-Korvo-2</li><li class="title-ref">LCD extension board: [ESP32-S3-Korvo-2-LCD &lt;user-guide-esp32https://docs.espressif.com/projects/esp-adf/en/latest/design-guide/dev-boards/user-guide-esp32-s3-korvo-2-lcd.html&gt;]</li><li>Camera</li></ul><p>This document is mostly dedicated to the main board. For detailed information on other parts, click the links above.</p><p>The document consists of the following sections:</p><ul><li><a href="#getting-started">Getting started</a>: Overview of the board and hardware/software setup instructions to get started.</li><li><a href="#hardware-reference">Hardware Reference</a>: More detailed information about the board&#39;s hardware.</li><li><a href="#hardware-revision-details">Hardware Revision Details</a>: Hardware revision history, known issues, and links to user guides for previous versions (if any) of the board.</li><li><a href="#related-documents">Related Documents</a>: Links to related documentation.</li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>This section provides a brief introduction of ESP32-S3-Korvo-2 V3.0, instructions on how to do the initial hardware setup and how to flash firmware onto it.</p><h3 id="description-of-components" tabindex="-1">Description of Components <a class="header-anchor" href="#description-of-components" aria-label="Permalink to &quot;Description of Components&quot;">​</a></h3><p><img src="`+s+`" alt="ESP32-S3-Korvo-2 V3.0 (click to
enlarge)" class="align-center"></p><p>The key components of the board are described in a clockwise direction.</p><p>+--------------------+-------------------------------------------------+ | Key Component | Description | +====================+=================================================+ | ESP32-S3-WROOM-1 | The ESP32-S3-WROOM-1 is a powerful, generic | | Module | Wi-Fi + Bluetooth LE MCU module that is built | | | around the ESP32-S3 series of SoCs. On top of a | | | rich set of peripherals, the acceleration for | | | neural network computing and signal processing | | | workloads provided by the SoC make the modules | | | an ideal choice for a wide variety of | | | application scenarios related to AI and | | | Artificial Intelligence of Things (AIoT), such | | | as wake word detection, speech commands | | | recognition, face detection and recognition, | | | smart home, smart appliances, smart control | | | panel, smart speaker, etc. | +--------------------+-------------------------------------------------+ | Left Microphone | Onboard microphone connected to ADC. | +--------------------+-------------------------------------------------+ | Audio ADC Chip | [ES7210](h | | | ttp://www.everest-semi.com/pdf/ES7210%20PB.pdf) | | | is a high-performance, low-power 4-channel | | | audio analog-to-digital converter for | | | microphone array applications. It is very | | | suitable for music and speech applications. In | | | addition, ES7210 can also be used to collect | | | acoustic echo cancellation (AEC) echo reference | | | signals. | +--------------------+-------------------------------------------------+ | Audio Codec Chip | The audio codec chip, | | | [ES8311](ht | | | tp://www.everest-semi.com/pdf/ES8311%20PB.pdf), | | | is a low-power mono audio codec. It consists of | | | 1-channel ADC, 1-channel DAC, low noise | | | pre-amplifier, headphone driver, digital sound | | | effects, analog mixing, and gain functions. It | | | is interfaced with ESP32-S3-WROOM-1 module over | | | I2S and I2C buses to provide audio processing | | | in hardware independently from the audio | | | application. | +--------------------+-------------------------------------------------+ | Audio PA Chip | NS4150 is an EMI, 3 W mono Class D audio power | | | amplifier, amplifying audio signals from audio | | | codec chips to drive speakers. | +--------------------+-------------------------------------------------+ | Right Microphone | Onboard microphone connected to ADC. | +--------------------+-------------------------------------------------+ | Speaker Output | Output socket to connect a speaker. The 4-ohm | | Port | and 3-watt speaker is recommended. The pins | | | have a 2.00 mm/0.08&quot; pitch. | +--------------------+-------------------------------------------------+ | USB-to-UART Bridge | A single chip USB-UART bridge CP2102N provides | | Chip | up to 3 Mbps transfer rates for software | | | download and debugging. | +--------------------+-------------------------------------------------+ | USB-to-UART Port | Functions as the communication interface | | | between a PC and the ESP32-S3-WROOM-1 module. | +--------------------+-------------------------------------------------+ | USB Power Port | Provides power to the board. It is recommended | | | to use at least 5V/2A power adapter to ensure a | | | stable power supply. | +--------------------+-------------------------------------------------+ | Battery Socket | Two pins socket to connect a single cell Li-ion | | | battery. | +--------------------+-------------------------------------------------+ | Power Switch | Power on/off knob: toggling it down powers the | | | board on; toggling it up powers the board off. | +--------------------+-------------------------------------------------+ | Battery Charger | AP5056 is a constant current and constant | | | voltage linear charger for single cell | | | lithium-ion batteries. Used for charging of a | | | battery connected to the Battery Socket over | | | the Micro USB Port. | +--------------------+-------------------------------------------------+ | Function Press | Six press keys labeled REC, MUTE, PLAY, SET, | | Keys | VOL- and VOL+. They are routed to | | | ESP32-S3-WROOM-1 module and intended for | | | development and testing of a UI for audio | | | applications using a dedicated API. | +--------------------+-------------------------------------------------+ | Boot/Reset Press | | Boot: holding down the Boot key and | | Keys | momentarily pressing the Reset key initiates | | | the firmware upload mode. Then you can upload | | | firmware through the serial port. | | | | Reset: pressing this button alone resets the | | | system. | +--------------------+-------------------------------------------------+ | MicroSD Slot | The development board supports a microSD card | | | in 1-bit mode, and can store or play audio | | | files in the microSD card. | +--------------------+-------------------------------------------------+ | LCD Connector | A FPC connector with 0.5 mm pitch to connect to | | | the LCD extension board. | +--------------------+-------------------------------------------------+ | System LEDs | Two general-purpose LEDs (green and red) | | | controlled by ESP32-S3-WROOM-1 module to | | | indicate certain operation states of the audio | | | application using dedicated API. | +--------------------+-------------------------------------------------+ | Camera Connector | An external camera module that can be connected | | | to the development board with the connector to | | | transmit images. | +--------------------+-------------------------------------------------+</p><h3 id="start-application-development" tabindex="-1">Start Application Development <a class="header-anchor" href="#start-application-development" aria-label="Permalink to &quot;Start Application Development&quot;">​</a></h3><p>Before powering up your board, please make sure that it is in good condition with no obvious signs of damage.</p><h4 id="required-hardware" tabindex="-1">Required Hardware <a class="header-anchor" href="#required-hardware" aria-label="Permalink to &quot;Required Hardware&quot;">​</a></h4><ul><li>1 x ESP32-S3-Korvo-2 V3.0</li><li>1 x Speaker</li><li>2 x USB 2.0 cable (Standard-A to Micro-B)</li></ul><p>Note</p><p>Be sure to use an appropriate USB cable. Some cables are for charging only and do not provide the needed data lines nor work for programming the boards.</p><h4 id="optional-hardware" tabindex="-1">Optional Hardware <a class="header-anchor" href="#optional-hardware" aria-label="Permalink to &quot;Optional Hardware&quot;">​</a></h4><ul><li>1 x MicroSD card</li><li>1 x Li-ion battery</li></ul><p>Note</p><p>Be sure to use a Li-ion battery that has a built-in protection circuit.</p><h4 id="hardware-setup" tabindex="-1">Hardware Setup <a class="header-anchor" href="#hardware-setup" aria-label="Permalink to &quot;Hardware Setup&quot;">​</a></h4><ol><li>Connect the speaker to the <strong>Speaker Output</strong>.</li><li>Plug in the USB cables to the PC and to both USB ports of the board.</li><li>The standby LED (green) should turn on. Assuming that a battery is not connected, the charging LED (red) will blink every couple of seconds.</li><li>Toggle the <strong>Power Switch</strong>.</li><li>The red Power On LED should turn on.</li></ol><h3 id="contents-and-packaging" tabindex="-1">Contents and Packaging <a class="header-anchor" href="#contents-and-packaging" aria-label="Permalink to &quot;Contents and Packaging&quot;">​</a></h3><p>The main board and its accessories can be ordered separately. The accessories include:</p><ul><li>LCD extension board: ESP32-S3-Korvo-2-LCD</li><li>Camera</li><li>Connectors: <ul><li>20-pin FPC cable</li></ul></li><li>Fasteners: <ul><li>Copper standoffs (x8)</li><li>Screws (x4)</li></ul></li></ul><h4 id="retail-orders" tabindex="-1">Retail Orders <a class="header-anchor" href="#retail-orders" aria-label="Permalink to &quot;Retail Orders&quot;">​</a></h4><p>If you order a few samples, each board comes in an individual package in either antistatic bag or any packaging depending on your retailer.</p><p>For retail orders, please go to <a href="https://www.espressif.com/en/company/contact/buy-a-sample" target="_blank" rel="noreferrer">https://www.espressif.com/en/company/contact/buy-a-sample</a>.</p><h4 id="wholesale-orders" tabindex="-1">Wholesale Orders <a class="header-anchor" href="#wholesale-orders" aria-label="Permalink to &quot;Wholesale Orders&quot;">​</a></h4><p>If you order in bulk, the boards come in large cardboard boxes.</p><p>For wholesale orders, please go to <a href="https://www.espressif.com/en/contact-us/sales-questions" target="_blank" rel="noreferrer">https://www.espressif.com/en/contact-us/sales-questions</a>.</p><h2 id="hardware-reference" tabindex="-1">Hardware Reference <a class="header-anchor" href="#hardware-reference" aria-label="Permalink to &quot;Hardware Reference&quot;">​</a></h2><h3 id="block-diagram" tabindex="-1">Block Diagram <a class="header-anchor" href="#block-diagram" aria-label="Permalink to &quot;Block Diagram&quot;">​</a></h3><p>The block diagram below shows the components of ESP32-S3-Korvo-2 V3.0 and their interconnections.</p><p><img src="`+p+`" alt="ESP32-S3-Korvo-2 V3.0 Electrical Block
Diagram" class="align-center"></p><h3 id="notes-on-power-distribution" tabindex="-1">Notes on Power Distribution <a class="header-anchor" href="#notes-on-power-distribution" aria-label="Permalink to &quot;Notes on Power Distribution&quot;">​</a></h3><h4 id="power-supply-over-usb-and-from-battery" tabindex="-1">Power Supply over USB and from Battery <a class="header-anchor" href="#power-supply-over-usb-and-from-battery" aria-label="Permalink to &quot;Power Supply over USB and from Battery&quot;">​</a></h4><p>The main power supply is 5 V and provided by a USB. The secondary power supply is 3.7 V and provided by an optional battery. The USB power itself is fed with a dedicated cable, separating from a USB cable used for an application upload. To further reduce noise from the USB, the battery may be used instead of the USB.</p><p><img src="`+l+`" alt="ESP32-S3-Korvo-2 V3.0 - Dedicated USB Power Supply
Socket" class="align-center"></p><p><img src="`+d+`" alt="ESP32-S3-Korvo-2 V3.0 - Power Supply from a
Battery" class="align-center"></p><p>As shown in the figure below, if the USB power supply and battery power supply are connected at the same time with a high VBUS, an off-state Q14, and an automatic cut-off VBAT, the USB becomes the power supply for the system.</p><p><img src="`+c+`" alt="ESP32-S3-Korvo-2 V3.0 - Power Supply
Options" class="align-center"></p><h4 id="independent-audio-and-digital-power-supply" tabindex="-1">Independent Audio and Digital Power Supply <a class="header-anchor" href="#independent-audio-and-digital-power-supply" aria-label="Permalink to &quot;Independent Audio and Digital Power Supply&quot;">​</a></h4><p>ESP32-S3-Korvo-2 V3.0 features independent power supplies to the audio components and ESP module. This should reduce noise in the audio signal from digital components and improve overall performance of the components.</p><p><img src="`+h+`" alt="ESP32-S3-Korvo-2 V3.0 - Digital Power
Supply" class="align-center"></p><p><img src="`+u+`" alt="ESP32-S3-Korvo-2 V3.0 - Audio Power
Supply" class="align-center"></p><h3 id="gpio-allocation-summary" tabindex="-1">GPIO Allocation Summary <a class="header-anchor" href="#gpio-allocation-summary" aria-label="Permalink to &quot;GPIO Allocation Summary&quot;">​</a></h3><p>The table below provides allocation of GPIOs exposed on terminals of ESP32-S3-WROOM-1 module to control specific components or functions of the board.</p><hr><p>Pin[^1] Pin ES8311 ES7210 Camera LCD Keys MicroSD IO Other Name Expander</p><hr><p>3 EN EN_KEY</p><p>4 IO4 DATA0</p><p>5 IO5 REC, MUTE,<br> PLAY, SET,<br> VOL-, VOL+</p><p>6 IO6 BAT_MEAS_ADC</p><p>7 IO7 CMD</p><p>8 IO15 CLK</p><p>9 IO16 I2S0_MCLK MCLK</p><p>10 IO17 I2C_SDA I2C_SDA SIOD TP_I2C_SDA I2C_SDA</p><p>11 IO18 I2C_CLK I2C_CLK SIOC TP_I2C_CLK I2C_CLK</p><p>12 IO8 I2S0_DSDIN</p><p>13 IO19 ESP_USB_DM (Reserve)</p><p>14 IO20 ESP_USB_DP (Reserve)</p><p>15 IO3 D5</p><p>16 IO46 NC</p><p>17 IO9 I2S0_SCLK SCLK</p><p>18 IO10 SDOUT</p><p>19 IO11 PCLK</p><p>20 IO12 D6</p><p>21 IO13 D2</p><p>22 IO14 D4</p><p>23 IO21 VSYNC</p><p>24 IO47 D3</p><p>25 IO48 PA_CTRL</p><p>26 IO45 I2S0_LRCK LRCK</p><p>27 IO0 LCD_SPI_SDA BOOT_KEY</p><p>28 IO35 NC</p><p>29 IO36 NC</p><p>30 IO37 NC</p><p>31 IO38 HREF</p><p>32 IO39 D9</p><p>33 IO40 XCLK</p><p>34 IO41 D8</p><p>35 IO42 D7</p><p>36 RXD0 ESP0_UART0_RX</p><p>37 TXD0 ESP0_UART0_TX</p><p>38 IO2 LCD_SPI_DC</p><p>39 IO1 LCD_SPI_CLK</p><h2 id="_41-epad" tabindex="-1">41 EPAD <a class="header-anchor" href="#_41-epad" aria-label="Permalink to &quot;41        EPAD&quot;">​</a></h2><p>: ESP32-S3-WROOM-1 GPIO Allocation</p><p>The GPIOs allocated to the IO expander are further expanded to multiple GPIOs.</p><hr><p>IO Expander Pin Pin Name LCD Other</p><hr><p>4 P0 PA_CTRL</p><p>5 P1 LCD_CTRL</p><p>6 P2 LCD_RST</p><p>7 P3 LCD_CS</p><p>9 P4 TP_INT</p><p>10 P5 PERI_PWR_ON</p><p>11 P6 LED1</p><h2 id="_12-p7-led2" tabindex="-1">12 P7 LED2 <a class="header-anchor" href="#_12-p7-led2" aria-label="Permalink to &quot;12                P7                                  LED2&quot;">​</a></h2><p>: IO Expander GPIO Allocation</p><h3 id="connector" tabindex="-1">Connector <a class="header-anchor" href="#connector" aria-label="Permalink to &quot;Connector&quot;">​</a></h3><h4 id="camera-connector" tabindex="-1">Camera Connector <a class="header-anchor" href="#camera-connector" aria-label="Permalink to &quot;Camera Connector&quot;">​</a></h4><p>No. Camera Signal ESP32-S3 Pin</p><hr><p>1 SIOD GPIO17 2 SIOC GPIO18 3 D5 GPIO3 4 PCLK GPIO11 5 D6 GPIO12 6 D2 GPIO13 7 D4 GPIO14 8 VSYNC GPIO21 9 D3 GPIO47 10 HREF GPIO38 11 D9 GPIO39 12 XCLK GPIO40 13 D8 GPIO41 14 D7 GPIO42</p><h4 id="lcd-connector" tabindex="-1">LCD Connector <a class="header-anchor" href="#lcd-connector" aria-label="Permalink to &quot;LCD Connector&quot;">​</a></h4><p>No. LCD Signal ESP32-S3 Pin</p><hr><p>1 TP_I2C_SDA GPIO17 2 TP_I2C_CLK GPIO18 3 LCD_SPI_SDA GPIO0 4 LCD_SPI_DC GPIO2 5 LCD_SPI_CLK GPIO1</p><p>+-----+----------------+-------------+ | No. | LCD Signal | IO Expander | +=====+================+=============+ | 1 | ESP_LCD_CTRL | &gt; P1 | +-----+----------------+-------------+ | 2 | ESP_LCD_RST | P2 | +-----+----------------+-------------+ | 3 | ESP_LCD_CS | P3 | +-----+----------------+-------------+ | 4 | ESP_TP_INT | P4 | +-----+----------------+-------------+</p><h3 id="aec-path" tabindex="-1">AEC Path <a class="header-anchor" href="#aec-path" aria-label="Permalink to &quot;AEC Path&quot;">​</a></h3><p>AEC path provides reference signals for AEC algorithm.</p><p>ESP32-S3-Korvo-2 provides two compatible echo reference signal source designs. One is Codec (ES8311) DAC output (DAC_AOUTLN/DAC_AOUTLP), the other is PA (NS4150) output (PA_OUTL+/PA_OUTL-). The former is the default and recommended selection. Resistors R132 and R140 marked NC (no component) in the figure below should not be installed.</p><p>The echo reference signal is collected by ADC_MIC3P/ADC_MIC3N of ADC (ES7210) and then sent back to ESP32-S3 for AEC algorithm.</p><p><img src="`+m+`" alt="ESP32-S3-Korvo-2 V3.0 - AEC Codec DAC Output (click to
enlarge)" class="align-center"></p><p><img src="`+P+`" alt="ESP32-S3-Korvo-2 V3.0 - AEC PA Output (click to
enlarge)" class="align-center"></p><p><img src="`+f+`" alt="ESP32-S3-Korvo-2 V3.0 - AEC Reference Signal Collection (click to
enlarge)" class="align-center"></p><h3 id="hardware-setup-options" tabindex="-1">Hardware Setup Options <a class="header-anchor" href="#hardware-setup-options" aria-label="Permalink to &quot;Hardware Setup Options&quot;">​</a></h3><h4 id="using-automatic-upload" tabindex="-1">Using Automatic Upload <a class="header-anchor" href="#using-automatic-upload" aria-label="Permalink to &quot;Using Automatic Upload&quot;">​</a></h4><p>Entering of the ESP board into upload mode may be done in two ways:</p><ul><li>Manually by pressing both Boot and RST keys and then releasing first RST and then Boot key.</li><li>Automatically by software performing the upload. The software is using DTR and RTS signals of the serial interface to control states of EN and IO0 of the ESP board. For details see <a href="https://dl.espressif.com/dl/schematics/SCH_ESP32-S3-KORVO-2_V3_0_20210918.pdf" target="_blank" rel="noreferrer">ESP32-S3-Korvo-2 V3.0 Schematic</a> (PDF).</li></ul><h3 id="allocation-of-esp-pins-to-test-points" tabindex="-1">Allocation of ESP Pins to Test Points <a class="header-anchor" href="#allocation-of-esp-pins-to-test-points" aria-label="Permalink to &quot;Allocation of ESP Pins to Test Points&quot;">​</a></h3><p>This section describes the allocation of test points available on the ESP32-S3-Korvo-2 V3.0 board.</p><p>The test points are bare through hole solder pads and have a standard 2.54 mm/0.1&quot; pitch. You may need to populate them with pin headers or sockets for easy connection of external hardware.</p><h4 id="codec-test-point-j15" tabindex="-1">Codec Test Point/J15 <a class="header-anchor" href="#codec-test-point-j15" aria-label="Permalink to &quot;Codec Test Point/J15&quot;">​</a></h4><p>No. Codec Pin ESP32-S3 Pin</p><hr><p>1 MCLK GPIO16 2 SCLK GPIO9 3 LRCK GPIO45 4 DSDIN GPIO8 5 ASDOUT -- 6 GND --</p><h4 id="adc-test-point-j16" tabindex="-1">ADC Test Point/J16 <a class="header-anchor" href="#adc-test-point-j16" aria-label="Permalink to &quot;ADC Test Point/J16&quot;">​</a></h4><p>No. ADC Pin ESP32-S3 Pin</p><hr><p>1 MCLK GPIO16 2 SCLK GPIO9 3 LRCK GPIO45 4 SDOUT GPIO10 5 INT -- 6 GND --</p><h4 id="uart-test-point-j17" tabindex="-1">UART Test Point/J17 <a class="header-anchor" href="#uart-test-point-j17" aria-label="Permalink to &quot;UART Test Point/J17&quot;">​</a></h4><p>No. UART Pin</p><hr><p>1 3.3V 2 TXD 3 RXD 4 IO0 5 EN 6 GND</p><h4 id="i2c-test-point-j18" tabindex="-1">I2C Test Point/J18 <a class="header-anchor" href="#i2c-test-point-j18" aria-label="Permalink to &quot;I2C Test Point/J18&quot;">​</a></h4><p>No. I2C Pin ESP32-S3 Pin</p><hr><p>1 3.3V -- 2 CLK GPIO18 3 SDA GPIO17 4 GND --</p><h2 id="hardware-revision-details" tabindex="-1">Hardware Revision Details <a class="header-anchor" href="#hardware-revision-details" aria-label="Permalink to &quot;Hardware Revision Details&quot;">​</a></h2><p>This is the first revision of this board released.</p><h2 id="related-documents" tabindex="-1">Related Documents <a class="header-anchor" href="#related-documents" aria-label="Permalink to &quot;Related Documents&quot;">​</a></h2><ul><li><a href="https://www.espressif.com/sites/default/files/documentation/esp32-s3_datasheet_en.pdf" target="_blank" rel="noreferrer">ESP32-S3 Series Datasheet</a> (PDF)</li><li><a href="https://www.espressif.com/sites/default/files/documentation/esp32-s3-wroom-1_wroom-1u_datasheet_en.pdf" target="_blank" rel="noreferrer">ESP32-S3-WROOM-1/1U Datasheet</a> (PDF)</li><li><a href="https://dl.espressif.com/dl/schematics/SCH_ESP32-S3-KORVO-2_V3_0_20210918.pdf" target="_blank" rel="noreferrer">ESP32-S3-Korvo-2 V3.0 Schematic</a> (PDF)</li><li><a href="https://dl.espressif.com/dl/schematics/PCB_ESP32-S3-KORVO-2_V3.0_20210918.pdf" target="_blank" rel="noreferrer">ESP32-S3-Korvo-2 V3.0 PapplicationsCB Layout</a> (PDF)</li></ul><p>For further design documentation for the board, please contact us at <a href="./sales@espressif.com.html">sales@espressif.com</a>.</p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>All of the configurations presented below can be tested by running the following commands:</p><pre><code> ./tools/configure.sh esp32s3-korvo-2:&lt;config_name&gt;
 make flash ESPTOOL_PORT=/dev/ttyUSB0 -j(nproc)
</code></pre><p>Where &lt;config_name&gt; is the name of board configuration you want to use, i.e.: nsh, buttons, wifi... Then use a serial console terminal like <code>picocom</code> configured to 115200 8N1.</p><h3 id="audio" tabindex="-1">audio <a class="header-anchor" href="#audio" aria-label="Permalink to &quot;audio&quot;">​</a></h3><p>This configuration uses the I2S peripheral and the ES8311 audio codec to play an audio file.</p><p><strong>Simple HTTP server</strong></p><p>Prepare a PCM-encoded ([.wav]{.title-ref}) audio file with 16 or 24 bits/sample (sampled at 16~48kHz). This file must be placed into a folder in a computer that could be accessed on the same Wi-Fi network the ESP32 will be connecting to.</p><p>Python provides a simple HTTP server. <code>cd</code> to the audio file folder on the PC and run:</p><pre><code> python3 -m http.server
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/)
</code></pre><p>Look for your PC IP address and test playing the prepared audio on your browser:</p><p><img src="`+o+`" alt="" class="align-center"></p><p>After successfully built and flashed, connect the board to the Wi-Fi network:</p><pre><code>nsh&gt; wapi psk wlan0 mypasswd 3
nsh&gt; wapi essid wlan0 myssid 1
nsh&gt; renew wlan0
</code></pre><p>Once connected, open NuttX&#39;s player and play the file according to the filename and the IP address of the HTTP server:</p><pre><code>nsh&gt; nxplayer
nxplayer&gt; play http://192.168.1.239:8000/tones.wav
</code></pre><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled in UART0, exposed via USB connection by means of CP2102 converter, at 115200 bps).</p><h3 id="rtptools" tabindex="-1">rtptools <a class="header-anchor" href="#rtptools" aria-label="Permalink to &quot;rtptools&quot;">​</a></h3><p><strong>RTP Tools</strong> is a set of small applications that can be used for processing RTP data.</p><ul><li><code>rtpplay</code>: play-back RTP sessions recorded by <code>rtpdump</code></li><li><code>rtpsend</code>: generate RTP packets from the textual description, generated by hand or <code>rtpdump</code></li><li><code>rtpdump</code>: parse and print RTP packets, generating output files suitable for <code>rtpplay</code> and <code>rtpsend</code></li><li><code>rtptrans</code>: RTP translator between unicast and multicast networks</li></ul><p>This set of tools enables receiving RTP packets and writing the content to a FIFO. <code>nxplayer</code> then reads from the FIFO, enabling using NuttX as a RTP receiver for audio applications.</p><p>This is particularly useful to stream uncompressed audio through Wi-Fi to remote speakers.</p><h3 id="sdmmc" tabindex="-1">sdmmc <a class="header-anchor" href="#sdmmc" aria-label="Permalink to &quot;sdmmc&quot;">​</a></h3><p>Based on nsh. Support for sdmmc driver is enabled with following settings:</p><p>Enable sdmmc driver:</p><pre><code>CONFIG_ESP32S3_SDMMC=y
</code></pre><p>GPIO definitions:</p><pre><code>CONFIG_ESP32S3_SDMMC_CMD=7
CONFIG_ESP32S3_SDMMC_CLK=15
CONFIG_ESP32S3_SDMMC_D0=4
</code></pre><p>ESP32-S3-Korvo-2&#39;s MicroSD supports only one data port:</p><pre><code>CONFIG_SDIO_WIDTH_D1_ONLY=y
</code></pre><p>Multiblock limitation due to hardware:</p><pre><code>CONFIG_MMCSD_MULTIBLOCK_LIMIT=128
</code></pre><p>Use sched_yield instead of usleep due to long tick time:</p><pre><code>CONFIG_MMCSD_CHECK_READY_STATUS_WITHOUT_SLEEP=y
</code></pre><p>Format and mount the SD/MMC device with following commands:</p><pre><code>mkfatfs -F 32 -r /mnt /dev/mmcsd1
mount -t vfat /dev/mmcsd1 /mnt
</code></pre><p>FAT filesystem is enabled in the default configuration. Other filesystems may also work.</p><p><strong>Connect to your Network</strong></p><p>Connect the ESP32-S3-Korvo-2 board to your network to be able to receive RTP packets:</p><pre><code>nsh&gt; wapi psk wlan0 mypasswd 3
nsh&gt; wapi essid wlan0 myssid 1
nsh&gt; renew wlan0
nsh&gt; ifconfig
wlan0   Link encap:Ethernet HWaddr aa:bb:cc:dd:ff:ee at RUNNING mtu 1504
        inet addr:192.168.1.38 DRaddr:192.168.1.1 Mask:255.255.255.0

            IPv4   TCP   UDP  ICMP
Received     00d5  0000  00d4  0000
Dropped      0001  0000  0000  0000
IPv4        VHL: 0000   Frg: 0000
Checksum   0000  0000  0000  ----
TCP         ACK: 0000   SYN: 0000
            RST: 0000  0000
Type       0000  ----  ----  0000
Sent         0002  0000  0002  0000
Rexmit     ----  0000  ----  ----
</code></pre><p>Please, check your device&#39;s IP (<code>192.168.1.38</code> in this example): RTP packets will be sent to it.</p><p><strong>Sending Audio through pulseaudio</strong></p><p><code>pulseaudio</code> is able to send RTP packets through the network:</p><pre><code>pactl load-module module-null-sink sink_name=rtp format=s16be channels=2 rate=44100 sink_properties=&quot;device.description=&#39;RTP&#39;&quot;
pactl load-module module-rtp-send source=rtp.monitor format=s16le destination_ip=192.168.1.38 port=46998
</code></pre><p>The loaded sink is used to send PC audio through RTP, using the <code>192.168.1.38:46998</code> (boards&#39;s IP in this example, please adjust accordingly).</p><p><strong>Receiving the RTP packets</strong></p><p>RTP packets will be written to a FIFO: create the FIFO and run <code>rtpdump</code> on background:</p><pre><code>nsh&gt; mkfifo temp
nsh&gt; rtpdump -F payload -o temp /46998 &amp;
rtpdump [31:100]
</code></pre><p><strong>Playing Audio</strong></p><p>Finally, run <code>nxplayer</code> to play from the FIFO:</p><pre><code>nsh&gt; nxplayer
NxPlayer version 1.05
h for commands, q to exit

nxplayer&gt; playraw temp 2 16 44100
</code></pre><p>This board contains the ES8311 audio codec. Please attach your passive loudspeaker to the Speaker Output Port to listen to the audio content streamed through the Wi-Fi in CD quality!</p><p>[^1]: Pin - ESP32-S3-WROOM-1 module pin number, GND and power supply pins are not listed.</p>`,207)]))}const v=a(S,[["render",g]]);export{k as __pageData,v as default};
