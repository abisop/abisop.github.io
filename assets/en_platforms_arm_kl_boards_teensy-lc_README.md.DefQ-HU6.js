import{_ as a,c as t,al as o,o as n}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"Teensy LC README","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/kl/boards/teensy-lc/README.md","filePath":"en/platforms/arm/kl/boards/teensy-lc/README.md"}'),r={name:"en/platforms/arm/kl/boards/teensy-lc/README.md"};function l(s,e,i,d,h,c){return n(),t("div",null,e[0]||(e[0]=[o('<h1 id="teensy-lc-readme" tabindex="-1">Teensy LC README <a class="header-anchor" href="#teensy-lc-readme" aria-label="Permalink to &quot;Teensy LC README&quot;">​</a></h1><p>This is the README file for NuttX on the PJRC Teensy LC. The Teensy LC is a DIP style breakout board for the MKL25Z64 and comes with a USB based bootloader. Contributed by Michael Hope.</p><h1 id="development-environment" tabindex="-1">Development Environment <a class="header-anchor" href="#development-environment" aria-label="Permalink to &quot;Development Environment&quot;">​</a></h1><p>All testing was done with the GNU ARM Embedded 4.9 toolchain on Linux. See <a href="https://developer.arm.com/open-source/gnu-toolchain/gnu-rm" target="_blank" rel="noreferrer">https://developer.arm.com/open-source/gnu-toolchain/gnu-rm</a> to download.</p><p>Once you&#39;ve configured and built NuttX, flash the resulting nuttx.hex file to the board using the Teensy Loader Application.</p><h1 id="leds" tabindex="-1">LEDs <a class="header-anchor" href="#leds" aria-label="Permalink to &quot;LEDs&quot;">​</a></h1><p>The Teensy LC has a single LED. If CONFIG_ARCH_LEDS is defined, then NuttX will update the LED as the board boots. The summary is:</p><ul><li>LED off: board booting</li><li>LED on: initial stack created</li><li>LED flashing: panic.</li></ul><p>See <code>include/board.h</code> for details.</p><h1 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h1><p>The serial console is mapped to UART0 and appears on pins 0 (RX) and 1 (TX). Consider using a 3.3 V USB to serial adapter such as the Sparkfun #9717 FTDI cable.</p>',11)]))}const u=a(r,[["render",l]]);export{m as __pageData,u as default};
