import{_ as t,c as o,al as i,o as r}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"Misoc README","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/misco/lm32/boards/misoc/README.md","filePath":"en/platforms/misco/lm32/boards/misoc/README.md"}'),a={name:"en/platforms/misco/lm32/boards/misoc/README.md"};function l(n,e,s,d,c,u){return r(),o("div",null,e[0]||(e[0]=[i(`<h1 id="misoc-readme" tabindex="-1">Misoc README <a class="header-anchor" href="#misoc-readme" aria-label="Permalink to &quot;Misoc README&quot;">​</a></h1><p>This README applies to a port to NuttX running on a Qemu LM32 system. You can find the Qemu setup at <a href="https://bitbucket.org/key2/qemu" target="_blank" rel="noreferrer">https://bitbucket.org/key2/qemu</a></p><p>This initial release supports two UARTs, but does not have a system timer or other peripherals. More to come.</p><h1 id="buildroot-toolchain" tabindex="-1">Buildroot Toolchain <a class="header-anchor" href="#buildroot-toolchain" aria-label="Permalink to &quot;Buildroot Toolchain&quot;">​</a></h1><p>A GNU GCC-based toolchain is assumed. The PATH environment variable should be modified to point to the correct path to the LM32 GCC toolchain (if different from the default in your PATH variable).</p><p>If you have no LM32 toolchain, one can be cloned from the NuttX Bitbucket GIT repository (<a href="https://bitbucket.org/nuttx/buildroot" target="_blank" rel="noreferrer">https://bitbucket.org/nuttx/buildroot</a>). This GNU toolchain builds and executes in the Linux or Cygwin environment.</p><ol><li><p>You must have already configured NuttX in <code>&lt;some-dir&gt;</code>/nuttx.</p><p>tools/configure.sh misoc:<code>&lt;sub-dir&gt;</code> make oldconfig context</p></li><li><p>Clone the latest buildroot package into <code>&lt;some-dir&gt;</code>/buildroot</p><p>git clone git@bitbucket.org:nuttx/buildroot.git <code>&lt;some-dir&gt;</code>/buildroot</p><p>or</p><p>git clone <a href="https://patacongo%5C@bitbucket.org/nuttx/buildroot.git" target="_blank" rel="noreferrer">https://patacongo\\@bitbucket.org/nuttx/buildroot.git</a><code>&lt;some-dir&gt;</code>/buildroot</p></li><li><p>cd <code>&lt;some-dir&gt;</code>/buildroot</p></li><li><p>cp lm32-elf-defconfig-6.1.0 .config</p></li><li><p>make oldconfig</p></li><li><p>make</p></li><li><p>By default, the tools will be at the absolute path:</p><p><code>&lt;some-dir&gt;</code>/buildroot/build_lm32/staging_dir/bin</p><p>Or the NuttX relative path:</p><p>../buildroot/build_lm32/staging_dir/bin</p><p>Make sure that he PATH variable includes the path to the newly built binaries.</p></li></ol><p>See the file boards/README.txt in the buildroot source tree. That has more detailed PLUS some special instructions that you will need to follow if you are building a LM32 toolchain for Cygwin under Windows. Also included in that README file is a FAQ of frequent build issues that their work-arounds.</p><p>In order to use the buildroot toolchain, you also must set the following in your .config file:</p><pre><code>CONFIG_LM3S_TOOLCHAIN_BUILDROOT=y
</code></pre><h1 id="boards-misoc-lm32-misoc-include-generated" tabindex="-1">boards/misoc/lm32/misoc/include/generated <a class="header-anchor" href="#boards-misoc-lm32-misoc-include-generated" aria-label="Permalink to &quot;boards/misoc/lm32/misoc/include/generated&quot;">​</a></h1><p>In order to build this configuration, you must provide the boards/misoc/lm32/misoc/include/generated directory. It contains the generated Misoc files and may be a symbolic link. The base configuration will NOT build without this directory!</p><p>There is a sample generated directory at boards/misoc/include/generated-sample. If you want to do a test build without generating the architecture, then you can simply link this sample directory like:</p><pre><code>$ ln -s boards/misoc/lm32/misoc/include/generated-sample boards/misoc/lm32/misoc/include/generated
</code></pre><p>That should permit a test build.</p>`,15)]))}const h=t(a,[["render",l]]);export{m as __pageData,h as default};
