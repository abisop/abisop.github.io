import{_ as a,c as s,al as t,o}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"Olimex STM32-H407","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32f4/boards/olimex-stm32-h407/index.md","filePath":"en/platforms/arm/stm32f4/boards/olimex-stm32-h407/index.md"}'),r={name:"en/platforms/arm/stm32f4/boards/olimex-stm32-h407/index.md"};function n(i,e,l,d,h,p){return o(),s("div",null,e[0]||(e[0]=[t('<h1 id="olimex-stm32-h407" tabindex="-1">Olimex STM32-H407 <a class="header-anchor" href="#olimex-stm32-h407" aria-label="Permalink to &quot;Olimex STM32-H407&quot;">​</a></h1><p>chip:stm32, chip:stm32f4, chip:stm32f407</p><p>The Olimex STM32-H407 configuration is based on stm32Fdiscovery and Olimex STM32-H405.</p><p>The H407 was programmed with ST-LINK/V2 from both Win8.1 and Ubuntu 14.04 This release provides baseline for H407 12MHZ clock in include/board.h</p><p>nsh - Only basic shell response tested on USART2 nsh_uext - Basic shell response tested on USART6 (UEXT)</p><h2 id="leds" tabindex="-1">LEDs <a class="header-anchor" href="#leds" aria-label="Permalink to &quot;LEDs&quot;">​</a></h2><p>The H407 board has 1 Status LED;</p><h2 id="sdcard" tabindex="-1">SDCard <a class="header-anchor" href="#sdcard" aria-label="Permalink to &quot;SDCard&quot;">​</a></h2><p>Expects to be plugged in else hangs. TODO: Shouldn&#39;t hang. SDIO 4bit with pulls/downs on pins. Doesn&#39;t have a SD card detect pin.</p><h2 id="uarts" tabindex="-1">UARTs <a class="header-anchor" href="#uarts" aria-label="Permalink to &quot;UARTs&quot;">​</a></h2><p>On the H407 board, ?? all uarts are available for pin mappings USART2 can be used for nsh console like on Discovery board, or you can use USART6 exposed via UEXT connector.</p><p>Olimex offers MOD-RS232 voltage level converter for the UEXT so it can be attached to computer serial port.</p>',12)]))}const u=a(r,[["render",n]]);export{c as __pageData,u as default};
