import{_ as e,c as o,al as a,o as n}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"nxdiag NuttX Diagnostic Tool","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/system/nxdiag/index.md","filePath":"en/applications/system/nxdiag/index.md"}'),i={name:"en/applications/system/nxdiag/index.md"};function s(r,t,d,p,c,l){return n(),o("div",null,t[0]||(t[0]=[a(`<h1 id="nxdiag-nuttx-diagnostic-tool" tabindex="-1"><code>nxdiag</code> NuttX Diagnostic Tool <a class="header-anchor" href="#nxdiag-nuttx-diagnostic-tool" aria-label="Permalink to &quot;\`nxdiag\` NuttX Diagnostic Tool&quot;">​</a></h1><p>The NuttX Diagnostic Tool (Nxdiag) is a command line tool that can be used to gather information about the NuttX and host systems. It also can be used to run a tests to verify that the vendor&#39;s tools are properly installed and configured.</p><p>Its primary purpose is to gather information that can be used to debug problems and ease the process of reporting bugs for uninexperienced users.</p><p>This tool uses a Python script (<code>nuttx/tools/host_info_dump.py</code>) to gather information about the host system during build and a C program to gather information about the NuttX system and display all available information. For more information about the python script, check the command line options and code comments of <code>host_info_dump.py</code>.</p><p>Alternatively, <code>host_info</code> target can be used without enabling nxdiag application and reflashing to get information about system. Target can work after configuration step and prints information about the NuttX and host systems.</p><div class="note"><div class="title"><p>Note</p></div><p>Nxdiag requires Python 3.6 or later. On Linux distributions, the <code>distro</code> Python module is recommended as it provides more accurate information about the host system.</p></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>This page shows <code>nxdiag</code> options. Note that some options are only available if the respective configuration options are enabled (see <code>cmdtable &lt;nxdiagcmddependencies&gt;</code>). For a complete list of <code>nxdiag</code> options available to the system, just run <code>nxdiag</code>:</p><pre><code>Usage: nxdiag [options]
Options:
        -h                                 Show this message
        -n, --nuttx                        Output the NuttX operational system information.
        -f, --flags                        Output the NuttX compilation and linker flags used.
        -c, --config                       Output the NuttX configuration options used.
        -o, --host-os                      Output the host system operational system information.
        -p, --host-path                    Output the host PATH environment variable.
        -k, --host-packages                Output the host installed system packages.
        -m, --host-modules                 Output the host installed Python modules.
        -v, --vendor-specific              Output vendor specific information.
        --all                              Output all available information.
</code></pre><p>An example output can be observed <a href="https://pastebin.com/HSw1EvhR" target="_blank" rel="noreferrer">here</a>.</p><blockquote><p>config.rst</p></blockquote>`,11)]))}const m=e(i,[["render",s]]);export{h as __pageData,m as default};
