import{_ as a,c as e,al as t,o as n}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"V9FS","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/filesystem/v9fs.md","filePath":"en/components/filesystem/v9fs.md"}'),o={name:"en/components/filesystem/v9fs.md"};function i(p,s,l,r,c,d){return n(),e("div",null,s[0]||(s[0]=[t(`<h1 id="v9fs" tabindex="-1">V9FS <a class="header-anchor" href="#v9fs" aria-label="Permalink to &quot;V9FS&quot;">​</a></h1><p>V9FS is a remote file system based on the 9P2000.L protocol.</p><h1 id="adding-v9fs-to-the-nuttx-configuration" tabindex="-1">Adding V9FS to the NuttX Configuration <a class="header-anchor" href="#adding-v9fs-to-the-nuttx-configuration" aria-label="Permalink to &quot;Adding V9FS to the NuttX Configuration&quot;">​</a></h1><p>The V9FS client is easy to add to your configuration. Just add <code>CONFIG_FS_V9FS</code> to <code>nuttx/.config</code>.</p><p>In order to fully run V9FS, you also need to select a transport layer driver. The two currently available are:</p><blockquote><ul><li><strong>VIRTIO</strong> -&gt; <code>CONFIG_V9FS_VIRTIO_9P=y</code></li><li><strong>SOCKET</strong> -&gt; <code>CONFIG_V9FS_SOCKET_9P=y</code></li></ul></blockquote><h1 id="nfs-mount-command" tabindex="-1">NFS Mount Command <a class="header-anchor" href="#nfs-mount-command" aria-label="Permalink to &quot;NFS Mount Command&quot;">​</a></h1><p>In V9FS, we have some special parameters</p><blockquote><ul><li><code>uname</code>. Used to indicate the user identity of the client</li><li><code>aname</code>. Optional, it specifies the file tree that the client requests to access</li><li><code>trans</code>. Selects the transport layer (virtio/socket)</li><li><code>msize</code>. The maximum size of the message</li><li><code>tag</code>. The tag of the mount point</li></ul></blockquote><p>Different transport layers have different requirements for parameter passing. Here are some examples:</p><h2 id="qemu-virtio" tabindex="-1">Qemu + VIRTIO <a class="header-anchor" href="#qemu-virtio" aria-label="Permalink to &quot;Qemu + VIRTIO&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mount -t v9fs -o trans=virtio,tag=&lt;mount_tag&gt; /dir</span></span></code></pre></div><p>Similarly, we need to bring the corresponding parameters in qemu</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-fsdev local,security_model=none,id=fsdev1,path=&lt;share-path&gt; \\</span></span>
<span class="line"><span>-device virtio-9p-device,id=fs1,fsdev=fsdev1,mount_tag=&lt;mount_tag&gt;</span></span></code></pre></div><p>For how to start virtio-9p in QEMU, please refer to the document:</p><blockquote><ul><li><a href="https://wiki.qemu.org/Documentation/9psetup" target="_blank" rel="noreferrer">https://wiki.qemu.org/Documentation/9psetup</a></li></ul></blockquote><h2 id="socket" tabindex="-1">Socket <a class="header-anchor" href="#socket" aria-label="Permalink to &quot;Socket&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mount -t v9fs -o trans=socket,tag=&lt;IP Address&gt;:[Port Default 563],aname=[path] /dir</span></span></code></pre></div><p>There are many types of 9P socket servers. Here we use R9-fileserver (a cross-platform 9p server based on Rust <a href="https://github.com/crafcat7/R9-fileserver" target="_blank" rel="noreferrer">https://github.com/crafcat7/R9-fileserver</a>)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo ./ya-vm-file-server --network-address &lt;IP Address&gt;:&lt;Server Port&gt; --mount-point &lt;share-path&gt;</span></span></code></pre></div><h2 id="result" tabindex="-1">Result <a class="header-anchor" href="#result" aria-label="Permalink to &quot;Result&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NuttShell (NSH)</span></span>
<span class="line"><span>nsh&gt; mkdir mnt</span></span>
<span class="line"><span>nsh&gt; </span></span>
<span class="line"><span>nsh&gt; ls mnt</span></span>
<span class="line"><span>/mnt:</span></span>
<span class="line"><span>nsh&gt; mount -t v9fs -o trans=virtio,tag=hostshare /mnt/v9fs</span></span>
<span class="line"><span>nsh&gt; </span></span>
<span class="line"><span>nsh&gt; ls /mnt/v9fs</span></span>
<span class="line"><span>/mnt/v9fs:</span></span>
<span class="line"><span>sdcard/</span></span>
<span class="line"><span>mnt/</span></span>
<span class="line"><span>nsh&gt; </span></span>
<span class="line"><span>nsh&gt; echo &quot;This is a test&quot; &gt;/mnt/v9fs/testfile.txt</span></span>
<span class="line"><span>nsh&gt; ls -l /mnt/v9fs</span></span>
<span class="line"><span>/mnt/v9fs:</span></span>
<span class="line"><span>drwxrwxrwx    1000    1000        4096 sdcard/</span></span>
<span class="line"><span>-rw-rw-rw-    1000    1000          15 testfile.txt</span></span>
<span class="line"><span>drwxrwxrwx    1000    1000        4096 mnt/</span></span>
<span class="line"><span>nsh&gt; </span></span>
<span class="line"><span>nsh&gt; cat /mnt/v9fs/testfile.txt</span></span>
<span class="line"><span>This is a test</span></span>
<span class="line"><span>nsh&gt;</span></span></code></pre></div>`,22)]))}const m=a(o,[["render",i]]);export{u as __pageData,m as default};
