import{_ as t,c as i,al as a,o}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"mtdpart MTD Partition Test","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/mtdpart/index.md","filePath":"en/applications/examples/mtdpart/index.md"}'),d={name:"en/applications/examples/mtdpart/index.md"};function s(c,e,r,n,l,T){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="mtdpart-mtd-partition-test" tabindex="-1"><code>mtdpart</code> MTD Partition Test <a class="header-anchor" href="#mtdpart-mtd-partition-test" aria-label="Permalink to &quot;`mtdpart` MTD Partition Test&quot;">​</a></h1><p>This examples provides a simple test of MTD partition logic.</p><ul><li><code>CONFIG_EXAMPLES_MTDPART</code> – Enables the MTD partition test example.</li><li><code>CONFIG_EXAMPLES_MTDPART_ARCHINIT</code> – The default is to use the RAM MTD device at <code>drivers/mtd/rammtd.c</code>. But an architecture-specific MTD driver can be used instead by defining <code>CONFIG_EXAMPLES_MTDPART_ARCHINIT</code>. In this case, the initialization logic will call <code>mtdpart_archinitialize()</code> to obtain the MTD driver instance.</li><li><code>CONFIG_EXAMPLES_MTDPART_NPARTITIONS</code> – This setting provides the number of partitions to test. The test will divide the reported size of the MTD device into equal-sized sub-regions for each test partition. Default: <code>3</code>.</li></ul><p>When <code>CONFIG_EXAMPLES_MTDPART_ARCHINIT</code> is not defined, this test will use the RAM MTD device at <code>drivers/mtd/rammtd.c</code> to simulate FLASH. The size of the allocated RAM drive will be: <code>CONFIG_EXMPLES_RAMMTD_ERASESIZE * CONFIG_EXAMPLES_MTDPART_NEBLOCKS</code>.</p><ul><li><code>CONFIG_EXAMPLES_MTDPART_ERASESIZE</code> – This value gives the size of one erase block in the MTD RAM device. This must exactly match the default configuration in <code>drivers/mtd/rammtd.c</code>!</li><li><code>CONFIG_EXAMPLES_MTDPART_NEBLOCKS</code> – This value gives the number of erase blocks in MTD RAM device.</li></ul>',5)]))}const m=t(d,[["render",s]]);export{p as __pageData,m as default};
