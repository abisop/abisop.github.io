import{_ as e,c as s,al as n,o as t}from"./chunks/framework.NFAqBSgQ.js";const i="/assets/xiao-ra4m1.CMKkVuV_.jpg",m=JSON.parse('{"title":"Seeed Studio XIAO RA4M1","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/ra4m1/boards/xiao-ra4m1/index.md","filePath":"en/platforms/arm/ra4m1/boards/xiao-ra4m1/index.md"}'),o={name:"en/platforms/arm/ra4m1/boards/xiao-ra4m1/index.md"};function p(l,a,r,d,c,h){return t(),s("div",null,a[0]||(a[0]=[n('<h1 id="seeed-studio-xiao-ra4m1" tabindex="-1">Seeed Studio XIAO RA4M1 <a class="header-anchor" href="#seeed-studio-xiao-ra4m1" aria-label="Permalink to &quot;Seeed Studio XIAO RA4M1&quot;">​</a></h1><p>The <a href="https://wiki.seeedstudio.com/getting_started_xiao_ra4m1/" target="_blank" rel="noreferrer">Seeed Studio XIAO RA4M1</a> is a general purpose board supplied by Seeed Studio and it is compatible with the Renesas RA4M1 ecosystem, sharing the same MCU as Arduino R4 Minima (R7FA4M1AB3CFM).</p><p><img src="'+i+`" alt="" class="align-center"></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Renesas RA4M1, ARM® Dual Cortex-M4 @ 48MHz</li><li>32kB SRAM, 256KkB Flash, 8KB EEPROM</li><li>Security: AES128/256</li><li>USB Type-C interface</li><li>19 Pins:14x Analog,19x Digital, 2x IIC, 2x UART, 2x SPI</li><li>1 user LED, 1 power LED，1 RGB LED (WS2812)</li><li>1 RESET button, 1 BOOT button</li></ul><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>By default, a serial console appears on pins 6 (TX GPIO) and pin 7 (RX GPIO). This console runs a 115200-8N1.</p><h2 id="user-led" tabindex="-1">User LED <a class="header-anchor" href="#user-led" aria-label="Permalink to &quot;User LED&quot;">​</a></h2><p>The USER LED, the yellow LED on the XIAO RA4M1, is connected to P011 according to the schematic diagram.</p><h2 id="buttons" tabindex="-1">Buttons <a class="header-anchor" href="#buttons" aria-label="Permalink to &quot;Buttons&quot;">​</a></h2><p>The RESET and BOOT buttons can be used to enter &quot;Renesas RA USB Boot&quot; mode by reboot the board with BOOT shorted to GND and press the reset button twice (double click). The board will enumerate as &quot;Renesas RA USB Boot&quot;.</p><h2 id="pin-mapping" tabindex="-1">Pin Mapping <a class="header-anchor" href="#pin-mapping" aria-label="Permalink to &quot;Pin Mapping&quot;">​</a></h2><p>Pads numbered anticlockwise from USB connector.</p><p>Pad Signal Notes</p><hr><p>0 P014 D0/A0 1 P000 D1/A1 2 P001 D2/A2 3 P002 D3/A3 4 P006 D4/SDA 5 P100 D5/SCL 6 P301 D6/Default TX for UART0 serial console 7 P301 D7/Default RX for UART0 serial console 8 P111 D8/SCK 9 P110 D9/MISO 10 P109 D10/MOSI 11 12 3V3 Ground Power output to peripherals 13 VIN +5V Supply to board</p><h2 id="power-supply" tabindex="-1">Power Supply <a class="header-anchor" href="#power-supply" aria-label="Permalink to &quot;Power Supply&quot;">​</a></h2><p>The working voltage of the MCU is 3.3V. Voltage input connected to general I/O pins may cause chip damage if it&#39;s higher than 3.3V.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><ol><li>Configure and build NuttX:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> git clone https://github.com/apache/nuttx.git nuttx</span></span>
<span class="line"><span> git clone https://github.com/apache/nuttx-apps.git apps</span></span>
<span class="line"><span> cd nuttx</span></span>
<span class="line"><span> make distclean</span></span>
<span class="line"><span> ./tools/configure.sh xiao-ra4m1:nsh</span></span>
<span class="line"><span> make V=1</span></span></code></pre></div><p>2. Connect the Seeed Studio XIAO RA4M1, and enter &quot;Renesas RA USB Boot&quot; mode, then, flash the <code>nuttx.hex</code> file using <code>rfp-cli</code>: (<a href="https://www.renesas.com/en/software-tool/renesas-flash-programmer-programming-gui" target="_blank" rel="noreferrer">https://www.renesas.com/en/software-tool/renesas-flash-programmer-programming-gui</a>)</p><p>Example command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>rfp-cli -device ra -port /dev/ttyACM0 -p ./build/nuttx.hex</span></span></code></pre></div><ol start="3"><li>To access the console, TX and RX pins must be connected to the device such as USB-serial converter.</li></ol><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled in UART0, at 115200 bps).</p><h3 id="combo" tabindex="-1">combo <a class="header-anchor" href="#combo" aria-label="Permalink to &quot;combo&quot;">​</a></h3><p>This configuration enabled NuttShell via Serial and enabled led and gpio examples:</p><p>Testing leds:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nsh&gt; leds</span></span>
<span class="line"><span>leds_main: Starting the led_daemon</span></span>
<span class="line"><span>leds_main: led_daemon started</span></span>
<span class="line"><span></span></span>
<span class="line"><span>led_daemon (pid# 5): Running</span></span>
<span class="line"><span>led_daemon: Opening /dev/userleds</span></span>
<span class="line"><span>led_daemon: Supported LEDs 0x01</span></span>
<span class="line"><span>led_daemon: LED set 0x01</span></span>
<span class="line"><span>nsh&gt; led_daemon: LED set 0x00</span></span>
<span class="line"><span>led_daemon: LED set 0x01</span></span>
<span class="line"><span>led_daemon: LED set 0x00</span></span>
<span class="line"><span>led_daemon: LED set 0x01</span></span>
<span class="line"><span>led_daemon: LED set 0x00</span></span>
<span class="line"><span>led_daemon: LED set 0x01</span></span></code></pre></div><p>Testing gpios:</p><p>PIN/GPIO Mode Device</p><hr><p>D0/P014 Input /dev/gpio0 D1/P000 Output /dev/gpio1</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nsh&gt; gpio /dev/gpio0</span></span>
<span class="line"><span>Driver: /dev/gpio0</span></span>
<span class="line"><span>  Input pin:     Value=0</span></span>
<span class="line"><span>nsh&gt; gpio /dev/gpio0</span></span>
<span class="line"><span>Driver: /dev/gpio0</span></span>
<span class="line"><span>  Input pin:     Value=1</span></span></code></pre></div>`,37)]))}const g=e(o,[["render",p]]);export{m as __pageData,g as default};
