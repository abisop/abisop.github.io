import{_ as o,c,al as d,o as i}from"./chunks/framework.NFAqBSgQ.js";const _=JSON.parse('{"title":"cdcacm USB CDC/ACM Device Commands","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/system/cdcacm/index.md","filePath":"en/applications/system/cdcacm/index.md"}'),t={name:"en/applications/system/cdcacm/index.md"};function n(a,e,l,s,C,r){return i(),c("div",null,e[0]||(e[0]=[d('<h1 id="cdcacm-usb-cdc-acm-device-commands" tabindex="-1"><code>cdcacm</code> USB CDC/ACM Device Commands <a class="header-anchor" href="#cdcacm-usb-cdc-acm-device-commands" aria-label="Permalink to &quot;`cdcacm` USB CDC/ACM Device Commands&quot;">â€‹</a></h1><p>This very simple add-on allows the USB CDC/ACM serial device can be dynamically connected and disconnected from a host. This add-on can only be used as an NSH built-in command. If built-in, then two new NSH commands will be supported:</p><ol><li><code>sercon</code> -- Connect the CDC/ACM serial device</li><li><code>serdis</code> -- Disconnect the CDC/ACM serial device</li></ol><p>Configuration prerequisites (not complete):</p><ul><li><code>CONFIG_USBDEV=y</code> -- USB device support must be enabled</li><li><code>CONFIG_CDCACM=y</code> -- The CDC/ACM driver must be built</li></ul><p>Configuration options specific to this add-on:</p><ul><li><code>CONFIG_SYSTEM_CDCACM_DEVMINOR</code> -- The minor number of the CDC/ACM device, i.e., the <code>x</code> in <code>/dev/ttyACMx</code>.</li></ul><p>If <code>CONFIG_USBDEV_TRACE</code> is enabled (or <code>CONFIG_DEBUG_FEATURES</code> and <code>CONFIG_DEBUG_USB</code>, or <code>CONFIG_USBDEV_TRACE</code>), then the add-on code will also initialize the USB trace output. The amount of trace output can be controlled using:</p><ul><li><code>CONFIG_SYSTEM_CDCACM_TRACEINIT</code> -- Show initialization events.</li><li><code>CONFIG_SYSTEM_CDCACM_TRACECLASS</code> -- Show class driver events.</li><li><code>CONFIG_SYSTEM_CDCACM_TRACETRANSFERS</code> -- Show data transfer events.</li><li><code>CONFIG_SYSTEM_CDCACM_TRACECONTROLLER</code> -- Show controller events.</li><li><code>CONFIG_SYSTEM_CDCACM_TRACEINTERRUPTS</code> -- Show interrupt-related events.</li></ul><p><strong>Note</strong>: This add-on is only enables or disable USB CDC/ACM via the NSH <code>sercon</code> and <code>serdis</code> command. It will enable and disable tracing per the settings before enabling and after disabling the CDC/ACM device. It will not, however, monitor buffered trace data in the interim. If <code>CONFIG_USBDEV_TRACE</code> is defined (and the debug options are not), other application logic will need to monitor the buffered trace data.</p>',10)]))}const p=o(t,[["render",n]]);export{_ as __pageData,p as default};
