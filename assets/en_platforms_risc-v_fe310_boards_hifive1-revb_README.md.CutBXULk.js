import{_ as e,c as a,al as r,o as n}from"./chunks/framework.NFAqBSgQ.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/risc-v/fe310/boards/hifive1-revb/README.md","filePath":"en/platforms/risc-v/fe310/boards/hifive1-revb/README.md"}'),o={name:"en/platforms/risc-v/fe310/boards/hifive1-revb/README.md"};function i(l,t,s,p,c,d){return n(),a("div",null,t[0]||(t[0]=[r('<ol><li>Download and install toolchain</li></ol><p>$ curl <a href="https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86%5C_64-linux-ubuntu14.tar.gz" target="_blank" rel="noreferrer">https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86\\_64-linux-ubuntu14.tar.gz</a></p><ol start="2"><li>Download and install J-Link Software Documentation Pack</li></ol><p><a href="https://www.segger.com/downloads/jlink/" target="_blank" rel="noreferrer">https://www.segger.com/downloads/jlink/</a></p><p>$ sudo apt install JLink_Linux_V656b_x86_64.deb</p><ol start="3"><li>Configure and build NuttX</li></ol><p>$ mkdir ./nuttx; cd ./nuttx $ git clone <a href="https://github.com/apache/nuttx.git" target="_blank" rel="noreferrer">https://github.com/apache/nuttx.git</a> nuttx $ git clone <a href="https://github.com/apache/nuttx-apps.git" target="_blank" rel="noreferrer">https://github.com/apache/nuttx-apps.git</a> apps $ cd nuttx $ make distclean $ ./tools/configure.sh hifive1-revb:nsh $ make V=1</p><ol start="4"><li>Flash the nuttx with J-Link and run</li></ol><p>$ picocom -b 115200 /dev/ttyACM0</p><p>$ /opt/SEGGER/JLink_V656b/JLinkGDBServer -device FE310</p><p>$ riscv64-unknown-elf-gdb ./nuttx (gdb) target extended-remote:2331 (gdb) load nuttx (gdb) c</p><ol start="5"><li>TODO</li></ol><p>Support GPIO/SPI/I2C/RTC/WDT/PWM Support RISC-V User mode</p>',13)]))}const h=e(o,[["render",i]]);export{f as __pageData,h as default};
