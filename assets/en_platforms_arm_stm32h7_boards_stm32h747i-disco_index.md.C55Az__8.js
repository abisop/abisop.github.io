import{_ as e,c as t,al as i,o as n}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"ST STM32H747I-DISCO","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32h7/boards/stm32h747i-disco/index.md","filePath":"en/platforms/arm/stm32h7/boards/stm32h747i-disco/index.md"}'),a={name:"en/platforms/arm/stm32h7/boards/stm32h747i-disco/index.md"};function r(s,o,l,c,h,u){return n(),t("div",null,o[0]||(o[0]=[i(`<h1 id="st-stm32h747i-disco" tabindex="-1">ST STM32H747I-DISCO <a class="header-anchor" href="#st-stm32h747i-disco" aria-label="Permalink to &quot;ST STM32H747I-DISCO&quot;">​</a></h1><p>chip:stm32, chip:stm32h7, chip:stm32h747</p><p>This page discusses issues unique to NuttX configurations for the STMicro STM32H747I-DISCO development board featuring the STM32H747I MCU. The STM32H747I is a Cortex-M7 and -M4 dual core with 2MBytes Flash memory and 1MByte SRAM. The board features:</p><ul><li>On-board ST-Link v3E for programming and debugging,</li><li>4 color user LEDs</li><li>One pushbuttons (user and reset)</li><li>Four-way joystick controller with select key</li><li>32.768 kHz crystal oscillator</li><li>USB OTG HS with Micro-AB connectors</li><li>Ethernet connector compliant with IEEE-802.3-2002</li><li>Board connectors: <ul><li>Camera</li><li>USB with Micro-AB</li><li>SWD</li><li>Ethernet RJ45</li><li>Arduino Uno V3</li><li>Pmod</li><li>STMod+</li></ul></li></ul><p>Refer to the <a href="http://www.st.com" target="_blank" rel="noreferrer">http://www.st.com</a> website for further information about this board (search keyword: STM32H747I-DISCO)</p><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><ol><li><p>Virtual Console.</p><p>The virtual console uses Serial Port 1 (USART1).</p><blockquote><p>VCOM Signal Pin</p><hr><p>SERIAL_RX PA10 SERIAL_TX PA9</p><p>These signals are internally connected to the on board ST-Link.</p></blockquote><p>The virtual console is the default serial console in all configurations unless otherwise stated in the description of the configuration.</p></li></ol><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="information-common-to-all-configurations" tabindex="-1">Information Common to All Configurations <a class="header-anchor" href="#information-common-to-all-configurations" aria-label="Permalink to &quot;Information Common to All Configurations&quot;">​</a></h3><p>Each STM32H747I-DISCO configuration is maintained in a sub-directory and can be selected as follow:</p><pre><code>tools/configure.sh [options] stm32h747i-disco:&lt;subdir&gt;
</code></pre><p>Where options should specify the host build platform (-l for Linux, -c for Cygwin under Windows, etc.). Try &#39;tools/configure.sh -h&#39; for the complete list of options.</p><p>Before starting the build, make sure that (1) your PATH environment variable includes the correct path to your toolchain, and (2) you have the correct toolchain selected in the configuration.</p><p>And then build NuttX by simply typing the following. At the conclusion of the make, the nuttx binary will reside in an ELF file called, simply, nuttx.:</p><pre><code>make
</code></pre><p>The &lt;subdir&gt; that is provided above as an argument to the tools/configure.sh must be is one of the following.</p><p>NOTES:</p><ol><li><p>These configurations use the mconf-based configuration tool. To change any of these configurations using that tool, you should:</p><p>a. Build and install the kconfig-mconf tool. See nuttx/README.txt see additional README.txt files in the NuttX tools repository. b. Execute &#39;make menuconfig&#39; in nuttx/ in order to start the reconfiguration process.</p></li><li></li></ol><pre><code>Unless stated otherwise, all configurations generate console

:   output on the ST-Link VCOM, USART1.
</code></pre><ol start="3"><li><p>Unless otherwise stated, the configurations are setup for Linux by default:</p><blockquote><p>Build Setup:</p><p>: CONFIG_HOST_LINUX=y : Linux host operating system</p></blockquote></li><li><p>All of these configurations use the general arm-none-eabi toolchain for Linux That toolchain selection can easily be reconfigured using &#39;make menuconfig&#39;.</p></li><li><p>These configurations all assume that you are loading code using something like the ST-Link v3E JTAG. None of these configurations are setup to use the DFU bootloader but should be easily reconfigured to use that bootloader if so desired.</p></li></ol><h3 id="configuration-sub-directories" tabindex="-1">Configuration Sub-directories <a class="header-anchor" href="#configuration-sub-directories" aria-label="Permalink to &quot;Configuration Sub-directories&quot;">​</a></h3><h3 id="nsh" tabindex="-1">nsh: <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh:&quot;">​</a></h3><p>This configuration provides a basic NuttShell configuration (NSH) for the board. The default console is the VCOM on USART1.</p>`,23)]))}const f=e(a,[["render",r]]);export{p as __pageData,f as default};
