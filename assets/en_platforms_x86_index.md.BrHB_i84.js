import{_ as i,c as r,al as c,o as t}from"./chunks/framework.NFAqBSgQ.js";const f=JSON.parse('{"title":"Intel 80x86","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/x86/index.md","filePath":"en/platforms/x86/index.md"}'),o={name:"en/platforms/x86/index.md"};function a(s,e,n,p,d,h){return t(),r("div",null,e[0]||(e[0]=[c(`<h1 id="intel-80x86" tabindex="-1">Intel 80x86 <a class="header-anchor" href="#intel-80x86" aria-label="Permalink to &quot;Intel 80x86&quot;">​</a></h1><p>All x86 source reside in lower-level common, chip-specific, and architecture-specific directories.</p><h2 id="arch-x86-src-common-directory" tabindex="-1">arch/x86/src/common/ Directory <a class="header-anchor" href="#arch-x86-src-common-directory" aria-label="Permalink to &quot;arch/x86/src/common/ Directory&quot;">​</a></h2><p>This directory holds source files common to all x86 architectures.</p><h2 id="architecture-specific-directories" tabindex="-1">Architecture-Specific Directories <a class="header-anchor" href="#architecture-specific-directories" aria-label="Permalink to &quot;Architecture-Specific Directories&quot;">​</a></h2><p>Architecture-specific directories hold common source files shared for by implementations of specific x86 architectures.</p><p><code>i486</code></p><p>: This directory holds logic appropriate for any instantiation of the 32-bit i486 architecture.</p><h2 id="chip-specific-directories" tabindex="-1">Chip-Specific directories <a class="header-anchor" href="#chip-specific-directories" aria-label="Permalink to &quot;Chip-Specific directories&quot;">​</a></h2><p>The same x86 architecture may be realized in different chip implementations. For SoC chips, in particular, on-chip devices and differing interrupt structures may require special, chip-specific definitions in these chip-specific directories.</p><p><code>qemu</code></p><p>: This is the implementation of NuttX on the QEMU x86 simulation.</p><pre><code>&gt; */*
</code></pre>`,13)]))}const m=i(o,[["render",a]]);export{f as __pageData,m as default};
