import{_ as a,c as o,al as t,o as n}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"ST STM32H745I-DISCO","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32h7/boards/stm32h745i-disco/index.md","filePath":"en/platforms/arm/stm32h7/boards/stm32h745i-disco/index.md"}'),i={name:"en/platforms/arm/stm32h7/boards/stm32h745i-disco/index.md"};function r(s,e,c,d,l,u){return n(),o("div",null,e[0]||(e[0]=[t(`<h1 id="st-stm32h745i-disco" tabindex="-1">ST STM32H745I-DISCO <a class="header-anchor" href="#st-stm32h745i-disco" aria-label="Permalink to &quot;ST STM32H745I-DISCO&quot;">​</a></h1><p>chip:stm32, chip:stm32h7, chip:stm32h745</p><h2 id="dual-core-support" tabindex="-1">Dual core support <a class="header-anchor" href="#dual-core-support" aria-label="Permalink to &quot;Dual core support&quot;">​</a></h2><p>It is recommended to use CMake to build firmware consisting of multiple images.</p><h3 id="dual-instances" tabindex="-1">Dual instances <a class="header-anchor" href="#dual-instances" aria-label="Permalink to &quot;Dual instances&quot;">​</a></h3><p>The commands to build <code>nsh_xxx</code> configurations are as follows:</p><pre><code>cmake -B build_cm7 -DBOARD_CONFIG=stm32h745i-disco:nsh_cm7 -GNinja
cmake -B build_cm4 -DBOARD_CONFIG=stm32h745i-disco:nsh_cm4 -GNinja

cmake --build build_cm7
cmake --build build_cm4
</code></pre><h3 id="dual-core-rptun" tabindex="-1">Dual core RPTun <a class="header-anchor" href="#dual-core-rptun" aria-label="Permalink to &quot;Dual core RPTun&quot;">​</a></h3><p>The commands to build <code>nsh_xxx_rptun</code> configurations are as follows:</p><pre><code>cmake -B build_cm7_rptun -DBOARD_CONFIG=stm32h745i-disco:nsh_cm7_rptun -GNinja
cmake -B build_cm4_rptun -DBOARD_CONFIG=stm32h745i-disco:nsh_cm4_rptun -GNinja

cmake --build build_cm7_rptun
cmake --build build_cm4_rptun
</code></pre><h2 id="serial-console" tabindex="-1">Serial console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial console&quot;">​</a></h2><p>The STM32H745I-DISCO board&#39;s ST-LINK interface is connected to USART3, which is used as the serial console for the Cortex-M7 core by default. The connections for USART3 are as follows:</p><p>USART3 Signal Pin</p><hr><p>USART3_RX PB11 USART3_TX PB10</p><p>When using the <code>nsh_xxx</code> configuration, UART7 is assigned to the Cortex-M4 core. The UART7 connections can be accessed via the Arduino connector on the board:</p><p>UART7 Signal Pin</p><hr><p>UART7_RX PA8 (Arduino D10) UART7_TX PB4 (Arduino D5)</p><p>This allows the Cortex-M4 core to utilize a separate serial interface, making it possible to debug or interact with both cores simultaneously through different UART interfaces.</p><h3 id="rptun" tabindex="-1">RPTun <a class="header-anchor" href="#rptun" aria-label="Permalink to &quot;RPTun&quot;">​</a></h3><p>When using the <code>nsh_xxx_rptun</code> configuration, users can connect to the CM4 core from the CM7 core by using the <code>cu</code> command:</p><pre><code>nsh-cm7&gt; cu -l /dev/ttyproxy
NuttShell (NSH) NuttX-10.4.0
nsh-cm4&gt;
</code></pre>`,23)]))}const p=a(i,[["render",r]]);export{m as __pageData,p as default};
