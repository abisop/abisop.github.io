import{_ as t,c as a,al as o,o as i}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"brickmatch Brickmatch","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/games/brickmatch/index.md","filePath":"en/applications/games/brickmatch/index.md"}'),r={name:"en/applications/games/brickmatch/index.md"};function c(n,e,s,l,h,m){return i(),a("div",null,e[0]||(e[0]=[o(`<h1 id="brickmatch-brickmatch" tabindex="-1"><code>brickmatch</code> Brickmatch <a class="header-anchor" href="#brickmatch-brickmatch" aria-label="Permalink to &quot;\`brickmatch\` Brickmatch&quot;">​</a></h1><p>Brickmatch is a kind puzzle game like a mix between tetris and Candy Crush. It is matrix (e.g 6x6, 8x8) with blocks (cells) with different colors.</p><p>Your goal is to move the blocks of the board to unite three or more with the same color.</p><p>Every time that three of more blocks with the same color match that block will blink and it will be removed from the board, leaving more space for movements.</p><p>The game starts with only the border cells filled and you can move the walls, floor and ceil in direction to the center of the board to make the cells of same color to match.</p><h2 id="basic-test" tabindex="-1">Basic Test <a class="header-anchor" href="#basic-test" aria-label="Permalink to &quot;Basic Test&quot;">​</a></h2><p>The best way to play brickmatch is using an APA102 RGB 16x16 matrix and Gesture sensor APDS9960. There are some board examples already done for this integration, all you need to do is connecting the APA102 matrix to the right SPI pins (look your board configuration) and the APDS9960 to the I2C port (also connect its INT pin).</p><p>If you don&#39;t have an APA102 matrix you can also play it using an LCD display or led matrix(WS2812) and a digital joystick (DJOYSTICK), gpio pins or the console input.</p><p>Then you can configure and compile the game to play in your board, i.e. for ESP32-Devkitc there is already an example using the APA102:</p><pre><code> ./tools/configure.sh esp32-devkitc:brickmatch
 make -j flash ESPTOOL_PORT=/dev/ttyUSB0
 minicom
nsh&gt; brick
</code></pre><p>That is it! Have fun!</p>`,11)]))}const b=t(r,[["render",c]]);export{p as __pageData,b as default};
