import{_ as t,c as i,al as o,o as a}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"Olimex STM32-P207","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32f4/boards/olimex-stm32-h405/index.md","filePath":"en/platforms/arm/stm32f4/boards/olimex-stm32-h405/index.md"}'),s={name:"en/platforms/arm/stm32f4/boards/olimex-stm32-h405/index.md"};function n(l,e,r,p,m,h){return a(),i("div",null,e[0]||(e[0]=[o('<h1 id="olimex-stm32-p207" tabindex="-1">Olimex STM32-P207 <a class="header-anchor" href="#olimex-stm32-p207" aria-label="Permalink to &quot;Olimex STM32-P207&quot;">â€‹</a></h1><p>chip:stm32, chip:stm32f4, chip:stm32f405</p><p>The NuttX configuration for the Olimex STM32-H405 is based on the configuration Olimex STM32-P207.</p><p>It was tested with the NuttX EABI &quot;buildroot&quot; Toolchain.</p><p>Debugging with OpenOCD via an Olimex ARM-USB-TINY-H works. Note that CONFIG_DEBUG_SYMBOLS and CONFIG_STM32_DISABLE_IDLE_SLEEP_DURING_DEBUG are enabled so that the JTAG connection is not disconnected by the idle loop.</p><p>Make sure that &#39;# CONFIG_NSH_CONDEV is not set&#39; is in the .config file - it defaults to &#39;/dev/console&#39; which makes problems with the shell over USB.</p><p>The following peripherals are enabled in this configuration. - LED: Shows the system status</p><ul><li>Button: Built in app &#39;buttons&#39; works.</li><li>ADC: ADC1 samples ADC_IN1. Built in app &#39;adc&#39; works.</li><li>USB-FS-OTG: The console is running on the virtual serial port. Note that you have to press enter three times until NSH appears.</li><li>CAN:Built in app &#39;can&#39; is enabled but not tested, since no CAN transceiver is on board.</li></ul>',8)]))}const _=t(s,[["render",n]]);export{c as __pageData,_ as default};
