import{_ as a,c as o,j as e,a as s,o as r}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"ST STM32F072-DISCOVERY","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32f0/boards/stm32f072-discovery/index.md","filePath":"en/platforms/arm/stm32f0/boards/stm32f072-discovery/index.md"}'),i={name:"en/platforms/arm/stm32f0/boards/stm32f072-discovery/index.md"};function n(d,t,f,l,h,m){return r(),o("div",null,t[0]||(t[0]=[e("h1",{id:"st-stm32f072-discovery",tabindex:"-1"},[s("ST STM32F072-DISCOVERY "),e("a",{class:"header-anchor",href:"#st-stm32f072-discovery","aria-label":'Permalink to "ST STM32F072-DISCOVERY"'},"​")],-1),e("p",null,"chip:stm32, chip:stm32f0, chip:stm32f072",-1),e("h2",{id:"status",tabindex:"-1"},[s("STATUS "),e("a",{class:"header-anchor",href:"#status","aria-label":'Permalink to "STATUS"'},"​")],-1),e("p",null,"05/17: The basic NSH configuration is functional and shows that there is 3-4KB of free heap space. However, attempts to extend this have failed. I suspect that 8KB of SRAM is insufficient to do much with the existing NSH configuration. Perhaps some fine tuning an improve this situation but at this point, I think this board is only useful for the initial STM32 F0 bring-up, perhaps for embedded solutions that do not use NSH and for general experimentation.",-1),e("p",null,"There is also support for the Nucleo boards with the STM32 F072 and F092 MCUs. Those ports do not suffer from these problems and seem to work well in fairly complex configurations. Apparently 8KB is SRAM is not usable but the parts with larger 16KB and 32KB SRAMs are better matches.",-1)]))}const u=a(i,[["render",n]]);export{c as __pageData,u as default};
