import{_ as e,c as n,al as o,o as r}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"nRF52840-dongle","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nrf52/boards/nrf52840-dongle/index.md","filePath":"en/platforms/arm/nrf52/boards/nrf52840-dongle/index.md"}'),s={name:"en/platforms/arm/nrf52/boards/nrf52840-dongle/index.md"};function t(l,a,i,d,h,u){return r(),n("div",null,a[0]||(a[0]=[o(`<h1 id="nrf52840-dongle" tabindex="-1">nRF52840-dongle <a class="header-anchor" href="#nrf52840-dongle" aria-label="Permalink to &quot;nRF52840-dongle&quot;">​</a></h1><p>chip:nrf52, chip:nrf52840</p><p>The <a href="https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dongle" target="_blank" rel="noreferrer">nRF52840-dongle (PCA10059)</a> is a a small, low-cost USB dongle based on nRF52840 from Nordic.</p><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>Pin Signal Notes</p><hr><p>P0.15 UART TX edge soldering points P0.13 UART RX edge soldering points</p><h2 id="leds-and-buttons" tabindex="-1">LEDs and Buttons <a class="header-anchor" href="#leds-and-buttons" aria-label="Permalink to &quot;LEDs and Buttons&quot;">​</a></h2><h3 id="leds" tabindex="-1">LEDs <a class="header-anchor" href="#leds" aria-label="Permalink to &quot;LEDs&quot;">​</a></h3><p>LED MCU</p><hr><p>LED1 P0.06</p><h3 id="pushbuttons" tabindex="-1">Pushbuttons <a class="header-anchor" href="#pushbuttons" aria-label="Permalink to &quot;Pushbuttons&quot;">​</a></h3><p>BUTTON MCU</p><hr><p>BUTTON1 P1.06</p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Each configuration is maintained in a sub-directory and can be selected as follow:</p><pre><code>tools/configure.sh nrf52840-dongle:&lt;subdir&gt;
</code></pre><p>Where &lt;subdir&gt; is one of the following:</p><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled in UART0, exposed via soldering points, at 115200 bps).</p><h3 id="usbnsh" tabindex="-1">usbnsh <a class="header-anchor" href="#usbnsh" aria-label="Permalink to &quot;usbnsh&quot;">​</a></h3><p>Basic NuttShell configuration (CDCACM console enabled in USB Port, at 115200 bps).</p><h2 id="flash-debug" tabindex="-1">Flash &amp; Debug <a class="header-anchor" href="#flash-debug" aria-label="Permalink to &quot;Flash &amp; Debug&quot;">​</a></h2><p>Both flashing and debuing is possible only with an external debug probe.</p>`,26)]))}const b=e(s,[["render",t]]);export{c as __pageData,b as default};
