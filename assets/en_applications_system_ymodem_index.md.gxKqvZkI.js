import{_ as t,c as o,al as a,o as d}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"ymodem YMODEM","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/system/ymodem/index.md","filePath":"en/applications/system/ymodem/index.md"}'),s={name:"en/applications/system/ymodem/index.md"};function r(n,e,i,c,l,h){return d(),o("div",null,e[0]||(e[0]=[a('<h1 id="ymodem-ymodem" tabindex="-1"><code>ymodem</code> YMODEM <a class="header-anchor" href="#ymodem-ymodem" aria-label="Permalink to &quot;`ymodem` YMODEM&quot;">​</a></h1><p>This is <a href="http://pauillac.inria.fr/~doligez/zmodem/ymodem.txt" target="_blank" rel="noreferrer">ymodem protocol</a>. According to it, the sb rb application is realized, which is used to send files and receive files respectively</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="common-usage" tabindex="-1">Common Usage <a class="header-anchor" href="#common-usage" aria-label="Permalink to &quot;Common Usage&quot;">​</a></h3><p>In the ubuntu system, lszrz needs to be installed, can use <code>sudo apt install lszrz</code>. Use minicom to communicate with the board.</p><h3 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">​</a></h3><p>In order to achieve a faster transmission speed, I added a specific HEADER <code>STC</code> to the YMODEM protocol to represent the custom length. Using the <code>sb</code> and <code>rb</code> commands on the board, you can use the <code>-k</code> option to set the length of the custom packet, and the unit is KB. Therefore, you need to use <code>sbrb.py</code> for file transfer, and you need <code>sbrb.py</code> -k to set the same length as the board. According to my test, when using -k 32, it can reach 93% of the baud rate, and is fully compatible with the original ymodem protocol. First, you need to add a soft link to sbrb.py, for example <code>sudo ln -s /home/&lt;name&gt;/.../&lt;nuttxwork&gt;/apps/system/ymodem/sbrb.py /usr/bin</code> and then sbrb.py can be configured into minicom.<code>&lt;Ctrl + a&gt; z o</code> then chose <code>File transfer protocols</code> and create two option cmd is &#39;sbrb.py -k 32&#39;. like this</p><table tabindex="0"><thead><tr><th>Name</th><th>Program</th><th>Name</th><th>U/D</th><th>FullScr</th><th>IO-Red.</th><th>Multi</th></tr></thead><tbody><tr><td>ymodem-k</td><td>sbrb.py -k 32</td><td>Y</td><td>U</td><td>N</td><td>Y</td><td>Y</td></tr><tr><td>ymodem-k</td><td>sbrb.py -k 32</td><td>N</td><td>D</td><td>N</td><td>Y</td><td>Y</td></tr></tbody></table><p>usb <code>sb -k 32</code> or <code>rb -k 32</code> for file transfer on board.</p><h2 id="sendfile-to-pc" tabindex="-1">Sendfile to pc <a class="header-anchor" href="#sendfile-to-pc" aria-label="Permalink to &quot;Sendfile to pc&quot;">​</a></h2><p>use sb command like this <code>nsh&gt; sb /tmp/test.c ...</code>, this command support send multiple files together then use <code>&lt;Ctrl + a&gt; , r</code> chose <code>ymodem</code> to receive board file.</p><h2 id="sendfile-to-board" tabindex="-1">Sendfile to board <a class="header-anchor" href="#sendfile-to-board" aria-label="Permalink to &quot;Sendfile to board&quot;">​</a></h2><p>use rb cmd like this <code>nsh&gt; rb</code>, this command support receive multiple files together then use <code>&lt;Ctrl + a&gt; , s</code> chose <code>ymodem</code>, then chose what file need to send.</p><h3 id="help" tabindex="-1">help <a class="header-anchor" href="#help" aria-label="Permalink to &quot;help&quot;">​</a></h3><p>can use <code>sb -h</code> or <code>rb -h</code> get help.</p><h2 id="debug" tabindex="-1">Debug <a class="header-anchor" href="#debug" aria-label="Permalink to &quot;Debug&quot;">​</a></h2><p>Because the serial port is used for communication, the log is printed to the debug file you can use <code>CONFIG_SYSTEM_YMODEM_DEBUGFILE_PATH</code> set debug file path.</p>',17)]))}const u=t(s,[["render",r]]);export{p as __pageData,u as default};
