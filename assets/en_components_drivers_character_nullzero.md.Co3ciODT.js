import{_ as d,c as o,al as r,o as c}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"dev_null.c and dev_zero.c","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/drivers/character/nullzero.md","filePath":"en/components/drivers/character/nullzero.md"}'),t={name:"en/components/drivers/character/nullzero.md"};function n(a,e,l,s,i,_){return c(),o("div",null,e[0]||(e[0]=[r('<h1 id="dev-null-c-and-dev-zero-c" tabindex="-1"><code>dev_null.c</code> and <code>dev_zero.c</code> <a class="header-anchor" href="#dev-null-c-and-dev-zero-c" aria-label="Permalink to &quot;`dev_null.c` and `dev_zero.c`&quot;">â€‹</a></h1><p>These files provide the standard <code>/dev/null</code> and <code>/dev/zero</code> devices. See <code>include/nuttx/drivers/drivers.h</code> for prototypes of functions that should be called if you want to register these devices (<code>devnull_register()</code> and <code>devzero_register()</code>).</p>',2)]))}const p=d(t,[["render",n]]);export{u as __pageData,p as default};
