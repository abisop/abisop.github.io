import{_ as o,c as t,al as s,o as a}from"./chunks/framework.NFAqBSgQ.js";const _=JSON.parse('{"title":"json cJSON","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/json/index.md","filePath":"en/applications/examples/json/index.md"}'),n={name:"en/applications/examples/json/index.md"};function r(c,e,i,p,d,l){return a(),t("div",null,e[0]||(e[0]=[s('<h1 id="json-cjson" tabindex="-1"><code>json</code> cJSON <a class="header-anchor" href="#json-cjson" aria-label="Permalink to &quot;`json` cJSON&quot;">â€‹</a></h1><p>This example exercises the cJSON implementation at <code>apps/netutils/json</code>. This example contains logic taken from the cJSON project:</p><p><a href="http://sourceforge.net/projects/cjson/" target="_blank" rel="noreferrer">http://sourceforge.net/projects/cjson/</a></p><p>The example corresponds to SVN revision <code>r42</code> (with lots of changes for NuttX coding standards). As of <code>r42</code>, the SVN repository was last updated on <code>2011-10-10</code> so I presume that the code is stable and there is no risk of maintaining duplicate logic in the NuttX repository.</p>',4)]))}const m=o(n,[["render",r]]);export{_ as __pageData,m as default};
