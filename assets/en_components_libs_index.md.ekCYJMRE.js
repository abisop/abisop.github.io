import{_ as t,c as i,al as a,o as r}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"NuttX libraries","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/libs/index.md","filePath":"en/components/libs/index.md"}'),o={name:"en/components/libs/index.md"};function n(s,e,l,d,c,p){return r(),i("div",null,e[0]||(e[0]=[a('<h1 id="nuttx-libraries" tabindex="-1">NuttX libraries <a class="header-anchor" href="#nuttx-libraries" aria-label="Permalink to &quot;NuttX libraries&quot;">â€‹</a></h1><p>This page discusses the NuttX libraries that can be found in <code>libs/</code></p><p>Libraries in NuttX are very special creatures. They have these properties:</p><ol><li><p>They can be shared by both application logic and logic within the OS when using the FLAT build.</p></li><li><p>But in PROTECTED and KERNEL modes, they must be built differently: The copies used by applications and the OS cannot be the same. Rather, separate versions of libraries must be built for the kernel and for applications.</p></li><li><p>When used by the OS, some special care must be taken to assure that the OS logic does not disrupt the user&#39;s errno value and that the OS does not create inappropriate cancellation points.</p><p>For example, <code>sem_wait()</code> is both a cancellation point and modifies the errno value. So within the FLAT build and without kernel version for the PROTECTED and KERNEL builds, the special internal OS interface <code>nxsem_wait()</code> must be used.</p></li></ol><p>NOTE: The libraries under <code>libs/</code> build differently from other NuttX components: There are no build-related files in the <code>libs/</code> directory; it is simply a container for other well-known, individual library directories. The upper level Makefile logic is aware of the libraries within the <code>libs/</code> container.</p><p>The only real function of the <code>libs/</code> directory is to prevent the top-level directory from becoming cluttered with individual libraries.</p>',6)]))}const b=t(o,[["render",n]]);export{u as __pageData,b as default};
