import{_ as a,c as t,al as o,o as d}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"adc Read from ADC","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/adc/index.md","filePath":"en/applications/examples/adc/index.md"}'),i={name:"en/applications/examples/adc/index.md"};function c(s,e,l,n,r,p){return d(),t("div",null,e[0]||(e[0]=[o('<h1 id="adc-read-from-adc" tabindex="-1"><code>adc</code> Read from ADC <a class="header-anchor" href="#adc-read-from-adc" aria-label="Permalink to &quot;`adc` Read from ADC&quot;">â€‹</a></h1><p>A mindlessly simple test of an ADC devices. It simply reads from the ADC device and dumps the data to the console forever.</p><p>This test depends on these specific ADC/NSH configurations settings (your specific ADC settings might require additional settings).</p><ul><li><code>CONFIG_ADC</code> -- Enabled ADC support.</li><li><code>CONFIG_NSH_BUILTIN_APPS</code> -- Build the ADC test as an NSH built-in function. Default: Built as a standalone program.</li></ul><p>Specific configuration options for this example include:</p><ul><li><code>CONFIG_EXAMPLES_ADC_DEVPATH</code> -- The default path to the ADC device. Default: <code>/dev/adc0</code>.</li><li><code>CONFIG_EXAMPLES_ADC_NSAMPLES</code> -- This number of samples is collected and the program terminates. Default: Samples are collected indefinitely.</li><li><code>CONFIG_EXAMPLES_ADC_GROUPSIZE</code> -- The number of samples to read at once. Default: <code>4</code>.</li></ul>',6)]))}const f=a(i,[["render",c]]);export{m as __pageData,f as default};
