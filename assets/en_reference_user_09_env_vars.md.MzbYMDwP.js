import{_ as a,c as r,al as i,j as e,a as n,o}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Environment Variables","description":"","frontmatter":{},"headers":[],"relativePath":"en/reference/user/09_env_vars.md","filePath":"en/reference/user/09_env_vars.md"}'),s={name:"en/reference/user/09_env_vars.md"};function l(c,t,h,d,v,p){return o(),r("div",null,t[0]||(t[0]=[i('<h1 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">​</a></h1><p>NuttX supports environment variables that can be used to control the behavior of programs. In the spirit of NuttX the environment variable behavior attempts to emulate the behavior of environment variables in the multi-processing OS:</p><ul><li><strong>Task environments</strong>. When a new task is created using <a href="#taskcreate">task_create</a>, the environment of the child task is an inherited, exact copy of the environment of the parent. However, after child task has been created, subsequent operations by the child task on its environment does not alter the environment of the parent. No do operations by the parent effect the child&#39;s environment. The environments start identical but are independent and may diverge.</li><li><strong>Thread environments</strong>. When a pthread is created using <a href="#pthreadcreate">pthread_create</a>, the child thread also inherits that environment of the parent. However, the child does not receive a copy of the environment but, rather, shares the same environment. Changes to the environment are visible to all threads with the same parentage.</li></ul><h2 id="programming-interfaces" tabindex="-1">Programming Interfaces <a class="header-anchor" href="#programming-interfaces" aria-label="Permalink to &quot;Programming Interfaces&quot;">​</a></h2><p>The following environment variable programming interfaces are provided by NuttX and are described in detail in the following paragraphs.</p>',5),e("blockquote",null,[e("ul",null,[e("li",null,[n(":c"),e("code",{class:"interpreted-text",role:"func"},"getenv")]),e("li",null,[n(":c"),e("code",{class:"interpreted-text",role:"func"},"putenv")]),e("li",null,[n(":c"),e("code",{class:"interpreted-text",role:"func"},"clearenv")]),e("li",null,[n(":c"),e("code",{class:"interpreted-text",role:"func"},"setenv")]),e("li",null,[n(":c"),e("code",{class:"interpreted-text",role:"func"},"unsetenv")])])],-1),e("h2",{id:"disabling-environment-variable-support",tabindex:"-1"},[n("Disabling Environment Variable Support "),e("a",{class:"header-anchor",href:"#disabling-environment-variable-support","aria-label":'Permalink to "Disabling Environment Variable Support"'},"​")],-1),e("p",null,[n("All support for environment variables can be disabled by setting "),e("code",null,"CONFIG_DISABLE_ENVIRON"),n(" in the board configuration file.")],-1),e("h2",{id:"functions",tabindex:"-1"},[n("Functions "),e("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1)]))}const f=a(s,[["render",l]]);export{u as __pageData,f as default};
