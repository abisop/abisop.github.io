import{_ as t,c as r,al as n,o as c}from"./chunks/framework.NFAqBSgQ.js";const v=JSON.parse('{"title":"Ethernet Device Drivers","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/drivers/special/net/ethernet.md","filePath":"en/components/drivers/special/net/ethernet.md"}'),i={name:"en/components/drivers/special/net/ethernet.md"};function s(d,e,o,a,l,_){return c(),r("div",null,e[0]||(e[0]=[n('<h1 id="ethernet-device-drivers" tabindex="-1">Ethernet Device Drivers <a class="header-anchor" href="#ethernet-device-drivers" aria-label="Permalink to &quot;Ethernet Device Drivers&quot;">â€‹</a></h1><ul><li><code>include/nuttx/net/netdev.h</code>. All structures and APIs needed to work with Ethernet drivers are provided in this header file. The structure <code>struct net_driver_s</code> defines the interface and is passed to the network via <code>netdev_register()</code>.</li><li><code>int netdev_register(FAR struct net_driver_s *dev, enum net_lltype_e lltype);</code>. Each Ethernet driver registers itself by calling <code>netdev_register()</code>.</li><li><strong>Examples</strong>: <code>drivers/net/dm90x0.c</code>, <code>arch/drivers/arm/src/c5471/c5471_ethernet.c</code>, <code>arch/z80/src/ez80/ez80_emac.c</code>, etc.</li></ul>',2)]))}const p=t(i,[["render",s]]);export{v as __pageData,p as default};
