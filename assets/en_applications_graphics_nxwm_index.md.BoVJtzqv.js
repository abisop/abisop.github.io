import{_ as n,c as t,al as a,o}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"nxwm NuttX Tiny Window Manager (NxWM)","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/graphics/nxwm/index.md","filePath":"en/applications/graphics/nxwm/index.md"}'),i={name:"en/applications/graphics/nxwm/index.md"};function s(r,e,d,c,l,p){return o(),t("div",null,e[0]||(e[0]=[a(`<h1 id="nxwm-nuttx-tiny-window-manager-nxwm" tabindex="-1"><code>nxwm</code> NuttX Tiny Window Manager (NxWM) <a class="header-anchor" href="#nxwm-nuttx-tiny-window-manager-nxwm" aria-label="Permalink to &quot;\`nxwm\` NuttX Tiny Window Manager (NxWM)&quot;">​</a></h1><p>This directory holds a tiny desktop for small embedded devices with a touchscreen,. NxWM. NxWM is true multiple window manager but only one window is displayed at a time. This simplification helps performance on LCD based products (in the same way that a tiled window manager helps) and also makes the best use of small displays. It is awkward from a human factors point-of-view trying to manage multiple windows on a small display.</p><p>The window manager consists of a task bar with icons representing the running tasks. If you touch the task&#39;s icon, it comes to the top. Each window has a toolbar with (1) a title, (2) a minimize button, and (3) a stop application button using the standard icons for these things.</p><p>There is always a start window that is available in the task bar. When you touch the start window icon, it brings up the start window containing icons representing all of the available applications. If you touch an icon in the start window, it will be started and added to the task bar.</p><p>There is a base class that defines an add-on application and an interface that supports incorporation of new application. The only application that is provided is NxTerm. This is an NSH session running in a window. You should be able to select the NX icon in the start menu and create as many NSH sessions in windows as you want. (keybard input still comes through serial).</p><p>Note 1: NwWM requires <code>NuttX-7.19</code> or above to work with the current <code>NxWidgets-1.18</code> release.</p><blockquote><p>cnxconsole.rst</p></blockquote><h2 id="doxygen" tabindex="-1">Doxygen <a class="header-anchor" href="#doxygen" aria-label="Permalink to &quot;Doxygen&quot;">​</a></h2><h3 id="installing-the-necessary-packages-in-ubuntu" tabindex="-1">Installing the necessary packages in Ubuntu <a class="header-anchor" href="#installing-the-necessary-packages-in-ubuntu" aria-label="Permalink to &quot;Installing the necessary packages in Ubuntu&quot;">​</a></h3><ol><li><p>Install the following packages:</p><pre><code> sudo aptitude install doxygen doxygen-doc doxygen-gui dot2tex graphviz
</code></pre></li><li><p>(Optional) Install Doxygen from the latest sourcode.</p><p>The Ubuntu package is outdated. The newer the version of Doxygen, the better the documentation looks.</p><p>Place yourself in some temporary folder where you can download the source, and run [1]:</p><pre><code> svn co https://doxygen.svn.sourceforge.net/svnroot/doxygen/trunk doxygen-svn
 cd doxygen-svn
 ./configure
 make
 make install
</code></pre></li></ol><h3 id="generating-documentation" tabindex="-1">Generating documentation <a class="header-anchor" href="#generating-documentation" aria-label="Permalink to &quot;Generating documentation&quot;">​</a></h3><p>Two ways described here:</p><ol><li><p>Use the provided <code>gendoc.sh</code> script:</p><pre><code>trunk/NXWidgets/Doxygen/gendoc.sh
</code></pre><p>The script only needs the argument to the absolute path where to place the generated documentation. I.e.:</p><pre><code> cd /path/to/nuttx/trunk/NXWidgets/Doxygen/
 mkdir doc
 ./gendoc.sh PWD/doc
</code></pre></li><li><p>Using the <code>Doxyfile</code> directly:</p><p>The file <code>Doxyfile</code> contains the configuration of the Doxygen settings for the run, edit only if necessary.</p><p>To generate the documentation type:</p><pre><code> cd /path/to/nuttx/trunk/NXWidgets/Doxygen/
 doxygen Doxyfile
</code></pre></li></ol><h3 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h3><p>[1] <a href="http://www.stack.nl/~dimitri/doxygen/download.html" target="_blank" rel="noreferrer">http://www.stack.nl/~dimitri/doxygen/download.html</a></p>`,15)]))}const g=n(i,[["render",s]]);export{u as __pageData,g as default};
