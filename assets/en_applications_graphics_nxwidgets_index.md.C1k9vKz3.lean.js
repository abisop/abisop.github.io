import{_ as i,c as n,j as e,a as t,al as s,o as a}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"nxwidgets NXWidgets","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/graphics/nxwidgets/index.md","filePath":"en/applications/graphics/nxwidgets/index.md"}'),l={name:"en/applications/graphics/nxwidgets/index.md"};function r(d,o,c,u,h,p){return a(),n("div",null,o[0]||(o[0]=[e("h1",{id:"nxwidgets-nxwidgets",tabindex:"-1"},[e("code",null,"nxwidgets"),t(" NXWidgets "),e("a",{class:"header-anchor",href:"#nxwidgets-nxwidgets","aria-label":'Permalink to "`nxwidgets` NXWidgets"'},"â€‹")],-1),e("p",null,[t("In order to better support NuttX based platforms, a special graphical userinterface has been created called NXWidgets. NXWidgets is written in C++ and integrates seamlessly with the NuttX "),e("code",{class:"interpreted-text",role:"ref"},"NX graphics subsystem <nxgraphics>"),t(' in order to provide graphic objects, or "widgets," in the NX Graphics Subsystem')],-1),e("p",null,"Some of the features of NXWidgets include:",-1),e("ul",null,[e("li",null,[e("strong",null,"Conservative C++"),t('. NXWidgets is written entirely in C++ but using only selected "embedded friendly" C++ constructs that are fully supported under NuttX. No additional C++ support libraries are required.')]),e("li",null,[e("strong",null,"NX Integration"),t(". NXWidgets integrate seamlessly with the "),e("code",{class:"interpreted-text",role:"ref"},"NX graphics subsystem <nxgraphics>"),t(". Think of the X server under Linux ... the NX graphics system is like a tiny X server that provides windowing under NuttX. By adding NXWidgets, you can support graphics objects like buttons and text boxes in the NX windows and toolbars.")]),e("li",null,[e("strong",null,"Small Footprint"),t(". NXWidgets is tailored for use MCUs in embedded applications. It is ideally suited for mid- and upper-range of most MCU families. A complete NXWidgets is possible in as little as 40K of FLASH and maybe 4K of SRAM.")]),e("li",null,[e("strong",null,"Output Devices"),t(". NXWidgets will work on the high-end frame buffer devices as well as on LCDs connected via serial or parallel ports to a small MCU.")]),e("li",null,[e("strong",null,"Input Devices"),t(". NXWidgets will accept position and selection inputs from a mouse or a touchscreen. It will also support character input from a keyboard such as a USB keyboard. NXWidgets supports on very special widget called CKeypad that will provide keyboard input via an on-screen keypad that can be operated via mouse or touchscreen inputs.")]),e("li",null,[e("strong",null,"Many Graphic Objects"),t(". Some of the graphic objects supported by NXWidgets include labels, buttons, text boxes, button arrays, check boxes, cycle buttons, images, sliders, scrollable list boxes, progress bars, and more.")]),e("li",null,[e("strong",null,"DOxygen Documentation"),t(" DOxygen documentation is available.")])],-1),s("",23)]))}const f=i(l,[["render",r]]);export{m as __pageData,f as default};
