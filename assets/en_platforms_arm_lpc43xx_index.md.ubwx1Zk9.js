import{_ as t,c as r,al as o,o as a}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"NXP LPC43xx","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/lpc43xx/index.md","filePath":"en/platforms/arm/lpc43xx/index.md"}'),i={name:"en/platforms/arm/lpc43xx/index.md"};function n(s,e,l,p,h,d){return a(),r("div",null,e[0]||(e[0]=[o('<h1 id="nxp-lpc43xx" tabindex="-1">NXP LPC43xx <a class="header-anchor" href="#nxp-lpc43xx" aria-label="Permalink to &quot;NXP LPC43xx&quot;">​</a></h1><p>Several board ports are available for this higher end, NXP Cortex-M4F part:</p><p><strong>NXG Technologies LPC4330-Xplorer</strong>. This NuttX port is for the LPC4330-Xplorer board from NGX Technologies featuring the NXP LPC4330FET100 MCU. See the <a href="http://shop.ngxtechnologies.com/product_info.php?cPath=21_37&amp;products_id=104" target="_blank" rel="noreferrer">NXG website</a> for further information about this board.</p><ul><li><strong>STATUS:</strong> Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/lpc43xx/boards/lpc4330-xplorer/README.txt" target="_blank" rel="noreferrer">README</a> file for more detailed information about this port.</li><li><strong>NuttX-6.20</strong> The basic LPC4330-Xplorer port is complete. The basic NuttShell (NSH) configuration is present and fully verified. This includes verified support for: SYSTICK system time, pin and GPIO configuration, and a serial console.</li></ul><p><strong>NXP/Embest LPC4357-EVB</strong>. This NuttX port is for the LPC4357-EVB from NXP/Embest featuring the NXP LPC4357FET256 MCU. The LPC4357 differs from the LPC4330 primarily in that it includes 1024KiB of on-chip NOR FLASH. See the <a href="http://www.nxp.com/news/news-archive/2013/nxp-development-kit-based-on-the-dual-core-lpc4357-microcontroller.html" target="_blank" rel="noreferrer">NXP website</a> for more detailed information about the LPC4357 and the LPC4357-EVB.</p><ul><li><strong>STATUS:</strong> Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/lpc43xx/boards/lpc4357-evb/README.txt" target="_blank" rel="noreferrer">README</a> file for more detailed information about this port.</li><li><strong>NuttX-7.6</strong>. The basic port is was contributed by Toby Duckworth. This port leverages from the LPC4330-Xplorer port (and, as of this writing, still requires some clean up of the technical discussion in some files). The basic NuttShell (NSH) configuration is present and has been verified. Support is generally the same as for the LPC4330-Xplorer as discussed above.</li></ul><p><strong>NXP LPC4370-Link2</strong>. This is the NuttX port to the NXP LPC4370-Link2 development board featuring the NXP LPC4370FET100 MCU.</p><ul><li><strong>STATUS:</strong> Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/lpc43xx/boards/lpc4370-link2/README.txt" target="_blank" rel="noreferrer">README</a> file for more detailed information about this port.</li><li><strong>NuttX-7.12</strong> The NXP LPC4370-Link2 port is was contributed by Lok Tep and first released in NuttX-7.12.</li></ul><p><strong>WaveShare LPC4337-WS</strong>. This is the NuttX port to the WaveShare LPC4337-WS development board featuring the NXP LPC4337JBD144 MCU.</p><ul><li><strong>STATUS:</strong> Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/lpc43xx/boards/lpc4337-ws/README.txt" target="_blank" rel="noreferrer">README</a> file for more detailed information about this port.</li><li><strong>NuttX-7.14</strong> The NXP WaveShare LPC4337-WS port is was contributed by Lok Tep and first released in NuttX-7.14.</li><li><strong>NuttX-7.16</strong> Support for the LPC4337JET100 chip was contribed by Alexander Vasiljev. Alexander also contributed an LPC43xx AES driver available in NuttX-7.16.</li></ul><p><strong>Driver Status</strong>.</p><ul><li><p><strong>NuttX-6.20</strong> Several drivers have been copied from the related GPDMA, I2C, SPI, and SSP. The registers for these blocks are the same in both the LPC43xx and the LPC17xx and they should integrate into the LPC43xx very easily by simply adapting the clocking and pin configuration logic.</p><p>Other LPC17xx drivers were not brought into the LPC43xx port because these peripherals have been completely redesigned: CAN, Ethernet, USB device, and USB host.</p><p>So then there is no support for the following LPC43xx peripherals: SD/MMC, EMC, USB0,USB1, Ethernet, LCD, SCT, Timers 0-3, MCPWM, QEI, Alarm timer, WWDT, RTC, Event monitor, and CAN.</p><p>Some of these can be leveraged from other MCUs that appear to support the same peripheral IP:</p><ul><li>The LPC43xx USB0 peripheral appears to be the same as the USB OTG peripheral for the LPC31xx. The LPC31xx USB0 device-side driver has been copied from the LPC31xx port but also integration into the LPC43xx (clocking and pin configuration). It should be possible to complete porting of this LPC31xx driver with a small porting effort.</li><li>The Ethernet block looks to be based on the same IP as the STM32 Ethernet and, as a result, it should be possible to leverage the NuttX STM32 Ethernet driver with a little more effort.</li></ul></li><li><p><strong>NuttX-6.21</strong> Added support for a SPIFI block driver and for RS-485 option to the serial driver.</p></li><li><p><strong>NuttX-7.17</strong> EMC support was extended to include support SDRAM by Vytautas Lukenska.</p></li><li><p><strong>NuttX-7.23</strong> A CAN driver was contributed by Alexander Vasiljev in NuttX-7.23.</p></li><li><p><strong>NuttX-7.24</strong> RTC and Windowed Watchdog Timer (WWDT) drivers were leveraged from the LPC17 and contributed by Gintaras Drukteinis. Leveraged the LPC54xx SD/MMC to the LPC43xx. There are still remaining issues with the SD/MMC driver and it is not yet functional.</p></li></ul><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>',14)]))}const f=t(i,[["render",n]]);export{c as __pageData,f as default};
