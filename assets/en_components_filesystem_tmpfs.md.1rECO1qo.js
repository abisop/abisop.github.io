import{_ as t,c as a,al as s,o}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"TMPFS","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/filesystem/tmpfs.md","filePath":"en/components/filesystem/tmpfs.md"}'),n={name:"en/components/filesystem/tmpfs.md"};function i(d,e,r,c,m,l){return o(),a("div",null,e[0]||(e[0]=[s('<h1 id="tmpfs" tabindex="-1">TMPFS <a class="header-anchor" href="#tmpfs" aria-label="Permalink to &quot;TMPFS&quot;">â€‹</a></h1><p>NuttX TMPFS file system is a tiny dyamic RAM based file system.</p><p>It can be enabled by adding <code>CONFIG_FS_TMPFS=y</code> to the configuration at build time.</p><p>At runtime, simply use <code>mount -t tmpfs /tmp</code> to have a <code>/tmp</code> folder backed by TMPFS, then files and folders can be created under that folder.</p><p>Be aware that TMPFS is backed by kernel memory thus don&#39;t expect to store big files on it and its size is limited by free kernel memory.</p><p>We can watch the size of TMPFS with <code>df -h</code> command, especially you can see the <code>Size</code> column of TMPFS changes when files are added or removed in the TMPFS folder. Changes in TMPFS size is always reflected by reverse changes of free kernel memory size.</p>',6)]))}const h=t(n,[["render",i]]);export{p as __pageData,h as default};
