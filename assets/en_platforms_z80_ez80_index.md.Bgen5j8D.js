import{_ as t,c as o,al as i,o as a}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Zilog eZ80 Acclaim!","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/z80/ez80/index.md","filePath":"en/platforms/z80/ez80/index.md"}'),r={name:"en/platforms/z80/ez80/index.md"};function l(n,e,s,c,p,d){return a(),o("div",null,e[0]||(e[0]=[i('<h1 id="zilog-ez80-acclaim" tabindex="-1">Zilog eZ80 Acclaim! <a class="header-anchor" href="#zilog-ez80-acclaim" aria-label="Permalink to &quot;Zilog eZ80 Acclaim!&quot;">​</a></h1><p><strong>Zilog eZ80Acclaim! Microcontroller</strong>. There are four eZ80Acclaim! ports:</p><ul><li>The ZiLOG ez80f0910200kitg development kit.</li><li>The ZiLOG ez80f0910200zcog-d development kit.</li><li>The MakerLisp CPU board.</li><li>The Z20x DIY computing system.</li></ul><p>All three boards are based on the eZ80F091 part and all use the Zilog ZDS-II Windows command line tools. The development environment is either Windows native or Cygwin or MSYS2 under Windows.</p><p>It is also possible to compile using <code>clang</code> and the GNU <code>binutils</code> toolchain. You must have a variant of <code>clang</code> that supports the eZ80, and an install of <code>binutils</code> built with Z80 support.</p><p><code>clang</code> with eZ80 support is available as part of the Texas Instruments CE 85+ unofficial [toolchain &lt;<a href="https://ce-programming.github.io/toolchain/%5C" target="_blank" rel="noreferrer">https://ce-programming.github.io/toolchain/\\</a>&gt;]{.title-ref} and requires a further [patch &lt;<a href="https://github.com/codebje/ez80-toolchain/tree/master/clang%5C" target="_blank" rel="noreferrer">https://github.com/codebje/ez80-toolchain/tree/master/clang\\</a>&gt;]{.title-ref} to support GNU assembler syntax.</p><p>GNU <code>binutils</code> supports the Z80 family. It will require compilation with appropriate configuration to enable support.</p><p>C intrinsics are also required. Some may be found in the Zilog ZDS-II distribution, requiring some modification to build with the GNU assembler. Additional intrinsics for 64-bit support must be supplied.</p><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>',10)]))}const m=t(r,[["render",l]]);export{u as __pageData,m as default};
