import{_ as a,c as i,al as s,o as n}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"PCI(e) Bus Drivers","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/drivers/special/pci/index.md","filePath":"en/components/drivers/special/pci/index.md"}'),c={name:"en/components/drivers/special/pci/index.md"};function t(p,e,r,d,o,l){return n(),i("div",null,e[0]||(e[0]=[s(`<h1 id="pci-e-bus-drivers" tabindex="-1">PCI(e) Bus Drivers <a class="header-anchor" href="#pci-e-bus-drivers" aria-label="Permalink to &quot;PCI(e) Bus Drivers&quot;">​</a></h1><p>PCI(e) bus driver can be found in <code>drivers/pci</code>.</p><h2 id="supported-pci-devices" tabindex="-1">Supported PCI devices <a class="header-anchor" href="#supported-pci-devices" aria-label="Permalink to &quot;Supported PCI devices&quot;">​</a></h2><h3 id="pci-qemu-test-device" tabindex="-1">PCI QEMU Test Device <a class="header-anchor" href="#pci-qemu-test-device" aria-label="Permalink to &quot;PCI QEMU Test Device&quot;">​</a></h3><p>Test device provided by QEMU and enabled with <code>-device pci-testdev</code>.</p><h3 id="pci-qemu-edu-device" tabindex="-1">PCI QEMU EDU Device <a class="header-anchor" href="#pci-qemu-edu-device" aria-label="Permalink to &quot;PCI QEMU EDU Device&quot;">​</a></h3><p>Test device provided by QEMU and enabled with <code>-device edu</code>.</p><h3 id="inter-vm-share-memory-device-ivshmem" tabindex="-1">Inter-VM share memory Device (ivshmem) <a class="header-anchor" href="#inter-vm-share-memory-device-ivshmem" aria-label="Permalink to &quot;Inter-VM share memory Device (ivshmem)&quot;">​</a></h3><p>Inter-VM shared memory support support can be found in <code>drivers/pci/pci_ivshmem.c</code>.</p><p>This implementation is for <code>ivshmem-v1</code> which is compatible with QEMU and ACRN hypervisor but won&#39;t work with Jailhouse hypervisor which uses <code>ivshmem-v2</code>.</p><h3 id="_16550-compatible-serial-card" tabindex="-1">16550 Compatible Serial Card <a class="header-anchor" href="#_16550-compatible-serial-card" aria-label="Permalink to &quot;16550 Compatible Serial Card&quot;">​</a></h3><p>UART 16550 compatible PCI serial card support can be found in <code>drivers/serial/uart_pci_16550.c</code>.</p><p>Supported devices:</p><ul><li>AX99100</li><li>QEMU pci-serial device</li><li>QEMU pci-serial-2x device</li><li>QEMU pci-serial-4x device</li></ul><h3 id="intel-e1000" tabindex="-1">Intel e1000 <a class="header-anchor" href="#intel-e1000" aria-label="Permalink to &quot;Intel e1000&quot;">​</a></h3><p>Intel e1000 compatible NIC support can be found in <code>drivers/net/e1000.c</code>.</p><p>Supported devices:</p><ul><li>Intel I219</li><li>Intel 82540EM</li><li>Intel 82574L</li><li>Intel 82574L</li></ul><h3 id="intel-igc" tabindex="-1">Intel igc <a class="header-anchor" href="#intel-igc" aria-label="Permalink to &quot;Intel igc&quot;">​</a></h3><p>Intel igc compatible NIC support can be found in <code>drivers/net/igc.c</code>.</p><p>Supported devices:</p><ul><li>Intel I225LM</li><li>Intel I226V</li></ul><h3 id="kvaser-pci-can-card" tabindex="-1">Kvaser PCI CAN card <a class="header-anchor" href="#kvaser-pci-can-card" aria-label="Permalink to &quot;Kvaser PCI CAN card&quot;">​</a></h3><p>At the moment the card only works with QEMU.</p><p>The driver supports both SocketCAN interface and character driver.</p><p>The driver requires, <code>vcan</code> to run on the host:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo ip link add dev can0 type vcan</span></span>
<span class="line"><span>sudo ip link set can0 up</span></span></code></pre></div><p>An example command to run the driver on <code>x86_64</code> looks like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>qemu-system-x86_64 -m 2G -cpu host -enable-kvm -kernel nuttx \\</span></span>
<span class="line"><span>-nographic -serial mon:stdio -object can-bus,id=canbus0 \\</span></span>
<span class="line"><span>-object can-host-socketcan,id=canhost0,if=can0,canbus=canbus0 \\</span></span>
<span class="line"><span>-device kvaser_pci,canbus=canbus0</span></span></code></pre></div><h3 id="ctucanfd-pci-can-card" tabindex="-1">CTUCANFD PCI CAN card <a class="header-anchor" href="#ctucanfd-pci-can-card" aria-label="Permalink to &quot;CTUCANFD PCI CAN card&quot;">​</a></h3><p>At the moment the card only works with QEMU.</p><p>The driver supports both SocketCAN interface and character driver.</p><p>The driver requires, <code>vcan</code> to run on the host:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo ip link add dev can0 type vcan</span></span>
<span class="line"><span>sudo ip link set can0 up</span></span></code></pre></div><p>An example command to run the driver on <code>x86_64</code> looks like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>qemu-system-x86_64 -m 2G -cpu host -enable-kvm -kernel nuttx \\</span></span>
<span class="line"><span>-nographic -serial mon:stdio -object can-bus,id=canbus0-bus \\</span></span>
<span class="line"><span>-object can-host-socketcan,if=can0,canbus=canbus0-bus,id=canbus0-socketcan \\</span></span>
<span class="line"><span>-device ctucan_pci,canbus0=canbus0-bus,canbus1=canbus0-bus</span></span></code></pre></div>`,36)]))}const v=a(c,[["render",t]]);export{u as __pageData,v as default};
