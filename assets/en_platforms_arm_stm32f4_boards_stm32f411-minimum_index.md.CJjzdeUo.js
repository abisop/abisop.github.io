import{_ as e,c as t,al as o,o as r}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"stm32f411-minimum","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32f4/boards/stm32f411-minimum/index.md","filePath":"en/platforms/arm/stm32f4/boards/stm32f411-minimum/index.md"}'),i={name:"en/platforms/arm/stm32f4/boards/stm32f411-minimum/index.md"};function s(n,a,l,d,h,u){return r(),t("div",null,a[0]||(a[0]=[o(`<h1 id="stm32f411-minimum" tabindex="-1">stm32f411-minimum <a class="header-anchor" href="#stm32f411-minimum" aria-label="Permalink to &quot;stm32f411-minimum&quot;">​</a></h1><p>chip:stm32, chip:stm32f4, chip:stm32f411</p><p>This page discusses issues unique to NuttX configurations for the WeAct Studio MiniF4 minimum system development board.</p><h2 id="board-information" tabindex="-1">Board information <a class="header-anchor" href="#board-information" aria-label="Permalink to &quot;Board information&quot;">​</a></h2><p>It is sometimes referred to as &quot;black pill&quot;, although there are several clone boards with f103-like chips and even an official f103 blackpill from Robotdyn. Both WeAct Studio (via Taobao and Aliexpress) and Adafruit sell the boards as &quot;BlackPill Core Board&quot; with STM32F411CEU6 or STM32F401CCU6 or &quot;STM32F411 BlackPill Development board&quot;, so we&#39;ll assume that WeAct Studio is the original manufacturer and F401/F411 is the chip.</p><p>Board documentation: <a href="https://github.com/WeActStudio/WeActStudio.MiniSTM32F4x1" target="_blank" rel="noreferrer">https://github.com/WeActStudio/WeActStudio.MiniSTM32F4x1</a></p><p>Summary pages from STM32-base <a href="https://stm32-base.org/boards/STM32F401CCU6-WeAct-Black-Pill-V1.2.html" target="_blank" rel="noreferrer">https://stm32-base.org/boards/STM32F401CCU6-WeAct-Black-Pill-V1.2.html</a><a href="https://stm32-base.org/boards/STM32F411CEU6-WeAct-Black-Pill-V2.0.html" target="_blank" rel="noreferrer">https://stm32-base.org/boards/STM32F411CEU6-WeAct-Black-Pill-V2.0.html</a><a href="https://stm32-base.org/boards/STM32F401CEU6-WeAct-Black-Pill-V3.0.html" target="_blank" rel="noreferrer">https://stm32-base.org/boards/STM32F401CEU6-WeAct-Black-Pill-V3.0.html</a></p><p>The board features:</p><ul><li>On-board 64 Mbits (8 MBytes) External SPI-NOR Flash (optional),</li><li>nRST reset button and BOOT0 ST BootROM entry button,</li><li>One user LED and one user push-button,</li><li>HSE 25 Mhz and LSE 32.768 kHz,</li><li>USB OTG FS with micro-AB connector,</li><li>Around 30 remappable GPIOs on 2.54mm headers (after excluding 7 power pins, two LSE pins, the LED pin, NRST, BOOT1 and the SWD header),</li><li>Serial Wire Debug header for use with an external SWD/JTAG adapter.</li></ul><p>As F4 series have a USB DFuSe-capable BootROM [AN2606], the board can be flashed via [dfu-util]{.title-ref} over USB, or via [stm32flash]{.title-ref} over UART without any debuggers.</p><h2 id="leds" tabindex="-1">LEDs <a class="header-anchor" href="#leds" aria-label="Permalink to &quot;LEDs&quot;">​</a></h2><p>The STM32F411 Minimum board has only one software controllable LED on PC13. This LED can be used by the board port when CONFIG_ARCH_LEDS option is enabled.</p><p>If enabled the LED is simply turned on when the board boots successfully, and is blinking on panic / assertion failed.</p><h2 id="uarts" tabindex="-1">UARTs <a class="header-anchor" href="#uarts" aria-label="Permalink to &quot;UARTs&quot;">​</a></h2><h3 id="usart1" tabindex="-1">USART1 <a class="header-anchor" href="#usart1" aria-label="Permalink to &quot;USART1&quot;">​</a></h3><blockquote><p>UART/USART PINS</p><hr><p>TX PA9 RX PA10</p></blockquote><h3 id="usart2" tabindex="-1">USART2 <a class="header-anchor" href="#usart2" aria-label="Permalink to &quot;USART2&quot;">​</a></h3><blockquote><p>UART/USART PINS</p><hr><p>CTS PA0 RTS PA1 TX PA2 RX PA3 CK PA4</p></blockquote><h3 id="default-usart-uart-configuration" tabindex="-1">Default USART/UART Configuration <a class="header-anchor" href="#default-usart-uart-configuration" aria-label="Permalink to &quot;Default USART/UART Configuration&quot;">​</a></h3><p>USART1 (RX &amp; TX only) is available through pins PA9 (TX) and PA10 (RX).</p><h2 id="usb" tabindex="-1">USB <a class="header-anchor" href="#usb" aria-label="Permalink to &quot;USB&quot;">​</a></h2><p>The board routes F401/F411&#39;s built-in FS PHY to a USB-C (non-dual-role) port. The chips still have a DWC2 USBOTG IP core, but only device mode is used. Note that only V3.1 PCB got a DNI solder bridge to short 5V and USB VBUS. Previous revisions had no support for USB host because of lack of port power as well as 5k pull-downs on USB-C CC1/CC2 pins (not affecting USB-A adapters). Because of this we are not considering USBOTG-FS Host configurations and do not map OTG_VBUS, OTG_ID pins to FS PHY, also no OVER/PWRON GPIOs.</p><p>If using USB and USART1 simultaneously, make sure to check CONFIG_OTG_ID_GPIO_DISABLE, else stm32_otgfsdev driver code remaps PA10 pin from USART1_RX to OTG_ID, and you&#39;ll lose keyboard/console input!</p><h2 id="spi-nor-flash" tabindex="-1">SPI NOR Flash <a class="header-anchor" href="#spi-nor-flash" aria-label="Permalink to &quot;SPI NOR Flash&quot;">​</a></h2><p>The seller may send boards with soldered on-board SPI NOR Flash, usually Winbond W25Q64JVSIQ (QuadSPI) or similar. F401/F411 lack QuadSPI support. NuttX supports such MTD storage via special drivers and filesystems. For example, external flash can be formatted with SmartFS (or NXFFS, LittleFS) and mounted on boot by board init code or interactively from NSH.</p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Each stm32f411-minimum configuration is maintained in a sub-directory and can be selected as follow:</p><pre><code>tools/configure.sh stm32f411-minimum:&lt;subdir&gt;

Where &lt;subdir&gt; is one of the following:
</code></pre><h3 id="configuration-directories" tabindex="-1">Configuration Directories <a class="header-anchor" href="#configuration-directories" aria-label="Permalink to &quot;Configuration Directories&quot;">​</a></h3><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Configures the NuttShell (nsh) located at apps/examples/nsh. This configuration enables a serial console on UART1.</p>`,31)]))}const p=e(i,[["render",s]]);export{c as __pageData,p as default};
