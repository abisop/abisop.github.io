import{_ as o,c as s,al as t,o as i}from"./chunks/framework.NFAqBSgQ.js";const f=JSON.parse('{"title":"romfs File System","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/romfs/index.md","filePath":"en/applications/examples/romfs/index.md"}'),a={name:"en/applications/examples/romfs/index.md"};function l(r,e,d,c,n,m){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="romfs-file-system" tabindex="-1"><code>romfs</code> File System <a class="header-anchor" href="#romfs-file-system" aria-label="Permalink to &quot;`romfs` File System&quot;">​</a></h1><p>This example exercises the romfs filesystem. Configuration options include:</p><ul><li><code>CONFIG_EXAMPLES_ROMFS_RAMDEVNO</code> – The minor device number to use for the ROM disk. The default is <code>1</code> (meaning <code>/dev/ram1</code>).</li><li><code>CONFIG_EXAMPLES_ROMFS_SECTORSIZE</code> – The ROM disk sector size to use. Default is <code>64</code>.</li><li><code>CONFIG_EXAMPLES_ROMFS_MOUNTPOINT</code> – The location to mount the ROM disk. Default: <code>/usr/local/share</code>.</li></ul>',3)]))}const p=o(a,[["render",l]]);export{f as __pageData,p as default};
