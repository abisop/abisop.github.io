import{_ as a,c as t,al as o,o as r}from"./chunks/framework.NFAqBSgQ.js";const s="/assets/mcuzone_uc3b-cpu.BwemuyHy.png",f=JSON.parse('{"title":"avr32dev1","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/avr/at32uc3/boards/avr32dev1/index.md","filePath":"en/platforms/avr/at32uc3/boards/avr32dev1/index.md"}'),i={name:"en/platforms/avr/at32uc3/boards/avr32dev1/index.md"};function l(n,e,d,c,h,p){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="avr32dev1" tabindex="-1">avr32dev1 <a class="header-anchor" href="#avr32dev1" aria-label="Permalink to &quot;avr32dev1&quot;">​</a></h1><p>This is a port of NuttX to the Atmel AVR32DEV1 board and compatible with MCUZone UC3B-CPU board depicted here:</p><p><img src="'+s+'" alt="" class="align-center"></p><p>This board is based on the Atmel AT32UC3B0256 MCU and uses a specially patched version of the GNU toolchain: The patches provide support for the AVR32 family. That patched GNU toolchain is available only from the Atmel website.</p><p>STATUS: This port is functional but very basic. There are configurations for NSH and the OS test.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><blockquote><ul><li>AVR32 AT32UC3B0256 microcontroller</li><li>mini-USB Connector</li><li>Power LED (LED1)</li><li>MCU controllable LEDs: LED2 and LED3</li><li>S1/RESET and S2 buttons (S2 accessible to user)</li><li>12MHz (main clock) and 32KHz for RTC</li></ul></blockquote><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>The board uses by default the USART1 as serial console. The pins PB2 (TXD) and PA24 (RXD) are used for USART1.</p><p>This way you need to connect a USB/Serial adapter to get access to the NuttShell. Connect the TXD from your USB/Serial to the RXD of the board, and the RXD from USB/Serial to the TXD of the board.</p><p>There is another detail about the baudrate, you need to use 57600 8n1.</p>',11)]))}const b=a(i,[["render",l]]);export{f as __pageData,b as default};
