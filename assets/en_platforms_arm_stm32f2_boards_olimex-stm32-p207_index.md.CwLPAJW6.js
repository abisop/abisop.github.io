import{_ as e,c as o,al as i,o as n}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"Olimex STM32-P207","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32f2/boards/olimex-stm32-p207/index.md","filePath":"en/platforms/arm/stm32f2/boards/olimex-stm32-p207/index.md"}'),s={name:"en/platforms/arm/stm32f2/boards/olimex-stm32-p207/index.md"};function a(l,t,r,p,m,d){return n(),o("div",null,t[0]||(t[0]=[i('<h1 id="olimex-stm32-p207" tabindex="-1">Olimex STM32-P207 <a class="header-anchor" href="#olimex-stm32-p207" aria-label="Permalink to &quot;Olimex STM32-P207&quot;">â€‹</a></h1><p>chip:stm32, chip:stm32f2, chip:stm32f207</p><p>The NuttX configuration for the Olimex STM32-P207 is assembled mainly from the configurations stm32f4discovery and stm3240g-eval.</p><p>It was tested with the NuttX EABI &quot;buildroot&quot; Toolchain.</p><p>Debugging with OpenOCD via an Olimex ARM-USB-TINY-H works. Note that CONFIG_DEBUG_SYMBOLS and CONFIG_STM32_DISABLE_IDLE_SLEEP_DURING_DEBUG are enabled so that the JTAG connection is not disconnected by the idle loop.</p><p>The following peripherals are enabled in this configuration.</p><ul><li>LEDs: show the system status</li><li>Buttons: TAMPER-button, WKUP-button, J1-Joystick (consists of RIGHT-, UP-, LEFT-, DOWN-, and CENTER-button). Built in app &#39;buttons&#39; works.</li><li>ADC: ADC1 samples the red trim potentiometer AN_TR Built in app &#39;adc&#39; works.</li><li>USB-FS-OTG: Enabled but not really tested, since there is only a USB-A-connector (host) connected to the full speed STM32 inputs.</li><li>USB-HS_OTG:The other connector (device) is connected to the high speed STM32 inputs (not enabled).</li><li>CAN: Built in app &#39;can&#39; works, but apart from that not really tested.</li><li>Ethernet: Ping to other station on the network works.</li></ul>',7)]))}const u=e(s,[["render",a]]);export{h as __pageData,u as default};
