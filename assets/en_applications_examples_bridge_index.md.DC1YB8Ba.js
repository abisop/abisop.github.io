import{_ as o,c as t,al as d,o as r}from"./chunks/framework.NFAqBSgQ.js";const I=JSON.parse('{"title":"bridge Network Bridge","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/bridge/index.md","filePath":"en/applications/examples/bridge/index.md"}'),i={name:"en/applications/examples/bridge/index.md"};function n(c,e,a,s,_,l){return r(),t("div",null,e[0]||(e[0]=[d('<h1 id="bridge-network-bridge" tabindex="-1"><code>bridge</code> Network Bridge <a class="header-anchor" href="#bridge-network-bridge" aria-label="Permalink to &quot;`bridge` Network Bridge&quot;">​</a></h1><p>A simple test of a system with multiple networks. It simply echoes all UDP packets received on network <code>1</code> and network <code>2</code> to network <code>2</code> and network <code>1</code>, respectively. Interface <code>1</code> and interface may or may not lie on the same network.</p><ul><li><code>CONFIG_EXAMPLES_BRIDGE</code> – Enables the simple UDP bridge test.</li></ul><p>There identical configurations for each of the two networks, <code>NETn</code> where <code>n</code> refers to the network being configured <code>n={1,2}</code>. Let <code>m</code> refer to the other network.</p><ul><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_IFNAME</code> – The register name of the network <code>n</code> device. Must match the previously registered driver name and must not be the same as other network device name, <code>CONFIG_EXAMPLES_BRIDGE_NETm_IFNAME</code>.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_RECVPORT</code> – Network <code>n</code> listen port number.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_SNDPORT</code> – Network <code>2</code> send port number.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_IOBUFIZE</code> – Size of the network <code>n</code> UDP send/receive I/O buffer.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_STACKSIZE</code> – Network <code>n</code> daemon stacksize.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_PRIORITY</code> – Network <code>n</code> daemon task priority.</li></ul><p>If used as a NSH add-on, then it is assumed that initialization of both networks was performed externally prior to the time that this test was started. Otherwise, the following options are available:</p><ul><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_NOMAC</code> – Select of the network <code>n</code> hardware does not have a built-in MAC address. If selected, the MAC address. provided by <code>CONFIG_EXAMPLES_BRIDGE_NETn_MACADDR</code> will be used to assign the MAC address to the network n device.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_DHCPC</code> – Use DHCP Client to get the network n IP address.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_IPADDR</code> – If <code>CONFIG_EXAMPLES_BRIDGE_NETn_DHCPC</code> is not selected, then this is the fixed IP address for network <code>n</code>.</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_DRIPADDR</code> – Network <code>n</code> default router IP address (Gateway).</li><li><code>CONFIG_EXAMPLES_BRIDGE_NETn_NETMASK</code> – Network <code>n</code> mask.</li></ul>',7)]))}const N=o(i,[["render",n]]);export{I as __pageData,N as default};
