import{_ as i,c as t,al as a,o}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"timer_gpio Timer GPIO example","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/timer_gpio/index.md","filePath":"en/applications/examples/timer_gpio/index.md"}'),l={name:"en/applications/examples/timer_gpio/index.md"};function r(n,e,s,p,d,c){return o(),t("div",null,e[0]||(e[0]=[a('<h1 id="timer-gpio-timer-gpio-example" tabindex="-1"><code>timer_gpio</code> Timer GPIO example <a class="header-anchor" href="#timer-gpio-timer-gpio-example" aria-label="Permalink to &quot;`timer_gpio` Timer GPIO example&quot;">â€‹</a></h1><p>This example uses the timer interrupt to periodically change the state of a digital output. The digital output may be a relay, a led or anything else. This example can be very useful to validate timer drivers by using a logic analyzer connected to the digital output. This example mainly differs from the timer example because it waits on a sigwaitinfo() instead of using a signal handler. This approach ensures a deterministic wake-up time when the signal occurs.</p><p>Dependencies:</p><ul><li><code>CONFIG_TIMER</code> -- The timer driver must be selected.</li><li><code>CONFIG_DEV_GPIO</code> -- The GPIO driver must be selected.</li></ul><p>Note: You should also select one timer instance and have the gpio driver properly configured in your board logic.</p><p>Example configuration:</p><ul><li></li></ul><pre><code>`EXAMPLES_TIMER_GPIO_TIM_DEVNAME` -- This is the name of the timer device\n\n:   that will be used. Default: `/dev/timer0`.\n</code></pre><ul><li></li></ul><pre><code>`EXAMPLES_TIMER_GPIO_GPIO_DEVNAME` -- This is the name of the gpio device\n\n:   that will be used. Default: `/dev/gpio0`.\n</code></pre><ul><li></li></ul><pre><code>`EXAMPLES_TIMER_GPIO_INTERVAL` -- This is the timer interval in\n\n:   microseconds. Default: `1000000`.\n</code></pre><ul><li></li></ul><pre><code>`EXAMPLES_TIMER_GPIO_SIGNO` -- This is the signal number that is used to\n\n:   notify that a timer interrupt occurred. Default: `32`.\n</code></pre><ul><li></li></ul><pre><code>`EXAMPLES_TIMER_GPIO_STACKSIZE` -- This is the stack size allocated when the\n\n:   timer task runs. Default: `2048`.\n</code></pre><ul><li><p><code>EXAMPLES_TIMER_GPIO_PRIORITY</code> -- This is the priority of the timer task. Default: <code>255</code>.</p></li><li></li></ul><pre><code>`EXAMPLES_TIMER_GPIO_PROGNAME` -- This is the name of the program that will\n\n:   be used from the nsh. Default: `timer_gpio`.\n</code></pre>',18)]))}const h=i(l,[["render",r]]);export{u as __pageData,h as default};
