import{_ as l,c as a,al as t,o as r}from"./chunks/framework.NFAqBSgQ.js";const g=JSON.parse('{"title":"lvgl LVGL","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/graphics/lvgl/index.md","filePath":"en/applications/graphics/lvgl/index.md"}'),o={name:"en/applications/graphics/lvgl/index.md"};function i(s,e,n,c,d,p){return r(),a("div",null,e[0]||(e[0]=[t('<h1 id="lvgl-lvgl" tabindex="-1"><code>lvgl</code> LVGL <a class="header-anchor" href="#lvgl-lvgl" aria-label="Permalink to &quot;`lvgl` LVGL&quot;">​</a></h1><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>Import with <code>#include &lt;lvgl/lvgl.h&gt;</code> or <code>#include &lt;lvgl.h&gt;</code>.</p><p>Upstream example ported to NuttX is present at <code>examples/lvgldemo</code>.</p><p>LVGL can be used with framebuffer device. To find example boards with this preconfigured, search for <code>CONFIG_GRAPHICS_LVGL=y</code> in <code>defconfig</code> files. All of them have also <code>CONFIG_VIDEO_FB=y</code> present.</p><p>As a second option, LVGL can talk to a display driver and explicitly draw line by line. For this case, there is no preconfigured board present. Go to _<a href="./.html">Porting</a> section of upstream documentation for more hints.</p><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h2><ul><li><a href="https://docs.lvgl.io/latest/en/html/index.html" target="_blank" rel="noreferrer">API documentation with examples</a></li><li><a href="https://github.com/lvgl/lvgl" target="_blank" rel="noreferrer">GitHub / LVGL / LVGL library</a></li><li><a href="https://github.com/lvgl/lv_examples" target="_blank" rel="noreferrer">GitHub / LVGL / Examples, tutorials, applications</a></li><li><a href="https://github.com/lvgl/lv_sim_eclipse_sdl" target="_blank" rel="noreferrer">GitHub / LVGL / Desktop simulator</a></li><li><a href="https://github.com/lvgl/lv_sim_emscripten" target="_blank" rel="noreferrer">GitHub / LVGL / Web simulator</a></li></ul>',8)]))}const u=l(o,[["render",i]]);export{g as __pageData,u as default};
