import{_ as o,c as r,al as a,o as n}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Nordic Thingy:52","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nrf52/boards/thingy52/index.md","filePath":"en/platforms/arm/nrf52/boards/thingy52/index.md"}'),t={name:"en/platforms/arm/nrf52/boards/thingy52/index.md"};function i(s,e,l,d,h,p){return n(),r("div",null,e[0]||(e[0]=[a(`<h1 id="nordic-thingy-52" tabindex="-1">Nordic Thingy:52 <a class="header-anchor" href="#nordic-thingy-52" aria-label="Permalink to &quot;Nordic Thingy:52&quot;">​</a></h1><p>chip:nrf52, chip:nrf52832</p><p>The <a href="https://www.nordicsemi.com/Products/Development-hardware/Nordic-Thingy-52" target="_blank" rel="noreferrer">Thingy:52 (PCA20020)</a> is a prototyping platform build around the nRF52832 from Nordic.</p><h2 id="peripheral-support" tabindex="-1">Peripheral Support <a class="header-anchor" href="#peripheral-support" aria-label="Permalink to &quot;Peripheral Support&quot;">​</a></h2><p>Peripheral Support NOTES</p><hr><p>UART Buttons LEDs NFC IMU (MPU-9250) Low power accelerometer (LIS2DH12) Pressure and temperature (LPS22HB) Humidity and temperature (HTS221) Color sensor (BH1745NUC) Gas sensor (CCS811) Microphone (MP34DB02) Speaker Battery monitoring Yes No No No No No No No No No No No No</p><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>At default serial console is available with Segger RTT driver. For access to the RTT console use this commands:</p><pre><code>JLinkGDBServer -if SWD -device stm32h743zi -speed 16000
sudo socat -d -d PTY,link=/dev/ttyRTT0,raw,ignoreeof TCP:127.0.0.1:19021,reuseaddr
minicom -D /dev/ttyRTT0
</code></pre><p>An alternative option is to use the P4 connector and connect an external UART converter:</p><p>Pin Signal Notes</p><hr><p>P0.02 UART0 TX P4 header P0.03 UART0 RX P4 header</p><p>For this you need to select the following options in your configuration:</p><pre><code>CONFIG_NRF52_UART0=y
CONFIG_UART0_SERIAL_CONSOLE=y
</code></pre><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Each configuration is maintained in a sub-directory and can be selected as follow:</p><pre><code>tools/configure.sh thingy52:&lt;subdir&gt;
</code></pre><p>Where &lt;subdir&gt; is one of the following:</p><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled on Segger RTT channel).</p><h2 id="flash-debug" tabindex="-1">Flash &amp; Debug <a class="header-anchor" href="#flash-debug" aria-label="Permalink to &quot;Flash &amp; Debug&quot;">​</a></h2><p>Both flashing and debuing is possible only with an external debug probe.</p>`,24)]))}const f=o(t,[["render",i]]);export{u as __pageData,f as default};
