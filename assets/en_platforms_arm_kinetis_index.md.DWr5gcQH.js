import{_ as t,c as r,al as a,o as i}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"NXP/FreeScale Kinetis","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/kinetis/index.md","filePath":"en/platforms/arm/kinetis/index.md"}'),o={name:"en/platforms/arm/kinetis/index.md"};function s(n,e,l,d,c,p){return i(),r("div",null,e[0]||(e[0]=[a('<h1 id="nxp-freescale-kinetis" tabindex="-1">NXP/FreeScale Kinetis <a class="header-anchor" href="#nxp-freescale-kinetis" aria-label="Permalink to &quot;NXP/FreeScale Kinetis&quot;">​</a></h1><h2 id="nxp-freescale-kinetis-k20" tabindex="-1">NXP/FreeScale Kinetis K20 <a class="header-anchor" href="#nxp-freescale-kinetis-k20" aria-label="Permalink to &quot;NXP/FreeScale Kinetis K20&quot;">​</a></h2><p>Used by Teensy-3.x. Architecture support (only) was added in NuttX-7.10. This support was taken from PX4 and is the work of Jakob Odersky. Support was added for the PJRC Teensy-3.1 board in NuttX-7.11. Backward compatible support for the Teensy-3.0 is included.</p><h2 id="nxp-freescale-kinetis-k28f" tabindex="-1">NXP/FreeScale Kinetis K28F <a class="header-anchor" href="#nxp-freescale-kinetis-k28f" aria-label="Permalink to &quot;NXP/FreeScale Kinetis K28F&quot;">​</a></h2><p>Use by Freedom-K28F. Architecture support for the Kinetis K28F along with board support for the Freedom-K28F was added in NuttX-7.15. The Freedom-K28F board is based on the Kinetis MK28FN2M0VMI15 MCU (ARM Cortex-M4 at150 MHz, 1 MB SRAM, 2 MB flash, HS and FS USB, 169 MAPBGA package). More information is available from the <a href="https://www.nxp.com/support/developer-resources/hardware-development-tools/freedom-development-boards/mcu-boards/nxp-freedom-development-board-for-kinetis-k27-and-k28-mcus:FRDM-K28F" target="_blank" rel="noreferrer">NXP website</a>.</p><h2 id="nxp-freescale-kinetis-k40" tabindex="-1">NXP/FreeScale Kinetis K40 <a class="header-anchor" href="#nxp-freescale-kinetis-k40" aria-label="Permalink to &quot;NXP/FreeScale Kinetis K40&quot;">​</a></h2><p>This port uses the Freescale Kinetis KwikStik K40. Refer to the <a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=KWIKSTIK-K40" target="_blank" rel="noreferrer">Freescale web site</a> for further information about this board. The Kwikstik is used with the FreeScale Tower System (mostly just to provide a simple UART connection)</p><h2 id="nxp-freescale-kinetis-k60" tabindex="-1">NXP/FreeScale Kinetis K60 <a class="header-anchor" href="#nxp-freescale-kinetis-k60" aria-label="Permalink to &quot;NXP/FreeScale Kinetis K60&quot;">​</a></h2><p>This port uses the <strong>Freescale Kinetis TWR-K60N512</strong> tower system. Refer to the <a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=TWR-K60N512-KIT" target="_blank" rel="noreferrer">Freescale web site</a> for further information about this board. The TWR-K60N51 includes with the FreeScale Tower System which provides (among other things) a DBP UART connection.</p><p><strong>MK60N512VLL100</strong>. Architecture support for the MK60N512VLL100 was contributed by Andrew Webster in NuttX-7.14.</p><h2 id="nxp-freescale-kinetis-k64" tabindex="-1">NXP/FreeScale Kinetis K64 <a class="header-anchor" href="#nxp-freescale-kinetis-k64" aria-label="Permalink to &quot;NXP/FreeScale Kinetis K64&quot;">​</a></h2><p>Support for the Kinetis K64 family and specifically for the <strong>NXP/Freescale Freedom K64F</strong> board was added in NuttX 7.17. Initial release includes two NSH configurations with support for on-board LEDs, buttons, and Ethernet with the on-board KSZ8081 PHY. SDHC supported has been integrated, but not verified. Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/kinetis/boards/freedom-k64f/README.txt" target="_blank" rel="noreferrer">README</a> file for further information.</p><p><strong>MK64FN1M0VMD12</strong>. Architecture support for the _MK64FN1M0VMD12 was contributed by Maciej Skrzypek in NuttX-7.20.</p><p><strong>NXP/Freescale Kinetis TWR-K64F120M</strong>. Support for the Freescale Kinetis TWR-K64F120M was contributed in NuttX-7.20 by Maciej Skrzypek. Refer to the <a href="http://www.nxp.com/products/sensors/accelerometers/3-axis-accelerometers/kinetis-k64-mcu-tower-system-module:TWR-K64F120M" target="_blank" rel="noreferrer">Freescale web site</a> for further information about this board. The board may be complemented by <a href="http://www.nxp.com/pages/serial-usb-ethernet-can-rs232-485-tower-system-module:TWR-SER" target="_blank" rel="noreferrer">TWR-SER</a> which includes (among other things), an RS232 and Ethernet connections. Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/kinetis/boards/twr-k64f120m/README.txt" target="_blank" rel="noreferrer">README</a> file for further information.</p><p><strong>Driver Status</strong>.</p><ul><li><strong>NuttX-6.8</strong>. Ethernet and SD card (SDHC) drivers also exist: The SDHC driver is partially integrated in to the NSH configuration but has some outstanding issues. Additional work remaining includes: (1) integrate th SDHC drivers, and (2) develop support for USB host and device. NOTE: Most of these remaining tasks are the same as the pending K40 tasks described above.</li><li><strong>NuttX-7.14</strong>. The Ethernet driver became stable in NuttX-7.14 thanks to the efforts of Andrew Webster.</li><li><strong>NuttX-7.17</strong>. Ethernet support was extended and verified on the Freedom K64F. A Kinetis USB device controller driver and PWM support was contributed by kfazz.</li></ul><h2 id="nxp-freescale-kinetis-k66" tabindex="-1">NXP/FreeScale Kinetis K66 <a class="header-anchor" href="#nxp-freescale-kinetis-k66" aria-label="Permalink to &quot;NXP/FreeScale Kinetis K66&quot;">​</a></h2><p>Support for the Kinetis K64 family and specifically for the <strong>NXP/Freescale Freedom K66F</strong> board was contributed by David Sidrane in NuttX 7.20. Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/kinetis/boards/freedom-k66f/README.txt" target="_blank" rel="noreferrer">README</a> file for further information.</p><p><strong>Driver Status</strong>.</p><ul><li>Most K6x drivers are compatible with the K66.</li><li><strong>NuttX-7.20</strong>. David Sidrane also contributed support for a serial driver on the K66&#39;s LPUART.</li><li><strong>NuttX-7.22</strong>. David Sidrane contributed improvements to the USB and I2C device drivers, RTC alarm functionality, and new SPI driver.</li><li><strong>NuttX-7.26</strong>. David Sidrane contributed DMA support to the Kinetis K6x family.</li></ul><h3 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h3><blockquote><p>boards/<em>/</em></p></blockquote>',22)]))}const f=t(o,[["render",s]]);export{u as __pageData,f as default};
