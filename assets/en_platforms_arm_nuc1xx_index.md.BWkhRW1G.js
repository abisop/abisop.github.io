import{_ as o,c as n,j as e,a as t,al as r,o as i}from"./chunks/framework.NFAqBSgQ.js";const f=JSON.parse('{"title":"nuvoTon NUC120","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nuc1xx/index.md","filePath":"en/platforms/arm/nuc1xx/index.md"}'),s={name:"en/platforms/arm/nuc1xx/index.md"};function l(p,a,u,d,c,h){return i(),n("div",null,a[0]||(a[0]=[e("h1",{id:"nuvoton-nuc120",tabindex:"-1"},[t("nuvoTon NUC120 "),e("a",{class:"header-anchor",href:"#nuvoton-nuc120","aria-label":'Permalink to "nuvoTon NUC120"'},"​")],-1),e("p",null,"This is a port of NuttX to the nuvoTon NuTiny-SDK-NUC120 that features the NUC120LE3AN MCU.",-1),e("p",null,[e("strong",null,"STATUS"),t(". Initial support for the NUC120 was released in NuttX-6.26. This initial support is very minimal: There is a NuttShell ("),e("code",{class:"interpreted-text",role:"ref"},"NSH <nsh>"),t(") configuration that might be the basis for an application development. As of this writing, more device drivers are needed to make this a more complete port. Refer to the NuttX board "),e("a",{href:"https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/nuc1xx/boards/nutiny-nuc120/README.txt",target:"_blank",rel:"noreferrer"},"README"),t(" file for further information.")],-1),r('<p><strong>Memory Usage</strong>. For a full-featured RTOS such as NuttX, providing support in a usable and meaningful way within the tiny memories of the NUC120 demonstrates the scalability of NuttX. The NUC120LE2AN comes in a 48-pin package and has 128KB FLASH and 16KB of SRAM. When running the NSH configuration (itself a full up application), there is still more than 90KB of FLASH and 10KB or SRAM available for further application development).</p><p>Static memory usage can be shown with <code>size</code> command:</p><p>NuttX, the NSH application, and GCC libraries use 34.2KB of FLASH leaving 93.8KB of FLASH (72%) free from additional application development. Static SRAM usage is about 1.2KB (&lt;4%) and leaves 14.8KB (86%) available for heap at runtime. SRAM usage at run-time can be shown with the NSH <code>free</code> command:</p><p>You can see that 10.0KB (62%) is available for further application development.</p><p><strong>Development Environments:</strong> 1) Linux with native Linux GNU toolchain, 2) Cygwin/MSYS with Cygwin GNU toolchain, 3) Cygwin/MSYS with Windows native toolchain, or 4) Native Windows. A DIY toolchain for Linux or Cygwin is provided by the NuttX <a href="https://bitbucket.org/nuttx/buildroot/downloads/" target="_blank" rel="noreferrer">buildroot</a> package.</p><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>',7)]))}const b=o(s,[["render",l]]);export{f as __pageData,b as default};
