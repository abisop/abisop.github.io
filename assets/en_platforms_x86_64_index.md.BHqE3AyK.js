import{_ as r,c as a,al as c,o as t}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"Intel 80x86_64","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/x86_64/index.md","filePath":"en/platforms/x86_64/index.md"}'),o={name:"en/platforms/x86_64/index.md"};function i(s,e,n,l,d,_){return t(),a("div",null,e[0]||(e[0]=[c('<h1 id="intel-80x86-64" tabindex="-1">Intel 80x86_64 <a class="header-anchor" href="#intel-80x86-64" aria-label="Permalink to &quot;Intel 80x86\\_64&quot;">​</a></h1><p>All x86_64 source reside in lower-level common, chip-specific, and architecture-specific directories.</p><h2 id="arch-x86-64-src-common-directory" tabindex="-1">arch/x86_64/src/common/ Directory <a class="header-anchor" href="#arch-x86-64-src-common-directory" aria-label="Permalink to &quot;arch/x86\\_64/src/common/ Directory&quot;">​</a></h2><p>This directory holds source files common to all x86_64 architectures.</p><h2 id="arch-x86-64-src-cmake-directory" tabindex="-1">arch/x86_64/src/cmake/ Directory <a class="header-anchor" href="#arch-x86-64-src-cmake-directory" aria-label="Permalink to &quot;arch/x86\\_64/src/cmake/ Directory&quot;">​</a></h2><p>This directory holds CMake support for x86_64 architecture.</p><blockquote><p><em>/</em></p></blockquote>',7)]))}const x=r(o,[["render",i]]);export{m as __pageData,x as default};
