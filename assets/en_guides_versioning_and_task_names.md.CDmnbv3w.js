import{_ as a,c as n,al as s,o as t}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Versioning and Task Names","description":"","frontmatter":{},"headers":[],"relativePath":"en/guides/versioning_and_task_names.md","filePath":"en/guides/versioning_and_task_names.md"}'),i={name:"en/guides/versioning_and_task_names.md"};function o(p,e,r,l,d,c){return t(),n("div",null,e[0]||(e[0]=[s(`<h1 id="versioning-and-task-names" tabindex="-1">Versioning and Task Names <a class="header-anchor" href="#versioning-and-task-names" aria-label="Permalink to &quot;Versioning and Task Names&quot;">​</a></h1><p>Warning</p><p>Migrated from: <a href="https://cwiki.apache.org/confluence/display/NUTTX/Versioning+and+Task+Names" target="_blank" rel="noreferrer">https://cwiki.apache.org/confluence/display/NUTTX/Versioning+and+Task+Names</a></p><p>And also seems outdated.</p><h2 id="question" tabindex="-1">Question <a class="header-anchor" href="#question" aria-label="Permalink to &quot;Question&quot;">​</a></h2><p>I have strange output from the NSH:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nsh&gt; sysinfo</span></span>
<span class="line"><span>System Information:</span></span>
<span class="line"><span>    NuttX Version:    0.0 Build: 0</span></span>
<span class="line"><span>    System Time:    1325809119 [s] UTC</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nsh&gt; ps</span></span>
<span class="line"><span>PID   PRI SCHD TYPE   NP STATE    NAME</span></span>
<span class="line"><span>    0   0 FIFO KTHREAD   READY    &lt;noname&gt;()</span></span>
<span class="line"><span>    1  50 FIFO KTHREAD   WAITSIG  &lt;noname&gt;()</span></span>
<span class="line"><span>    2 100 FIFO TASK      RUNNING  &lt;noname&gt;()</span></span></code></pre></div><p>No NAME and no version / build number</p><h2 id="answer" tabindex="-1">Answer <a class="header-anchor" href="#answer" aria-label="Permalink to &quot;Answer&quot;">​</a></h2><p>This is probably normal behavior. There are two separate, unrelated issues here.</p><h3 id="versioning" tabindex="-1">Versioning <a class="header-anchor" href="#versioning" aria-label="Permalink to &quot;Versioning&quot;">​</a></h3><p>There are two different ways to get NuttX: (1) You can download the versioned releases at <a href="https://bitbucket.org/nuttx/nuttx/downloads" target="_blank" rel="noreferrer">https://bitbucket.org/nuttx/nuttx/downloads</a>, or you can (2) take un-versioned snapshots from the GIT repository at <a href="https://github.com/apache/nuttx" target="_blank" rel="noreferrer">https://github.com/apache/nuttx</a>. Since you have no version information, I am assuming that you are using a un-versioned copy.</p><p>The version number you are looking at comes from the header file <code>nuttx/include/nuttx/version.h</code>. That header file was created at build time from a hidden file that you can find in the top-level nuttx directory called .version. For NuttX-7.10, that file looks like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CONFIG_VERSION_STRING=&quot;7.10&quot;</span></span>
<span class="line"><span>CONFIG_VERSION_MAJOR=7</span></span>
<span class="line"><span>CONFIG_VERSION_MINOR=10</span></span>
<span class="line"><span>CONFIG_VERSION_BUILD=&quot;85981b37acc215ab795ef4ea4045f3e85a49a7af&quot;</span></span></code></pre></div><p>The <code>.version</code> file does not exist in the GIT repository; it is was added to the <code>nuttx-7.10.tar.gz</code> tarball when the NuttX-7.10 version was created.</p><p>The <code>version.h</code> header file is then generated by <code>tools/mkversion</code> the first time that you build the RTOS. That tool generates this <code>version.h</code> header file for the above <code>.version</code> file:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/* version.h -- Autogenerated! Do not edit. */</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#ifndef __INCLUDE_NUTTX_VERSION_H</span></span>
<span class="line"><span>#define __INCLUDE_NUTTX_VERSION_H</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#define CONFIG_VERSION_STRING &quot;7.10&quot;</span></span>
<span class="line"><span>#define CONFIG_VERSION_MAJOR 7</span></span>
<span class="line"><span>#define CONFIG_VERSION_MINOR 10</span></span>
<span class="line"><span>#define CONFIG_VERSION_BUILD &quot;85981b37acc215ab795ef4ea4045f3e85a49a7af&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#define CONFIG_VERSION ((CONFIG_VERSION_MAJOR &lt;&lt; 8) | (CONFIG_VERSION_MINOR))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#endif /* __INCLUDE_NUTTX_VERSION_H */</span></span></code></pre></div><p>And that is where the sysinfo command gets the version information that it prints.</p><p>If you are using an un-versioned snapshot of NuttX from the GIT repository, then the <code>.version</code> file will not exist. The make system will check if there is <code>.version</code> file every time you build. If there is no <code>.version</code> in the top-level nuttx directory, then the make system will use the script at <code>tools/version.sh</code> to create one with version 0.0:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(TOPDIR)/.version:</span></span>
<span class="line"><span>    (Q) if [ ! -f .version ]; then \\</span></span>
<span class="line"><span>        echo &quot;No .version file found, creating one&quot;; \\</span></span>
<span class="line"><span>        tools/version.sh -v 0.0 -b 0 .version; \\</span></span>
<span class="line"><span>        chmod 755 .version; \\</span></span>
<span class="line"><span>    fi</span></span></code></pre></div><p>This is completely appropriate if you are using un-versioned code. You are, however, free to edit the top-level <code>.version</code> file to generate any kind of custom versioning information that you would like. It would, however, probably be inappropriate to say you are using a released version when you are not.</p><h3 id="task-name-size" tabindex="-1">Task Name Size <a class="header-anchor" href="#task-name-size" aria-label="Permalink to &quot;Task Name Size&quot;">​</a></h3><p>This one is easy. The size of a task name is controlled by the following setting in your <code>.config</code> file:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CONFIG_TASK_NAME_SIZE=0</span></span></code></pre></div><p>It provides the maximum length of a task name. Zero, of course, then means no task names are supported.</p>`,25)]))}const g=a(i,[["render",o]]);export{u as __pageData,g as default};
