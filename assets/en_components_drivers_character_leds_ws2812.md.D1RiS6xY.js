import{_ as r,c as t,al as o,o as s}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"ws2812 Drivers","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/drivers/character/leds/ws2812.md","filePath":"en/components/drivers/character/leds/ws2812.md"}'),i={name:"en/components/drivers/character/leds/ws2812.md"};function a(l,e,n,c,d,p){return s(),t("div",null,e[0]||(e[0]=[o('<h1 id="ws2812-drivers" tabindex="-1">ws2812 Drivers <a class="header-anchor" href="#ws2812-drivers" aria-label="Permalink to &quot;ws2812 Drivers&quot;">â€‹</a></h1><p>This driver allows control of any smart pixels that use the ws2812 protocol. It supports pixel chains that use normal RGB pixels or newer RGBW pixels.</p><p>The current driver does not support mixed RGB and RGBW pixels in a single chain.</p><p>The NuttX ws2812 driver is split into two parts:</p><ol><li>An &quot;upper half&quot;, generic driver that provides the common interface to application level code, and</li><li>A &quot;lower half&quot;, platform-specific driver that implements the low-level formatting and output.</li></ol><p>Files supporting ws2812 can be found in the following locations:</p><ul><li><strong>Interface Definition</strong>. The header file for the NuttX ws2812 driver reside at <code>include/nuttx/leds/ws2812.h</code>. This header file includes both the application level interface to the ws2812 driver as well as the interface between the &quot;upper half&quot; and &quot;lower half&quot; drivers. The ws2812 module uses a standard character driver framework.</li><li><strong>&quot;Upper Half&quot; Driver</strong>. The generic, &quot;upper half&quot; ws2812 driver resides at <code>drivers/leds/ws2812.c</code>.</li><li><strong>&quot;Lower Half&quot; Drivers</strong>. Platform-specific ws2812 drivers reside in <code>arch/&lt;architecture&gt;/src/&lt;hardware&gt;</code> directory for the specific processor <code>&lt;architecture&gt;</code> and for the specific <code>&lt;chip&gt;</code> ws2812 peripheral devices.</li></ul>',7)]))}const f=r(i,[["render",a]]);export{u as __pageData,f as default};
