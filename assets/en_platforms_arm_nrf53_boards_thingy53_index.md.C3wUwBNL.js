import{_ as a,c as o,al as r,o as i}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Nordic Thingy:53","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nrf53/boards/thingy53/index.md","filePath":"en/platforms/arm/nrf53/boards/thingy53/index.md"}'),n={name:"en/platforms/arm/nrf53/boards/thingy53/index.md"};function t(p,e,s,l,h,c){return i(),o("div",null,e[0]||(e[0]=[r(`<h1 id="nordic-thingy-53" tabindex="-1">Nordic Thingy:53 <a class="header-anchor" href="#nordic-thingy-53" aria-label="Permalink to &quot;Nordic Thingy:53&quot;">​</a></h1><p>chip:nrf53, chip:nrf5340</p><p>The <a href="https://www.nordicsemi.com/Products/Development-hardware/Nordic-Thingy-53" target="_blank" rel="noreferrer">Thingy:53 (PCA20053)</a> is a prototyping platform build around the nRF5340 from Nordic.</p><h2 id="peripheral-support" tabindex="-1">Peripheral Support <a class="header-anchor" href="#peripheral-support" aria-label="Permalink to &quot;Peripheral Support&quot;">​</a></h2><p>Peripheral Support NOTES</p><hr><p>UART USB Buttons LEDs NFC Yes Yes Yes No No<br> MX25R6435F PMIC Battery monitoring Buzzer PDM microphone (VM3011) Front End Module (nRF21540) No No No No No No Dual line SPI Low power accelerometer (ADXL362) Yes SPI IMU (BMI270) Yes SPI or I2C 0x68 Magnetometer (BMM150) Yes I2C 0x10 Color sensor (BH1749NUC) Yes I2C 0x38 Air quality sensor (BME688) No I2C 0x76</p><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>Serial console for the application core:</p><p>Pin Signal Notes</p><hr><p>P0.11 APP UART0 TX virtual COM 0 P0.12 APP UART0 RX virtual COM 0</p><p>Serial console for the network core:</p><p>Pin Signal Notes</p><hr><p>P0.09 NET UART0 TX virtual COM 1 P0.10 NET UART0 RX virtual COM 1</p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Each configuration is maintained in a sub-directory and can be selected as follow:</p><pre><code>tools/configure.sh thingy53:&lt;subdir&gt;
</code></pre><p>Where &lt;subdir&gt; is one of the following:</p><h3 id="composite-cpuapp" tabindex="-1">composite_cpuapp <a class="header-anchor" href="#composite-cpuapp" aria-label="Permalink to &quot;composite\\_cpuapp&quot;">​</a></h3><p>NuttShell configuration with support for CDC/ACM with RNDIS composite driver.</p><h3 id="nsh-cpuapp" tabindex="-1">nsh_cpuapp <a class="header-anchor" href="#nsh-cpuapp" aria-label="Permalink to &quot;nsh\\_cpuapp&quot;">​</a></h3><p>Basic NuttShell configuration for the application core (console enabled in UART0, exposed via J-Link VCOM0, at 115200 bps).</p><h3 id="nsh-cpunet" tabindex="-1">nsh_cpunet <a class="header-anchor" href="#nsh-cpunet" aria-label="Permalink to &quot;nsh\\_cpunet&quot;">​</a></h3><p>Basic NuttShell configuration for the network core (console enabled in UART0, exposed via J-Link VCOM1, at 115200 bps).</p><h2 id="flash-debug" tabindex="-1">Flash &amp; Debug <a class="header-anchor" href="#flash-debug" aria-label="Permalink to &quot;Flash &amp; Debug&quot;">​</a></h2><p>Both flashing and debuing is possible only with an external debug probe.</p>`,28)]))}const f=a(n,[["render",t]]);export{u as __pageData,f as default};
