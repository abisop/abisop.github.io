import{_ as t,c as a,al as r,o}from"./chunks/framework.NFAqBSgQ.js";const i="/assets/SX1262.6n5rK5aP.jpg",s="/assets/command_run0.CVEWiLlM.jpg",g=JSON.parse('{"title":"SX126x LoRa driver","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/drivers/character/wireless/lpwan/sx126x.md","filePath":"en/components/drivers/character/wireless/lpwan/sx126x.md"}'),n={name:"en/components/drivers/character/wireless/lpwan/sx126x.md"};function d(c,e,l,h,p,m){return o(),a("div",null,e[0]||(e[0]=[r('<h1 id="sx126x-lora-driver" tabindex="-1">SX126x LoRa driver <a class="header-anchor" href="#sx126x-lora-driver" aria-label="Permalink to &quot;SX126x LoRa driver&quot;">​</a></h1><p><strong>Currently experimental. Changes can happen in the near future</strong></p><h2 id="short-introduction-sx126x" tabindex="-1">Short introduction SX126x <a class="header-anchor" href="#short-introduction-sx126x" aria-label="Permalink to &quot;Short introduction SX126x&quot;">​</a></h2><p><img src="'+i+'" alt="" class="align-right"></p><p>The SX126x is a LoRa chip by Semtech. Sometimes also found in chips with a different name but the same or similar sillicon underneath. The older variant is the SX127x, even with its higher number. The SX126x series promises to improve the link budget. They also added extra spreading factors.</p><h2 id="userspace-api" tabindex="-1">Userspace API <a class="header-anchor" href="#userspace-api" aria-label="Permalink to &quot;Userspace API&quot;">​</a></h2><p>This driver is controlled as a character device and using IOCTL commands. At the time of writing this 24 February, 2025, there is no common API <strong>yet</strong> for LoRa devices and other RF devices under <code>/lpwan</code>. Currently this driver is controlled using older and driver specific IOCTL commands.</p><h3 id="basic-rf-ioctl" tabindex="-1">Basic RF IOCTL <a class="header-anchor" href="#basic-rf-ioctl" aria-label="Permalink to &quot;Basic RF IOCTL&quot;">​</a></h3><p>See <code>nuttx/wireless/ioctl.h</code> : <code>WLIOC_x</code> for setting the basic radio parameters such as frequency and power. Please note that frequency and power may be limited by the lower driver part at board logic.</p><h3 id="driver-dedicated-ioctl" tabindex="-1">Driver dedicated IOCTL <a class="header-anchor" href="#driver-dedicated-ioctl" aria-label="Permalink to &quot;Driver dedicated IOCTL&quot;">​</a></h3><p>See <code>nuttx/wireless/lpwan/sx126x.h</code> : <code>SX126XIOC_x</code> for the commands.</p><ul><li>The packet type is set using <code>SX126XIOC_PACKETTYPESET</code> which takes <code>sx126x_packet_type_e</code> enums. <strong>Currently only LoRa packet type is supported.</strong></li><li>LoRa modulation and LoRa packets are configured using <code>SX126XIOC_LORACONFIGSET</code> which takes a pointer to a <code>sx126x_lora_config_s</code> struct. This struct contains two separate structures for modulation and packet config. It is recommended to follow the SX126x datasheet at <a href="https://www.semtech.com/products/wireless-rf/lora-connect/sx1262" target="_blank" rel="noreferrer">https://www.semtech.com/products/wireless-rf/lora-connect/sx1262</a> that gives more details about each parameter.</li></ul><h3 id="reading-writing" tabindex="-1">Reading / Writing <a class="header-anchor" href="#reading-writing" aria-label="Permalink to &quot;Reading / Writing&quot;">​</a></h3><p>Reading and writing is done with the <code>read</code> and <code>write</code> functions.</p><ul><li><code>write</code> directly transmits the given bytes using the IOCTL configured parameters. <strong>Does not support polling or timeout yet.</strong></li><li><code>read</code> takes a pointer to <code>sx126x_read_header_s</code>, which contains information about the received packet. <strong>RSSI and SNR aren&#39;t implemented yet</strong>. <em>Note that packets are always received, even when the CRC (checked using ``.crc_error``) failed.</em></li></ul><h2 id="board-implementation" tabindex="-1">Board implementation <a class="header-anchor" href="#board-implementation" aria-label="Permalink to &quot;Board implementation&quot;">​</a></h2><p>The driver can be registered in board logic using <code>sx126x_register</code>, which takes an SPI bus, lower driver and the path. More information about <code>struct sx126x_lower_s</code> parameters can be found in detail under <code>nuttx/wireless/lpwan/sx126x.h</code> : <code>struct sx126x_lower_s</code>.</p><p>This driver supports multiple instances using <code>dev_number</code> found in <code>sx126x_lower_s</code>. This is done so multiple channels of LoRa can work at the same time.</p><p><strong>Do not assign random numbers in get_pa_values. This can damage the device depending on model. Refer to the manual</strong></p><h2 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h2><p>A simple ping-pong test is made to test the device. This code can be used as an example. It is found here <a href="https://pastebin.com/71CdKZvm" target="_blank" rel="noreferrer">https://pastebin.com/71CdKZvm</a> It takes the following parameters:</p><ul><li><code>-f</code> sets frequency in hz. The range is board depended.</li><li><code>-b</code> sets the bandwidth in kHz and automatically selects the closest sx126x supported bandwidth.</li><li><code>-s</code> sets the spreading factor between 5 and 12.</li><li><code>-p</code> sets the power in dBm. The range is board depended. Also PA setting depended.</li><li><code>-t</code> perform transmit. Transmit the following bytes.</li><li><code>-r</code> perform receive. Receives and print.</li><li><code>-x</code> perform transmit and receive. Transmits following bytes and attempts to receives immediately. To be used with <code>-e</code> echo</li><li><code>-e</code> perform echo. Listen and repeat.</li></ul><p><img src="'+s+'" alt="" class="align-center"></p>',23)]))}const x=t(n,[["render",d]]);export{g as __pageData,x as default};
