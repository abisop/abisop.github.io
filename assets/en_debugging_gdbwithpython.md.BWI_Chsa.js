import{_ as e,c as o,al as n,o as a}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"GDB with Python","description":"","frontmatter":{},"headers":[],"relativePath":"en/debugging/gdbwithpython.md","filePath":"en/debugging/gdbwithpython.md"}'),i={name:"en/debugging/gdbwithpython.md"};function r(l,t,h,d,s,u){return a(),o("div",null,t[0]||(t[0]=[n('<h1 id="gdb-with-python" tabindex="-1">GDB with Python <a class="header-anchor" href="#gdb-with-python" aria-label="Permalink to &quot;GDB with Python&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>The NuttX kernel can be effectively debugged using GDB&#39;s Python extension. Commonly used classes and utilities are implemented in the <code>nuttx/tools/gdb/nuttxgdb</code> directory. Users can also create custom Python scripts tailored to their debugging needs to analyze and troubleshoot the NuttX kernel more efficiently.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><ol><li>Compile NuttX with CONFIG_DEBUG_SYMBOLS=y enabled and change <code>CONFIG_DEBUG_SYMBOLS_LEVEL</code> to <code>-g3</code>.</li><li>Use GDB to debug the NuttX ELF binary (on a real device, a simulator, or with a coredump).</li><li>Add the following argument to the GDB command line: <code>-ix=&quot;nuttx/tools/pynuttx/gdbinit.py&quot;</code></li><li>GDB will automatically load the Python script, enabling the use of custom commands.</li></ol><h2 id="how-to-write-a-gdb-python-script" tabindex="-1">How to write a GDB python script <a class="header-anchor" href="#how-to-write-a-gdb-python-script" aria-label="Permalink to &quot;How to write a GDB python script&quot;">​</a></h2><p>Here is an article that introduces the fundamental principles of Python in GDB. Read it to gain a basic understanding. <a href="https://interrupt.memfault.com/blog/automate-debugging-with-gdb-python-api" target="_blank" rel="noreferrer">Automate Debugging with GDB Python API</a>.</p><p>For more documentation on gdb python, please refer to the official documentation of GDB. <a href="https://sourceware.org/gdb/current/onlinedocs/gdb.html/Python-API.html#Python-API" target="_blank" rel="noreferrer">GDB Python API</a>.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>To use GDB with Python, the following requirements must be met:</p><ul><li>Use GDB compiled with Python support, Python 3.8 or later</li><li>Install required Python packages: <code>pip install -r tools/pynuttx/requirements.txt</code></li><li>Compile NuttX with debug level 3: <code>CONFIG_DEBUG_SYMBOLS_LEVEL=&quot;-g3&quot;</code></li></ul><p>Warning</p><p>The GDB Python API is not available in all versions of GDB. Make sure to use a version that supports Python.</p><p>Warning</p><p>NuttX must be compile with <code>CONFIG_DEBUG_SYMBOLS=y</code> and <code>CONFIG_DEBUG_SYMBOLS_LEVEL=&quot;-g3&quot;</code> to use GDB with Python.</p><p>gdb/irqinfo.rst</p>',16)]))}const g=e(i,[["render",r]]);export{p as __pageData,g as default};
