import{_ as e,c as a,al as o,o as r}from"./chunks/framework.NFAqBSgQ.js";const s=JSON.parse('{"title":"foc FOC motor controller example","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/foc/index.md","filePath":"en/applications/examples/foc/index.md"}'),d={name:"en/applications/examples/foc/index.md"};function i(l,t,n,h,p,c){return r(),a("div",null,t[0]||(t[0]=[o(`<h1 id="foc-foc-motor-controller-example" tabindex="-1"><code>foc</code> FOC motor controller example <a class="header-anchor" href="#foc-foc-motor-controller-example" aria-label="Permalink to &quot;\`foc\` FOC motor controller example&quot;">​</a></h1><p>The main purpose of this example is to provide a universal template to implement the motor controller based on the kernel-side FOC device and the application-side FOC library.</p><p>At the moment, this example implements a simple open-loop velocity controller.</p><h2 id="hardware-setup" tabindex="-1">Hardware setup <a class="header-anchor" href="#hardware-setup" aria-label="Permalink to &quot;Hardware setup&quot;">​</a></h2><p>This example has not yet implemented any mechanism to protect the powered device. This means that there is no overtemeprature protection, no overcurrent protection and no overvoltage protection.</p><p>Make sure that you power the device properly and provide current limits on your own so as not to break your hardware.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>The FOC PI current controller parameters can be obtained from the given equations:</p><pre><code>Kp = ccb * Ls;
pp = Rs / Ls;
Ki = pp * Kp * T;
</code></pre><ul><li><p>where:</p><ul><li>Kp - PI proportional coefficient</li><li>Ki - PI integral coefficient</li><li>Rs - average phase serial resistance</li><li>Ls - average phase serial inductance</li><li>pp - pole plant</li><li>ccb - current control bandwidth</li><li>T - sampling period</li></ul></li></ul><h2 id="sample-parameters-for-some-commercially-available-motors" tabindex="-1">Sample parameters for some commercially available motors <a class="header-anchor" href="#sample-parameters-for-some-commercially-available-motors" aria-label="Permalink to &quot;Sample parameters for some commercially available motors&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Motor model</th><th>p</th><th>Rs</th><th>Ls</th><th>i_max</th><th>v_max</th></tr></thead><tbody><tr><td>Odrive D6374 150KV</td><td>7</td><td>0.0254 Ohm</td><td>8.73 uH</td><td>?</td><td>?</td></tr><tr><td>Linix 45ZWN24-40</td><td>2</td><td>0.5 Ohm</td><td>0.400 mH</td><td>2.34A</td><td>24V</td></tr><tr><td>Bull-Running BR2804-1700</td><td>7</td><td>0.11 Ohm</td><td>0.018 mH</td><td>1.2A</td><td>12V</td></tr><tr><td>iPower GBM2804H-100T</td><td>7</td><td>5.29 Ohm</td><td>1.05 mH</td><td>0.15A</td><td>12V</td></tr></tbody></table><ul><li>Odrive D6374 150KV</li></ul><table tabindex="0"><thead><tr><th>f_PWM</th><th>f_notifier</th><th>ccb</th><th>Kp</th><th>Ki</th></tr></thead><tbody><tr><td>20kHz</td><td>10kHz</td><td>1000</td><td>0.0087</td><td>0.0025</td></tr></tbody></table><ul><li>Linix 45ZWN24-40 (PMSM motor dedicated for NXP FRDM-MC-LVMTR kit)</li></ul><table tabindex="0"><thead><tr><th>f_PWM</th><th>f_notifier</th><th>ccb</th><th>Kp</th><th>Ki</th></tr></thead><tbody><tr><td>10kHz</td><td>5kHz</td><td>1000</td><td>0.4</td><td>0.1</td></tr></tbody></table><ul><li>Bull-Running BR2804-1700 kV (motor provided with the ST P-NUCLEO-IHM07 kit)</li></ul><table tabindex="0"><thead><tr><th>f_PWM</th><th>f_notifier</th><th>ccb</th><th>Kp</th><th>Ki</th></tr></thead><tbody><tr><td>20kHz</td><td>10kHz</td><td>200</td><td>0.036</td><td>0.022</td></tr></tbody></table><ul><li>iPower GBM2804H-100T (gimbal motor provided with the ST P-NUCLEO-IHM03 kit)</li></ul><table tabindex="0"><thead><tr><th>f_PWM</th><th>f_notifier</th><th>ccb</th><th>Kp</th><th>Ki</th></tr></thead><tbody><tr><td>20kHz</td><td>10kHz</td><td>TODO</td><td>TODO</td><td>TODO</td></tr></tbody></table>`,20)]))}const u=e(d,[["render",i]]);export{s as __pageData,u as default};
