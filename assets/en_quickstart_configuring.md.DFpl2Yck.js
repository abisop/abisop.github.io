import{_ as i,c as t,al as s,j as n,a as e,o as l}from"./chunks/framework.NFAqBSgQ.js";const o="/assets/menuconfig.BhzI_iNG.png",k=JSON.parse('{"title":"Configuring","description":"","frontmatter":{},"headers":[],"relativePath":"en/quickstart/configuring.md","filePath":"en/quickstart/configuring.md"}'),c={name:"en/quickstart/configuring.md"};function p(u,a,r,d,g,h){return l(),t("div",null,a[0]||(a[0]=[s('<h1 id="configuring" tabindex="-1">Configuring <a class="header-anchor" href="#configuring" aria-label="Permalink to &quot;Configuring&quot;">‚Äã</a></h1><p>Apache NuttX is a very configurable: nearly all features can be configured in or out of the system. This makes it possible to compile a build tailored for your hardware and application.</p><p>The Apache NuttX configuration system uses Linux&#39;s <a href="https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt" target="_blank" rel="noreferrer">kconfig system</a> which includes various frontends that allow you to modify configuration easily. Usually, the <code>menuconfig</code> frontend is used, which is a console based menu system (more info <a href="https://en.wikipedia.org/wiki/Menuconfig" target="_blank" rel="noreferrer">here</a>).</p><p>As previously explained in [[compiling_make]{.title-ref}, the fir]([compiling_make]{.title-ref}, the fir.md)st step is to load a premade configuration for your board. Then, you can modify this configuration to your liking. In this example, we will show how you modify the default configuration of the <code>sim</code> build, a build of NuttX which runs on your own computer.</p>',4),n("ol",null,[n("li",null,[n("p",null,"Initialize Board Configuration"),n("blockquote",null,[n("div",{class:"language- vp-adaptive-theme"},[n("button",{title:"Copy Code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[n("code",null,[n("span",{class:"line"},[n("span",null," cd nuttx")]),e(`
`),n("span",{class:"line"},[n("span",null," ./tools/configure.sh -l sim:nsh")]),e(`
`),n("span",{class:"line"},[n("span",null,"  Copy files")]),e(`
`),n("span",{class:"line"},[n("span",null,"  Select CONFIG_HOST_LINUX=y")]),e(`
`),n("span",{class:"line"},[n("span",null,"  Refreshing...")])])])])])]),n("li",null,[n("p",null,"Build & run"),n("blockquote",null,[n("div",{class:"language- vp-adaptive-theme"},[n("button",{title:"Copy Code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[n("code",null,[n("span",{class:"line"},[n("span",null," make clean; make")]),e(`
`),n("span",{class:"line"},[n("span",null," ./nuttx")]),e(`
`),n("span",{class:"line"},[n("span",null,"login: admin")]),e(`
`),n("span",{class:"line"},[n("span",null,"password: Administrator")]),e(`
`),n("span",{class:"line"},[n("span",null,"User Logged-in!")]),e(`
`),n("span",{class:"line"},[n("span",null,"nsh>")])])])])]),n("p",null,"From another terminal window, kill the simulator:"),n("blockquote",null,[n("div",{class:"language- vp-adaptive-theme"},[n("button",{title:"Copy Code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[n("code",null,[n("span",{class:"line"},[n("span",null," pkill nuttx")])])])])])]),n("li",null,[n("p",null,"Modify configuration"),n("p",null,[e("In this case we will remove the login feature (which will boot straight to the prompt). To do so, we use the "),n("code",null,"menuconfig"),e(" frontend.")]),n("blockquote",null,[n("div",{class:"language- vp-adaptive-theme"},[n("button",{title:"Copy Code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[n("code",null,[n("span",{class:"line"},[n("span",null," make menuconfig")])])])])]),n("p",null,"Here's what you should see:"),n("p",null,[n("img",{src:o,alt:"Screenshot of menuconfig system main screen"}),e('{.align-center width="800px"}')]),n("p",null,[e("The NSH Login setting is under "),n("code",null,"Application Configuration --> NSH Library"),e('{.interpreted-text role="menuselection"}. You can use '),n("code",{class:"interpreted-text",role:"kbd"},"ü¢Å"),e(" and "),n("code",{class:"interpreted-text",role:"kbd"},"ü¢É"),e(" keys to navigate and "),n("code",{class:"interpreted-text",role:"kbd"},"‚Üµ"),e(" to enter a submenu. To disable the corresponding setting go to "),n("code",null,"Console Login"),e('{.interpreted-text role="menuselection"} and press '),n("code",null,"spacebar"),e('{.interpreted-text role="kbd"} to it (so that it has a blank space instead of a star in it).')]),n("p",null,[e("Now you need to exit "),n("code",null,"menuconfig"),e(" and save the modified configuration. Use the "),n("code",{class:"interpreted-text",role:"kbd"},"ü°∏"),e(" and "),n("code",{class:"interpreted-text",role:"kbd"},"ü°∫"),e(" arrow keys to navigate the lower menu. If you select "),n("code",{class:"interpreted-text",role:"menuselection"},"Exit"),e(" you will be prompted to save the config.")])]),n("li",null,[n("p",null,"Build with the new Configuration"),n("blockquote",null,[n("div",{class:"language- vp-adaptive-theme"},[n("button",{title:"Copy Code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[n("code",null,[n("span",{class:"line"},[n("span",null," make")])])])])])]),n("li",null,[n("p",null,"Run"),n("blockquote",null,[n("div",{class:"language- vp-adaptive-theme"},[n("button",{title:"Copy Code",class:"copy"}),n("span",{class:"lang"}),n("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[n("code",null,[n("span",{class:"line"},[n("span",null," ./nuttx")]),e(`
`),n("span",{class:"line"},[n("span",null,"NuttShell (NSH) NuttX-8.2")]),e(`
`),n("span",{class:"line"},[n("span",null,"MOTD: username=admin password=Administrator")])])])])]),n("p",null,"Success!")])],-1),s(`<p>Tip</p><p>If you find that message of the day (MOTD) annoying and want to turn that off, it&#39;s configured in <code>Application Configuration --&gt; NSH Library --&gt; Message of the Day (MOTD)</code>{.interpreted-text role=&quot;menuselection&quot;}.</p><h2 id="fast-configuration-changes" tabindex="-1">Fast configuration changes <a class="header-anchor" href="#fast-configuration-changes" aria-label="Permalink to &quot;Fast configuration changes&quot;">‚Äã</a></h2><p>If you know exactly which configuration symbol you want to change, you can use the <code>kconfig-tweak</code> tool (comes with the <code>kconfig-frontends</code> package) to quickly change a setting without going into the configuration frontend. This is useful to change settings such as debug options:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> kconfig-tweak --disable CONFIG_DEBUG_NET</span></span>
<span class="line"><span> make olddefconfig  # needed to have the kconfig system check the config</span></span>
<span class="line"><span> kconfig-tweak --enable CONFIG_DEBUG_NET</span></span>
<span class="line"><span> make olddefconfig</span></span></code></pre></div><p>This is also useful to script configuration changes that you perform often:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_ALERT</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_FEATURES</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_ERROR</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_WARN</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_INFO</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_ASSERTIONS</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_NET</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_NET_ERROR</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_NET_WARN</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_NET_INFO</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_SYMBOLS</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_DEBUG_NOOPT</span></span>
<span class="line"><span>kconfig-tweak --disable CONFIG_SYSLOG_TIMESTAMP</span></span>
<span class="line"><span>make oldconfig</span></span></code></pre></div><h2 id="reference-configuration" tabindex="-1">Reference configuration <a class="header-anchor" href="#reference-configuration" aria-label="Permalink to &quot;Reference configuration&quot;">‚Äã</a></h2><p>Defconfig supports the use of <code>#include</code> statements to reference other configuration files:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CONFIG_XXX1=y</span></span>
<span class="line"><span>CONFIG_XXX2=y</span></span>
<span class="line"><span>#include &quot;configs/system.config&quot;</span></span>
<span class="line"><span>#include &quot;configs/net.config&quot;</span></span></code></pre></div><p>The default header file search path includes:</p><ul><li>Current directory;</li><li><code>{boards}/configs/common</code>;</li><li><code>{boards}/common/configs</code>;</li></ul><h2 id="merge-configuration" tabindex="-1">Merge configuration <a class="header-anchor" href="#merge-configuration" aria-label="Permalink to &quot;Merge configuration&quot;">‚Äã</a></h2><p>Multiple config fragments can be merged manually using the tools/merge_config.py script.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> cd nuttx</span></span>
<span class="line"><span> ./tools/merge_config.py -o defconfig .config1 .config2</span></span></code></pre></div>`,15)]))}const m=i(c,[["render",p]]);export{k as __pageData,m as default};
