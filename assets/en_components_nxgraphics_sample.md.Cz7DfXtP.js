import{_ as t,c as o,al as s,o as a}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Sample Code","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/nxgraphics/sample.md","filePath":"en/components/nxgraphics/sample.md"}'),i={name:"en/components/nxgraphics/sample.md"};function n(d,e,p,r,l,c){return a(),o("div",null,e[0]||(e[0]=[s('<h1 id="sample-code" tabindex="-1">Sample Code <a class="header-anchor" href="#sample-code" aria-label="Permalink to &quot;Sample Code&quot;">â€‹</a></h1><p><code>apps/examples/nx*</code>. No sample code is provided in this document. However, examples can be found in the NuttX source tree at the follow locations: That example code is intended to test NX. Since it is test code, it is designed to exercise functionality and does not necessarily represent best NX coding practices.</p><ul><li><code>apps/examples/nx</code>. This is a test of windows, optionally with toolbars. Two windows are created, re-sized, moved, raise lowered. Simulated mouse and keyboard input is provided.</li><li><code>apps/examples/nxhello</code>. This is intended to be simplest NX test: It simply displays the words &quot;Hello, World!&quot; centered on the display.</li><li><code>apps/examples/nxtext</code>. This illustrates how fonts may be managed to provide scrolling text windows. Pop-up windows are included to verify the clipping and re-drawing of the text display.</li></ul><p>In its current form, the NX graphics system provides a low level of graphics and window support. Most of the complexity of manage redrawing and handling mouse and keyboard events must be implemented by the NX client code.</p><p><strong>Building</strong> <code>apps/examples/nx</code>. Testing was performed using the Linux/Cygwin-based NuttX simulator. Instructions are provided for building that simulation are provided in <a href="#testcoverage">Appendix C</a> of this document.</p>',5)]))}const h=t(i,[["render",n]]);export{u as __pageData,h as default};
