import{_ as r,c as a,al as t,o as s}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"GD32F4","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/gd32f4/index.md","filePath":"en/platforms/arm/gd32f4/index.md"}'),o={name:"en/platforms/arm/gd32f4/index.md"};function i(p,e,d,n,l,h){return s(),a("div",null,e[0]||(e[0]=[t('<h1 id="gd32f4" tabindex="-1">GD32F4 <a class="header-anchor" href="#gd32f4" aria-label="Permalink to &quot;GD32F4&quot;">​</a></h1><p>The devices of GD32F4xx series are 32-bit general-purpose microcontrollers based on the Cortex-M4 processor. The Cortex-M4 processor includes three AHB buses known as I-Code, D-Code and System buses. All memory accesses of the Cortex-M4 processor are executed on the three buses according to the different purposes and the target memory spaces. The memory organization uses a Harvard architecture, pre-defined memory map and up to 4 GB of memory space, making the system flexible and extendable.</p><h2 id="supported-mcus" tabindex="-1">Supported MCUs <a class="header-anchor" href="#supported-mcus" aria-label="Permalink to &quot;Supported MCUs&quot;">​</a></h2><p>TODO</p><h2 id="peripheral-support" tabindex="-1">Peripheral Support <a class="header-anchor" href="#peripheral-support" aria-label="Permalink to &quot;Peripheral Support&quot;">​</a></h2><p>The following list indicates peripherals now supported in NuttX:</p><p>Peripheral Support Notes</p><hr><p>SYSCFG FMC PMU RCU GPIO DMA IPA EXTI SPI TLI I2C USART I2S SDIO ENET Yes Yes yes Yes Yes Yes no Yes Yes no Yes Yes no yes Yes</p><h3 id="memory" tabindex="-1">Memory <a class="header-anchor" href="#memory" aria-label="Permalink to &quot;Memory&quot;">​</a></h3><ul><li>CONFIG_RAM_SIZE - Describes the installed DRAM (SRAM in this case)</li><li>CONFIG_RAM_START - The start address of installed DRAM</li><li>CONFIG_GD32_TCMEXCLUDE - Exclude TCM SRAM from the HEAP</li><li>CONFIG_ARCH_INTERRUPTSTACK - This architecture supports an interrupt stack. If defined, this symbol is the size of the interrupt stack in bytes. If not defined, the user task stacks will be used during interrupt handling.</li></ul><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>',13)]))}const m=r(o,[["render",i]]);export{c as __pageData,m as default};
