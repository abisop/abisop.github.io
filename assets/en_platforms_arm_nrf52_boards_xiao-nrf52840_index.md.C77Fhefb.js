import{_ as n,c as s,al as e,o as i}from"./chunks/framework.NFAqBSgQ.js";const t="/assets/xiao-nrf52840.CmHM0kmh.jpg",g=JSON.parse('{"title":"Seeed Studio XIAO nRF52840","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nrf52/boards/xiao-nrf52840/index.md","filePath":"en/platforms/arm/nrf52/boards/xiao-nrf52840/index.md"}'),p={name:"en/platforms/arm/nrf52/boards/xiao-nrf52840/index.md"};function l(o,a,r,d,c,h){return i(),s("div",null,a[0]||(a[0]=[e('<h1 id="seeed-studio-xiao-nrf52840" tabindex="-1">Seeed Studio XIAO nRF52840 <a class="header-anchor" href="#seeed-studio-xiao-nrf52840" aria-label="Permalink to &quot;Seeed Studio XIAO nRF52840&quot;">​</a></h1><p>chip:nrf52, chip:nrf52840</p><p>The <a href="https://wiki.seeedstudio.com/XIAO_BLE/" target="_blank" rel="noreferrer">Seeed Studio XIAO nRF52840</a> is a general purpose board supplied by Seeed Studio and it is compatible with the Nordic nRF52840 ecosystem as they share the same MCU.</p><p><img src="'+t+`" alt="" class="align-center"></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Nordic nRF52840, ARM® Cortex®-M4 32-bit processor with FPU, 64 MHz</li><li>256 KB RAM,1MB Flash 2MB onboard Flash</li><li>Bluetooth 5.0/BLE/NFC</li><li>1xUART, 1xI2C, 1xSPI, 1xNFC, 1xSWD, 11xGPIO(PWM)</li><li>USB Type-C interface</li><li>1 RGB LED, 1 charge LED</li><li>1 RESET button</li></ul><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>By default, a serial console appears on pins 6 (TX P1.11) and pin 7 (RX P1.12). This console runs a 115200-8N1. The board can be configured to use the USB connection as the serial console.</p><h2 id="user-led" tabindex="-1">User LED <a class="header-anchor" href="#user-led" aria-label="Permalink to &quot;User LED&quot;">​</a></h2><p>The RGB LED is connected as follows:</p><p>Color Pin</p><hr><p>RED P0.26 GREEN P0.30 BLUE P0.6</p><h2 id="buttons" tabindex="-1">Buttons <a class="header-anchor" href="#buttons" aria-label="Permalink to &quot;Buttons&quot;">​</a></h2><p>The Reset button can be used to enter bootloader mode by rapidly clicking it twice. Then, it will enumerate as a storage device to a computer connected via USB. Saving a .UF2 file to this device will replace the Flash ROM contents on the nRF52840.</p><h2 id="pin-mapping" tabindex="-1">Pin Mapping <a class="header-anchor" href="#pin-mapping" aria-label="Permalink to &quot;Pin Mapping&quot;">​</a></h2><p>Pads numbered anticlockwise from USB connector.</p><p>Pad Signal Notes</p><hr><p>0 P0.02 D0/A0 1 P0.03 D1/A1 2 P0.28 D2/A2 3 P0.29 D3/A3 4 P0.04 D4/SDA 5 P0.05 D5/SCL 6 P1.11 Default TX for UART0 serial console 7 P1.12 Default RX for UART0 serial console 8 P1.13 D8/SCK 9 P1.14 D9/MISO 10 P1.15 D10/MOSI 11 12 3V3 Ground Power output to peripherals 13 VIN +5V Supply to board</p><h2 id="power-supply" tabindex="-1">Power Supply <a class="header-anchor" href="#power-supply" aria-label="Permalink to &quot;Power Supply&quot;">​</a></h2><p>The working voltage of the MCU is 3.3V. Voltage input connected to general I/O pins may cause chip damage if it&#39;s higher than 3.3V.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><ol><li>Download UF2 Tools:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> git clone https://github.com/microsoft/uf2.git</span></span></code></pre></div><ol start="2"><li>Configure and build NuttX:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> git clone https://github.com/apache/nuttx.git nuttx</span></span>
<span class="line"><span> git clone https://github.com/apache/nuttx-apps.git apps</span></span>
<span class="line"><span> cd nuttx</span></span>
<span class="line"><span> make distclean</span></span>
<span class="line"><span> ./tools/configure.sh xiao-nrf52840:nsh</span></span>
<span class="line"><span> make V=1</span></span></code></pre></div><ol start="3"><li>Convert nuttx.hex to UF2 format using U2F Tools:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> python3 uf2/utils/uf2conv.py -c -f 0xADA52840 -i nuttx.hex -o nuttx.uf2</span></span></code></pre></div><p>4. Connect the Seeed Studio XIAO nRF52840, and enter bootloader mode by rapidly clicking it twice. The board will be detected as a USB Mass Storage Device. Then copy &quot;nuttx.uf2&quot; into the device.</p><ol start="6"><li>To access the console, TX and RX pins must be connected to the device such as USB-serial converter.</li></ol><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled in UART0, at 115200 bps).</p><h3 id="usbnsh" tabindex="-1">usbnsh <a class="header-anchor" href="#usbnsh" aria-label="Permalink to &quot;usbnsh&quot;">​</a></h3><p>Basic NuttShell configuration using CDC/ACM serial (console enabled in USB Port, at 115200 bps).</p><h3 id="jumbo" tabindex="-1">jumbo <a class="header-anchor" href="#jumbo" aria-label="Permalink to &quot;jumbo&quot;">​</a></h3><p>This configuration enabled NuttShell via USB and enabled leds and gpio examples:</p><p>Testing leds:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nsh&gt; leds</span></span>
<span class="line"><span>leds_main: Starting the led_daemon</span></span>
<span class="line"><span>leds_main: led_daemon started</span></span>
<span class="line"><span></span></span>
<span class="line"><span>led_daemon (pid# 3): Running</span></span>
<span class="line"><span>led_daemon: Opening /dev/userleds</span></span>
<span class="line"><span>led_daemon: Supported LEDs 0x07</span></span>
<span class="line"><span>led_daemon: LED set 0x01</span></span>
<span class="line"><span>nsh&gt; led_daemon: LED set 0x02</span></span>
<span class="line"><span>led_daemon: LED set 0x03</span></span>
<span class="line"><span>led_daemon: LED set 0x04</span></span>
<span class="line"><span>led_daemon: LED set 0x05</span></span>
<span class="line"><span>led_daemon: LED set 0x06</span></span>
<span class="line"><span>led_daemon: LED set 0x07</span></span></code></pre></div><p>Testing gpios:</p><p>PIN/GPIO Mode Device</p><hr><p>D0/P0.02 Input /dev/gpio0 D2/P0.28 Output /dev/gpio1 D1/P0.03 Input /dev/gpio2</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nsh&gt; gpio /dev/gpio0</span></span>
<span class="line"><span>Driver: /dev/gpio0</span></span>
<span class="line"><span>  Input pin:     Value=0</span></span>
<span class="line"><span>nsh&gt; gpio /dev/gpio0</span></span>
<span class="line"><span>Driver: /dev/gpio0</span></span>
<span class="line"><span>  Input pin:     Value=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nsh&gt; gpio -o 0 /dev/gpio1</span></span>
<span class="line"><span>Driver: /dev/gpio1</span></span>
<span class="line"><span>  Output pin:    Value=1</span></span>
<span class="line"><span>  Writing:       Value=0</span></span>
<span class="line"><span>  Verify:        Value=0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nsh&gt; gpio -w 1 /dev/gpio2</span></span>
<span class="line"><span>Driver: /dev/gpio2</span></span>
<span class="line"><span>  Interrupt pin: Value=0</span></span>
<span class="line"><span>  Verify:        Value=1</span></span></code></pre></div>`,45)]))}const b=n(p,[["render",l]]);export{g as __pageData,b as default};
