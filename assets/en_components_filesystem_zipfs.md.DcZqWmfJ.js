import{_ as a,c as e,al as t,o as n}from"./chunks/framework.NFAqBSgQ.js";const m=JSON.parse('{"title":"ZipFS","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/filesystem/zipfs.md","filePath":"en/components/filesystem/zipfs.md"}'),i={name:"en/components/filesystem/zipfs.md"};function p(o,s,l,c,d,r){return n(),e("div",null,s[0]||(s[0]=[t(`<h1 id="zipfs" tabindex="-1">ZipFS <a class="header-anchor" href="#zipfs" aria-label="Permalink to &quot;ZipFS&quot;">​</a></h1><p>Zipfs is a read only file system that mounts a zip file as a NuttX file system through the NuttX VFS interface. This allows users to read files while decompressing them, without requiring additional storage space.</p><h2 id="config" tabindex="-1">CONFIG <a class="header-anchor" href="#config" aria-label="Permalink to &quot;CONFIG&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CONFIG_FS_ZIPFS=y</span></span>
<span class="line"><span>CONFIG_LIB_ZLIB=y</span></span></code></pre></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><ol><li><code>./tools/configure.sh sim:zipfs</code> build sim platform with zipfs support.</li><li><code>make</code> build NuttX.</li><li><code>./nuttx</code> run NuttX.</li><li><code>nsh&gt; mount -t hostfs -o /home/&lt;your host name&gt;/work /host</code> mount host directory to <code>/host</code>.</li><li><code>nsh&gt; mount -t zipfs -o /host/test.zip /zip</code> mount zip file to <code>/zipfs</code>.</li><li>Use cat/ls command to test.</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nsh&gt; ls /zip</span></span>
<span class="line"><span>/zip:</span></span>
<span class="line"><span> a/1</span></span>
<span class="line"><span> a/2</span></span>
<span class="line"><span>nsh&gt; cat /zip/a/1</span></span>
<span class="line"><span>this is zipfs test 1</span></span>
<span class="line"><span>nsh&gt; cat /zip/a/2</span></span>
<span class="line"><span>this is zipfs test 2</span></span></code></pre></div>`,7)]))}const u=a(i,[["render",p]]);export{m as __pageData,u as default};
