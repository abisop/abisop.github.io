import{_ as r,c as o,al as s,j as e,a as t,o as n}from"./chunks/framework.NFAqBSgQ.js";const M=JSON.parse('{"title":"ST STM32L4","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/stm32l4/index.md","filePath":"en/platforms/arm/stm32l4/index.md"}'),p={name:"en/platforms/arm/stm32l4/index.md"};function l(i,a,d,u,S,c){return n(),o("div",null,a[0]||(a[0]=[s("",28),e("blockquote",null,[e("ol",null,[e("li",null,[e("p",null,[t("You need to have NuttX built with debug symbols, see "),e("code",{class:"interpreted-text",role:"ref"},"debugging"),t(".")])]),e("li",null,[e("p",null,"Launch the OpenOCD GDB server:"),e("pre",null,[e("code",null,`openocd -f interface/stlink.cfg -f target/stm32l4x.cfg -c 'init; reset halt'
`)])]),e("li",null,[e("p",null,"You can now attach to remote OpenOCD GDB server with your favorite debugger, for instance gdb:"),e("pre",null,[e("code",null,`arm-none-eabi-gdb --tui nuttx -ex 'target extended-remote localhost:3333'
(gdb) monitor reset halt
(gdb) breakpoint nsh_main
(gdb) continue
`)])])])],-1),e("h2",{id:"supported-boards",tabindex:"-1"},[t("Supported Boards "),e("a",{class:"header-anchor",href:"#supported-boards","aria-label":'Permalink to "Supported Boards"'},"â€‹")],-1),e("blockquote",null,[e("p",null,[t("boards/"),e("em",null,"/")])],-1)]))}const T=r(p,[["render",l]]);export{M as __pageData,T as default};
