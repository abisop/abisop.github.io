import{_ as e,c as a,al as i,o}from"./chunks/framework.NFAqBSgQ.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/risc-v/k210/boards/maix-bit/README-qemu.md","filePath":"en/platforms/risc-v/k210/boards/maix-bit/README-qemu.md"}'),r={name:"en/platforms/risc-v/k210/boards/maix-bit/README-qemu.md"};function n(s,t,l,u,c,p){return o(),a("div",null,t[0]||(t[0]=[i('<ol><li>Download and install toolchain</li></ol><p>$ curl <a href="https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86%5C_64-linux-ubuntu14.tar.gz" target="_blank" rel="noreferrer">https://static.dev.sifive.com/dev-tools/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86\\_64-linux-ubuntu14.tar.gz</a></p><ol start="2"><li>Build and install qemu</li></ol><p>$ git clone <a href="https://github.com/qemu/qemu" target="_blank" rel="noreferrer">https://github.com/qemu/qemu</a> $ cd qemu $ ./configure --target-list=riscv64-softmmu $ make $ sudo make install</p><ol start="3"><li>Modify defconfig</li></ol><p>--- a/boards/risc-v/k210/maix-bit/configs/nsh/defconfig +++ b/boards/risc-v/k210/maix-bit/configs/nsh/defconfig @@ -25,6 +25,7 @@ CONFIG_EXAMPLES_HELLO=y CONFIG_FS_PROCFS=y CONFIG_IDLETHREAD_STACKSIZE=2048 CONFIG_INTELHEX_BINARY=y +CONFIG_K210_WITH_QEMU=y CONFIG_LIBC_PERROR_STDOUT=y CONFIG_LIBC_STRERROR=y</p><ol start="4"><li>Configure and build NuttX</li></ol><p>$ mkdir ./nuttx; cd ./nuttx $ git clone <a href="https://github.com/apache/nuttx.git" target="_blank" rel="noreferrer">https://github.com/apache/nuttx.git</a> nuttx $ git clone <a href="https://github.com/apache/nuttx-apps.git" target="_blank" rel="noreferrer">https://github.com/apache/nuttx-apps.git</a> apps $ cd nuttx $ make distclean $ ./tools/configure.sh maix-bit:nsh $ make V=1</p><ol start="5"><li>Run the nuttx with qemu</li></ol><p>$ qemu-system-riscv64 -nographic -machine sifive_u -bios ./nuttx</p><p>NOTE: To run nuttx for kostest, gdb needs to be used to load both nuttx_user.elf and nuttx</p><p>$ qemu-system-riscv64 -nographic -machine sifive_u -s -S $ riscv64-unknown-elf-gdb -ex &#39;target extended-remote:1234&#39; -ex &#39;load nuttx_user.elf&#39; -ex &#39;load nuttx&#39; -ex &#39;c&#39;</p><ol start="6"><li>TODO</li></ol><p>Support FPU Support RISC-V User mode</p>',14)]))}const _=e(r,[["render",n]]);export{d as __pageData,_ as default};
