import{_ as a,c as r,al as t,o as l}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"Updating a Release System with ELF Programs","description":"","frontmatter":{},"headers":[],"relativePath":"en/guides/updating_release_system_elf.md","filePath":"en/guides/updating_release_system_elf.md"}'),i={name:"en/guides/updating_release_system_elf.md"};function s(n,e,o,d,p,m){return l(),r("div",null,e[0]||(e[0]=[t('<h1 id="updating-a-release-system-with-elf-programs" tabindex="-1">Updating a Release System with ELF Programs <a class="header-anchor" href="#updating-a-release-system-with-elf-programs" aria-label="Permalink to &quot;Updating a Release System with ELF Programs&quot;">​</a></h1><p>Warning</p><p>Migrated from: <a href="https://cwiki.apache.org/confluence/display/NUTTX/Updating+a+Release+System+with+ELF+Programs" target="_blank" rel="noreferrer">https://cwiki.apache.org/confluence/display/NUTTX/Updating+a+Release+System+with+ELF+Programs</a></p><p>Warning</p><p>Migrated from: <a href="https://cwiki.apache.org/confluence/display/NUTTX/Updating+a+Release+System+with+ELF+Programs" target="_blank" rel="noreferrer">https://cwiki.apache.org/confluence/display/NUTTX/Updating+a+Release+System+with+ELF+Programs</a></p><p>You can enhance the functionality of your released embedded system by adding ELF programs, which can be loaded from a file system. These programs can be stored on an SD card or downloaded into on-board SPI FLASH, allowing for easy updates or extensions to the system&#39;s firmware.</p><p>There are two ways you can accomplish this:</p><h2 id="partially-linked" tabindex="-1">Partially linked <a class="header-anchor" href="#partially-linked" aria-label="Permalink to &quot;Partially linked&quot;">​</a></h2><p>This describes building the partially linked, relocatable ELF program that depends on a symbol table provided by the base firmware in FLASH.</p><p class="title-ref">Reference: - See [[Partially Linked ELF Program](`Partially Linked ELF Program.md)s &lt;partially_linked_elf&gt;]</p><h2 id="fully-linked" tabindex="-1">Fully linked <a class="header-anchor" href="#fully-linked" aria-label="Permalink to &quot;Fully linked&quot;">​</a></h2><p>This describes building a fully linked, relocatable ELF program that does not depend on any symbol table information.</p><p class="title-ref">Reference: - See [[Fully Linked ELF Program](`Fully Linked ELF Program.md)s &lt;fully_linked_elf&gt;]</p>',13)]))}const g=a(i,[["render",s]]);export{h as __pageData,g as default};
