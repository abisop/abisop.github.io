import{_ as a,c as o,al as r,o as n}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"Nordic Thingy:91","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/nrf91/boards/thingy91/index.md","filePath":"en/platforms/arm/nrf91/boards/thingy91/index.md"}'),i={name:"en/platforms/arm/nrf91/boards/thingy91/index.md"};function t(s,e,l,h,d,p){return n(),o("div",null,e[0]||(e[0]=[r('<h1 id="nordic-thingy-91" tabindex="-1">Nordic Thingy:91 <a class="header-anchor" href="#nordic-thingy-91" aria-label="Permalink to &quot;Nordic Thingy:91&quot;">​</a></h1><p>chip:nrf91, chip:nrf52, chip:nrf9160, chip:nrf52840</p><p>The <a href="https://www.nordicsemi.com/Products/Development-hardware/Nordic-Thingy-91" target="_blank" rel="noreferrer">Thingy:91 (PCA0035)</a> is a development board based on the nRF9160 and nRF52840 from Nordic.</p><h2 id="peripheral-support" tabindex="-1">Peripheral Support <a class="header-anchor" href="#peripheral-support" aria-label="Permalink to &quot;Peripheral Support&quot;">​</a></h2><p>Peripheral Support NOTES</p><hr><p>UART Modem GPS Buttons LEDs COEX PMIC Battery monitoring Buzzer EEPROM (24CW160) Low power accelerometer (ADXL362) Hi G accelerometer (ADXL372) Air quality sensor (HBME680) Color sensor (BH1749NUC) Yes Yes No Yes No No No No No No No No No No</p><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><ol><li>Console over RTT UART</li><li>Access to UART0 console over USB connected to nRF52840. MCU_IF0 and MCU_IF1 pins are used to communicate between MCUs.</li></ol><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>TODO</p><h2 id="flash-debug" tabindex="-1">Flash &amp; Debug <a class="header-anchor" href="#flash-debug" aria-label="Permalink to &quot;Flash &amp; Debug&quot;">​</a></h2><p>Both flashing and debuing is possible only with an external debug probe.</p>',13)]))}const f=a(i,[["render",t]]);export{u as __pageData,f as default};
