import{_ as t,c as r,al as o,o as a}from"./chunks/framework.NFAqBSgQ.js";const h=JSON.parse('{"title":"NXP LPC54xx","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/lpc54xx/index.md","filePath":"en/platforms/arm/lpc54xx/index.md"}'),n={name:"en/platforms/arm/lpc54xx/index.md"};function s(i,e,p,d,l,u){return a(),r("div",null,e[0]||(e[0]=[o('<h1 id="nxp-lpc54xx" tabindex="-1">NXP LPC54xx <a class="header-anchor" href="#nxp-lpc54xx" aria-label="Permalink to &quot;NXP LPC54xx&quot;">​</a></h1><p>A port to the <a href="https://www.nxp.com/support/developer-resources/hardware-development-tools/lpcxpresso-boards/lpcxpresso54628-development-board:OM13098" target="_blank" rel="noreferrer">LPCXpresso-LPC54628</a> was added in NuttX-7.24. Initial configurations include: A basic NSH configuration (nsh), a networking configuration (netnsh), and three graphics configurations (nxwm, fb, and lvgl).</p><p><strong>LPC4508</strong>. The port was verified on an LPC5408 by a NuttX user with relevant changes incorporated in NuttX-7.26.</p><p><strong>Driver Status</strong>.</p><ul><li><strong>NuttX-7.24</strong> The initial release for the LPC54xx in NuttX included the following drivers: UARTs, SysTick, SD/MMC, DMA, GPIO, GPIO interrupts, LEDs and buttons, LCD, WWDT, RTC, RNG, Ethernet, and SPI. The SPI driver is untested and there are known issues with the SD/MMC driver, however.</li><li><strong>NuttX-7.29</strong> Configurations were added to verify the &quot;Per-Window Framebuffer&quot; feature also added in NuttX-7.29.</li></ul><p>Refer to the LPCXpresso-LPC54628 board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/lpc54xx/boards/lpcxpresso-lpc54628/README.txt" target="_blank" rel="noreferrer">README</a> file for more detailed information about this port.</p><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>',8)]))}const x=t(n,[["render",s]]);export{h as __pageData,x as default};
