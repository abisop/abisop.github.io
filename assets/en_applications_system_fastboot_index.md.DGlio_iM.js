import{_ as e,c as o,al as a,o as s}from"./chunks/framework.NFAqBSgQ.js";const b=JSON.parse('{"title":"fastboot fastbootd","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/system/fastboot/index.md","filePath":"en/applications/system/fastboot/index.md"}'),l={name:"en/applications/system/fastboot/index.md"};function d(r,t,i,n,c,m){return s(),o("div",null,t[0]||(t[0]=[a('<h1 id="fastboot-fastbootd" tabindex="-1"><code>fastboot</code> fastbootd <a class="header-anchor" href="#fastboot-fastbootd" aria-label="Permalink to &quot;`fastboot` fastbootd&quot;">​</a></h1><h2 id="prepare" tabindex="-1">Prepare <a class="header-anchor" href="#prepare" aria-label="Permalink to &quot;Prepare&quot;">​</a></h2><ul><li>Check fastboot tool(Host): <code>fastboot --version</code></li><li>Download fastboot tool and install(Host): <a href="https://developer.android.com/tools/releases/platform-tools" target="_blank" rel="noreferrer">platform-tools</a></li><li>Enable the fastbootd application(Device): <code>CONFIG_USBFASTBOOT=y</code> and <code>CONFIG_SYSTEM_FASTBOOTD=y</code></li><li>Start fastbootd(Device): <code>fastbootd &amp;</code></li></ul><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;Commands&quot;">​</a></h2><ul><li><p><code>fastboot reboot [FLAG]</code>: Reboot the device, more details for <code>[FLAG]</code>: <a href="https://github.com/apache/nuttx-apps/blob/master/nshlib/nsh_syscmds.c#L114" target="_blank" rel="noreferrer">g_resetflag</a> and <a href="https://github.com/apache/nuttx/blob/master/include/sys/boardctl.h#L458" target="_blank" rel="noreferrer">boardioc_softreset_subreason_e</a></p></li><li><p><code>fastboot flash &lt;PARTITION&gt; &lt;FILENAME&gt;</code>: Flash partition <code>&lt;PARTITION&gt;</code> using the given <code>&lt;FILENAME&gt;</code></p></li><li><p><code>fastboot erase &lt;PARTITION&gt;</code>: Erase given partition</p></li><li></li></ul><pre><code>Get Variables\n\n:   -   `fastboot getvar product`: Get product name\n    -   `fastboot getvar kernel`: Get kernel name\n    -   `fastboot getvar version`: Get OS version string\n    -   `fastboot getvar slot-count`: Get slot count\n    -   `fastboot getvar max-download-size`: Get max download size\n</code></pre><ul><li></li></ul><pre><code>OEM\n\n:   -   `fastboot oem filedump &lt;PARTITION&gt; [OFFSET] [LENGTH]`: Get\n        `&lt;LENGTH&gt;` (full by default) bytes of `&lt;PARTITION&gt;` from\n        `&lt;OFFSET&gt;` (zero by default)\n    -   `fastboot oem memdump &lt;ADDRESS&gt; &lt;LENGTH&gt;`: Dump `&lt;LENGTH&gt;`\n        bytes memory from address `&lt;ADDRESS&gt;`\n    -   `fastboot oem shell &lt;COMMAND&gt;`: Execute custom commands.\n        e.g. \\&quot;oem shell ps\\&quot;, \\&quot;oem shell ls /dev/\\&quot;\n</code></pre><ul><li><code>fastboot get_staged &lt;OUT_FILE&gt;</code>: Writes data staged by the last command to file <code>&lt;OUT_FILE&gt;</code>. e.g. &quot;oem filedump&quot; and &quot;oem memdump&quot;</li></ul><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><ul><li>Exit fastboot mode: <code>fastboot reboot</code></li><li>Flash app.bin to partition /dev/app: <code>fastboot flash app ./app.bin</code></li><li>Erase partition /dev/userdata: <code>fastboot erase userdata</code></li><li>Dump partition /dev/app: <code>fastboot filedump /dev/app</code> and then <code>fastboot get_staged ./dump_app.bin</code></li><li>Dump memory from 0x44000000 to 0x440b6c00: <code>fastboot oem memdump 0x44000000 0xb6c00</code> and then <code>fastboot get_staged ./mem_44000000_440b6c00.bin</code></li><li>Create RAM disk &quot;/dev/ram10&quot; of size 320KB: <code>fastboot oem shell &quot;mkrd -m 10 -s 512 640&quot;</code></li></ul>',11)]))}const f=e(l,[["render",d]]);export{b as __pageData,f as default};
