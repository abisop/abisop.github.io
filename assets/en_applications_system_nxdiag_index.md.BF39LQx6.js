import{_ as a,c as n,al as s,j as t,a as e,o as i}from"./chunks/framework.NFAqBSgQ.js";const g=JSON.parse('{"title":"nxdiag NuttX Diagnostic Tool","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/system/nxdiag/index.md","filePath":"en/applications/system/nxdiag/index.md"}'),r={name:"en/applications/system/nxdiag/index.md"};function d(l,o,u,p,c,h){return i(),n("div",null,o[0]||(o[0]=[s('<h1 id="nxdiag-nuttx-diagnostic-tool" tabindex="-1"><code>nxdiag</code> NuttX Diagnostic Tool <a class="header-anchor" href="#nxdiag-nuttx-diagnostic-tool" aria-label="Permalink to &quot;`nxdiag` NuttX Diagnostic Tool&quot;">​</a></h1><p>The NuttX Diagnostic Tool (Nxdiag) is a command line tool that can be used to gather information about the NuttX and host systems. It also can be used to run a tests to verify that the vendor&#39;s tools are properly installed and configured.</p><p>Its primary purpose is to gather information that can be used to debug problems and ease the process of reporting bugs for uninexperienced users.</p><p>This tool uses a Python script (<code>nuttx/tools/host_info_dump.py</code>) to gather information about the host system during build and a C program to gather information about the NuttX system and display all available information. For more information about the python script, check the command line options and code comments of <code>host_info_dump.py</code>.</p><p>Alternatively, <code>host_info</code> target can be used without enabling nxdiag application and reflashing to get information about system. Target can work after configuration step and prints information about the NuttX and host systems.</p><p>Note</p><p>Nxdiag requires Python 3.6 or later. On Linux distributions, the <code>distro</code> Python module is recommended as it provides more accurate information about the host system.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2>',8),t("p",null,[e("This page shows "),t("code",null,"nxdiag"),e(" options. Note that some options are only available if the respective configuration options are enabled (see "),t("code",{class:"interpreted-text",role:"ref"},"cmdtable <nxdiagcmddependencies>"),e("). For a complete list of "),t("code",null,"nxdiag"),e(" options available to the system, just run "),t("code",null,"nxdiag"),e(":")],-1),t("pre",null,[t("code",null,`Usage: nxdiag [options]
Options:
        -h                                 Show this message
        -n, --nuttx                        Output the NuttX operational system information.
        -f, --flags                        Output the NuttX compilation and linker flags used.
        -c, --config                       Output the NuttX configuration options used.
        -o, --host-os                      Output the host system operational system information.
        -p, --host-path                    Output the host PATH environment variable.
        -k, --host-packages                Output the host installed system packages.
        -m, --host-modules                 Output the host installed Python modules.
        -v, --vendor-specific              Output vendor specific information.
        --all                              Output all available information.
`)],-1),t("p",null,[e("An example output can be observed "),t("a",{href:"https://pastebin.com/HSw1EvhR",target:"_blank",rel:"noreferrer"},"here"),e(".")],-1),t("blockquote",null,[t("p",null,"config.rst")],-1)]))}const f=a(r,[["render",d]]);export{g as __pageData,f as default};
