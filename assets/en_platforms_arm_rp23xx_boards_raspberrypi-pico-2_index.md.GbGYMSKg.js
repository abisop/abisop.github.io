import{_ as a,c as o,al as r,o as i}from"./chunks/framework.NFAqBSgQ.js";const t="/assets/pico-2.DrAaJe1o.png",P=JSON.parse('{"title":"Raspberry Pi Pico 2","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/rp23xx/boards/raspberrypi-pico-2/index.md","filePath":"en/platforms/arm/rp23xx/boards/raspberrypi-pico-2/index.md"}'),n={name:"en/platforms/arm/rp23xx/boards/raspberrypi-pico-2/index.md"};function l(s,e,p,d,c,u){return i(),o("div",null,e[0]||(e[0]=[r('<h1 id="raspberry-pi-pico-2" tabindex="-1">Raspberry Pi Pico 2 <a class="header-anchor" href="#raspberry-pi-pico-2" aria-label="Permalink to &quot;Raspberry Pi Pico 2&quot;">​</a></h1><p>chip:rp2350</p><p>The <a href="https://www.raspberrypi.com/products/raspberry-pi-pico-2/" target="_blank" rel="noreferrer">Raspberry Pi Pico 2</a> is a general purpose board supplied by the Raspberry Pi Foundation.</p><p><img src="'+t+'" alt="" class="align-center"></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>RP2350 microcontroller chip</li><li>Dual-core ARM Cortex M33 processor, flexible clock running up to 150 MHz</li><li>520kB of SRAM, and 4MB of on-board Flash memory</li><li>Castellated module allows soldering direct to carrier boards</li><li>USB 1.1 Host and Device support</li><li>Low-power sleep and dormant modes</li><li>Drag &amp; drop programming using mass storage over USB</li><li>26 multi-function GPIO pins</li><li>2× SPI, 2× I2C, 2× UART, 3× 12-bit ADC, 16× controllable PWM channels</li><li>Accurate clock and timer on-chip</li><li>Temperature sensor</li><li>Accelerated floating point libraries on-chip</li><li>12 × Programmable IO (PIO) state machines for custom peripheral support</li></ul><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>By default a serial console appears on pins 1 (TX GPIO0) and pin 2 (RX GPIO1). This console runs a 115200-8N1.</p><p>The board can be configured to use the USB connection as the serial console. See the [usbnsh]{.title-ref} configuration.</p><h2 id="buttons-and-leds" tabindex="-1">Buttons and LEDs <a class="header-anchor" href="#buttons-and-leds" aria-label="Permalink to &quot;Buttons and LEDs&quot;">​</a></h2><p>User LED controlled by GPIO25 and is configured as autoled by default.</p><p>A BOOTSEL button, which if held down when power is first applied to the board, will cause the RP2350 to boot into programming mode and appear as a storage device to the computer connected via USB. Saving a .UF2 file to this device will replace the Flash ROM contents on the RP2350.</p><h2 id="pin-mapping" tabindex="-1">Pin Mapping <a class="header-anchor" href="#pin-mapping" aria-label="Permalink to &quot;Pin Mapping&quot;">​</a></h2><p>Pads numbered anticlockwise from USB connector.</p><p>Pad Signal Notes</p><hr><p>1 GPIO0 Default TX for UART0 serial console 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 GPIO1 Ground GPIO2 GPIO3 GPIO4 GPIO5 Ground GPIO6 GPIO7 GPIO8 GPIO9 Ground GPIO10 GPIO11 GPIO12 GPIO13 Ground GPIO14 GPIO15 GPIO16 GPIO17 Ground GPIO18 GPIO19 GPIO20 GPIO21 Ground GPIO22 Run Default RX for UART1 serial console 31 GPIO26 ADC0 32 GPIO27 ADC1 33 AGND Analog Ground 34 35 GPIO28 ADC_VREF ADC2 36 3V3 Power output to peripherals 37 38 3V3_EN Ground Pull to ground to turn off. 39 VSYS +5V Supply to board 40 VBUS Connected to USB +5V</p><h2 id="other-rp2350-pins" tabindex="-1">Other RP2350 Pins <a class="header-anchor" href="#other-rp2350-pins" aria-label="Permalink to &quot;Other RP2350 Pins&quot;">​</a></h2><p>GPIO23 Output - Power supply control. GPIO24 Input - High if USB port or Pad 40 supplying power. GPIO25 Output - On board LED. ADC3 Input - Analog voltage equal to one third of VSys voltage.</p><p>Separate pins for the Serial Debug Port (SDB) are available</p><h2 id="power-supply" tabindex="-1">Power Supply <a class="header-anchor" href="#power-supply" aria-label="Permalink to &quot;Power Supply&quot;">​</a></h2><p>The Raspberry Pi Pico 2 can be powered via the USB connector, or by supplying +5V to pin 39. The board had a diode that prevents power from pin 39 from flowing back to the USB socket, although the socket can be power via pin 30.</p><p>The Raspberry Pi Pico chip run on 3.3 volts. This is supplied by an onboard voltage regulator. This regulator can be disabled by pulling pin 37 to ground.</p><p>The regulator can run in two modes. By default the regulator runs in PFM mode which provides the best efficiency, but may be switched to PWM mode for improved ripple by outputting a one on GPIO23.</p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Basic NuttShell configuration (console enabled in UART0, at 115200 bps).</p><h2 id="readme-txt" tabindex="-1">README.txt <a class="header-anchor" href="#readme-txt" aria-label="Permalink to &quot;README.txt&quot;">​</a></h2>',28)]))}const b=a(n,[["render",l]]);export{P as __pageData,b as default};
