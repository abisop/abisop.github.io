import{_ as o,c as t,al as n,o as d}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"nxtext Display NX Text","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/nxtext/index.md","filePath":"en/applications/examples/nxtext/index.md"}'),i={name:"en/applications/examples/nxtext/index.md"};function c(l,e,a,s,r,_){return d(),t("div",null,e[0]||(e[0]=[n(`<h1 id="nxtext-display-nx-text" tabindex="-1"><code>nxtext</code> Display NX Text <a class="header-anchor" href="#nxtext-display-nx-text" aria-label="Permalink to &quot;\`nxtext\` Display NX Text&quot;">​</a></h1><p>This directory contains another simple test of a subset of the NX APIs defined in <code>include/nuttx/nx/nx.h</code>. This text focuses on text displays on the display background combined with pop-up displays over the text. The text display will continue to update while the pop-up is visible.</p><p><strong>Note</strong>: This example will <strong>only</strong> work with FB drivers and with LCD drivers that support reading the contents of the internal LCD memory <strong>unless</strong> you define <code>CONFIG_EXAMPLES_NXTEXT_NOGETRUN</code>. If you notice garbage on the display or a failure at the point where the display should scroll, it is probably because you have an LCD driver that is write-only.</p><p>The following configuration options can be selected:</p><ul><li><code>CONFIG_NSH_BUILTIN_APPS</code> – Build the <code>NXTEXT</code> example as a built-in that can be executed from the NSH command line.</li><li><code>CONFIG_EXAMPLES_NXTEXT_BGCOLOR</code> – The color of the background. Default depends on <code>CONFIG_EXAMPLES_NXTEXT_BPP</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_BGFONTID</code> – Selects the font to use in the background text (see font ID numbers in <code>include/nuttx/nx/nxfonts.h</code>).</li><li><code>CONFIG_EXAMPLES_NXTEXT_BGFONTCOLOR</code> – The color of the fonts used in the background window. Default depends on <code>CONFIG_EXAMPLES_NXTEXT_BPP</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_PUCOLOR</code> – The color of the pop-up window. Default depends on <code>CONFIG_EXAMPLES_NXTEXT_BPP</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_PUFONTID</code> – Selects the font to use in the pop-up windows (see font ID numbers in <code>include/nuttx/nx/nxfonts.h</code>).</li><li><code>CONFIG_EXAMPLES_NXTEXT_PUFONTCOLOR</code> – The color of the fonts used in the background window. Default depends on <code>CONFIG_EXAMPLES_NXTEXT_BPP</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_BPP</code> – Pixels per pixel to use. Valid options include <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>24</code> and <code>32</code>. Default is <code>32</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_NOGETRUN</code> – If your display is read-only OR if reading is not reliable, then select this configuration to avoid reading from the display.</li><li><code>CONFIG_EXAMPLES_NXTEXT_BMCACHE</code> – The maximum number of characters that can be put in the background window. Default is <code>128</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_GLCACHE</code> – The maximum number of pre-rendered fonts that can be retained for the background window.</li><li><code>CONFIG_EXAMPLES_NXTEXT_STACKSIZE</code> – The stacksize to use when creating the NX server. Default <code>2048</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_CLIENTPRIO</code> – The client priority. Default: <code>100</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_SERVERPRIO</code> – The server priority. Default: <code>120</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_LISTENERPRIO</code> – The priority of the event listener thread. Default: <code>80</code>.</li><li><code>CONFIG_EXAMPLES_NXTEXT_NOTIFYSIGNO</code> – The signal number to use with <code>nx_eventnotify()</code>. Default: <code>32</code>.</li></ul><p>The example also expects the following settings and will generate an error if they are not as expected:</p><pre><code>CONFIG_DISABLE_MQUEUE=n
CONFIG_DISABLE_PTHREAD=n
CONFIG_NX_BLOCKING=y
</code></pre>`,7)]))}const E=o(i,[["render",c]]);export{p as __pageData,E as default};
