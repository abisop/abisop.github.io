import{_ as i,c as t,al as l,o}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"timer_gpio Timer GPIO example","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/timer_gpio/index.md","filePath":"en/applications/examples/timer_gpio/index.md"}'),a={name:"en/applications/examples/timer_gpio/index.md"};function r(d,e,s,c,n,p){return o(),t("div",null,e[0]||(e[0]=[l('<h1 id="timer-gpio-timer-gpio-example" tabindex="-1"><code>timer_gpio</code> Timer GPIO example <a class="header-anchor" href="#timer-gpio-timer-gpio-example" aria-label="Permalink to &quot;`timer_gpio` Timer GPIO example&quot;">​</a></h1><p>This example uses the timer interrupt to periodically change the state of a digital output. The digital output may be a relay, a led or anything else. This example can be very useful to validate timer drivers by using a logic analyzer connected to the digital output. This example mainly differs from the timer example because it waits on a sigwaitinfo() instead of using a signal handler. This approach ensures a deterministic wake-up time when the signal occurs.</p><p>Dependencies:</p><ul><li><code>CONFIG_TIMER</code> – The timer driver must be selected.</li><li><code>CONFIG_DEV_GPIO</code> – The GPIO driver must be selected.</li></ul><p>Note: You should also select one timer instance and have the gpio driver properly configured in your board logic.</p><p>Example configuration:</p><ul><li><ul><li><code>EXAMPLES_TIMER_GPIO_TIM_DEVNAME</code> – This is the name of the timer device<br> that will be used. Default: <code>/dev/timer0</code>.</li></ul></li><li><ul><li><code>EXAMPLES_TIMER_GPIO_GPIO_DEVNAME</code> – This is the name of the gpio device<br> that will be used. Default: <code>/dev/gpio0</code>.</li></ul></li><li><ul><li><code>EXAMPLES_TIMER_GPIO_INTERVAL</code> – This is the timer interval in<br> microseconds. Default: <code>1000000</code>.</li></ul></li><li><ul><li><code>EXAMPLES_TIMER_GPIO_SIGNO</code> – This is the signal number that is used to<br> notify that a timer interrupt occurred. Default: <code>32</code>.</li></ul></li><li><ul><li><code>EXAMPLES_TIMER_GPIO_STACKSIZE</code> – This is the stack size allocated when the<br> timer task runs. Default: <code>2048</code>.</li></ul></li><li><p><code>EXAMPLES_TIMER_GPIO_PRIORITY</code> – This is the priority of the timer task. Default: <code>255</code>.</p></li><li><ul><li><code>EXAMPLES_TIMER_GPIO_PROGNAME</code> – This is the name of the program that will<br> be used from the nsh. Default: <code>timer_gpio</code>.</li></ul></li></ul>',7)]))}const h=i(a,[["render",r]]);export{u as __pageData,h as default};
