import{_ as t,c as o,al as a,o as r}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"Allwinner A10","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/a1x/index.md","filePath":"en/platforms/arm/a1x/index.md"}'),n={name:"en/platforms/arm/a1x/index.md"};function s(i,e,l,p,d,u){return r(),o("div",null,e[0]||(e[0]=[a('<h1 id="allwinner-a10" tabindex="-1">Allwinner A10 <a class="header-anchor" href="#allwinner-a10" aria-label="Permalink to &quot;Allwinner A10&quot;">​</a></h1><p>These following boards are based on the Allwinner A10 have are supported by NuttX:</p><ul><li><p><strong>pcDuino v1</strong>. A port of NuttX to the pcDuino v1 board was first released in NuttX-6.33. See <a href="http://www.pcduino.com/" target="_blank" rel="noreferrer">http://www.pcduino.com/</a> for information about pcDuino Lite, v1, and v2 boards. These boards are based around the Allwinner A10 Cortex-A8 CPU. This port was developed on the v1 board, but the others may be compatible:</p><p>Refer to the NuttX board <a href="https://github.com/apache/nuttx/blob/master/Documentation/platforms/arm/a1x/boards/pcduino-a10/README.txt" target="_blank" rel="noreferrer">README</a> file for further information.</p><p><strong>STATUS</strong>. This port was an experiment was was not completely developed. This configuration builds and runs an NuttShell (NSH), but only if a patch to work around some issues is applied. While not ready for &quot;prime time&quot;, the pcDuino port is functional and could the basis for a more extensive development. There is, at present, no work in progress to extend this port, however.</p></li></ul><h2 id="supported-boards" tabindex="-1">Supported Boards <a class="header-anchor" href="#supported-boards" aria-label="Permalink to &quot;Supported Boards&quot;">​</a></h2><blockquote><p>boards/<em>/</em></p></blockquote>',5)]))}const m=t(n,[["render",s]]);export{c as __pageData,m as default};
