import{_ as a,c as n,al as t,o}from"./chunks/framework.NFAqBSgQ.js";const p=JSON.parse('{"title":"i.MX RT1020 EVK","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/imxrt/boards/imxrt1020-evk/index.md","filePath":"en/platforms/arm/imxrt/boards/imxrt1020-evk/index.md"}'),r={name:"en/platforms/arm/imxrt/boards/imxrt1020-evk/index.md"};function s(i,e,l,d,h,c){return o(),n("div",null,e[0]||(e[0]=[t(`<h1 id="i-mx-rt1020-evk" tabindex="-1">i.MX RT1020 EVK <a class="header-anchor" href="#i-mx-rt1020-evk" aria-label="Permalink to &quot;i.MX RT1020 EVK&quot;">​</a></h1><p><a href="https://www.nxp.com/design/development-boards/i-mx-evaluation-and-development-boards/i-mx-rt1020-evaluation-kit:MIMXRT1020-EVK" target="_blank" rel="noreferrer">i.MX RT1020 EVK</a> is an evaluation kit by NXP company. This kit uses the i.MX RT1020 crossover MCU in LQFP144 package with ARM Cortex M7 core.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li></li></ul><pre><code>Processor

:   -   MIMXRT1021DAG5A processor
</code></pre><ul><li></li></ul><pre><code>Memory

:   -   256 Mb SDRAM memory
    -   64 Mb QSPI Flash
    -   TF socket for SD card
</code></pre><ul><li></li></ul><pre><code>Display and Audio

:   -   Audio CODEC
    -   4-pole audio headphone jack
    -   External speaker connection
    -   Microphone
</code></pre><ul><li></li></ul><pre><code>Connectivity

:   -   Micro USB host and OTG connectors
    -   Ethernet (10/100T) connector
    -   CAN transceivers
    -   Arduino® interface
</code></pre><h2 id="serial-console" tabindex="-1">Serial Console <a class="header-anchor" href="#serial-console" aria-label="Permalink to &quot;Serial Console&quot;">​</a></h2><p>The EVK default console is on LPUART1, which is multiplexed onto the debug port (either OpenSDA or SEGGER JLink).</p><p>It runs at 115200,n,8,1.</p><h2 id="leds-and-buttons" tabindex="-1">LEDs and Buttons <a class="header-anchor" href="#leds-and-buttons" aria-label="Permalink to &quot;LEDs and Buttons&quot;">​</a></h2><h3 id="leds" tabindex="-1">LEDs <a class="header-anchor" href="#leds" aria-label="Permalink to &quot;LEDs&quot;">​</a></h3><p>There is one user accessible LED status indicator located on the 1020-EVK, USERLED. The function of the LEDs include:</p><p>Pin Description Colour</p><hr><p>D3 Power Supply Green D5 User LED Green D15 Reset LED Red</p><p>This LED is not used by the board port unless CONFIG_ARCH_LEDS is defined. In that case, the usage by the board port is defined in include/board.h and src/imxrt_autoleds.c. The LED is used to encode OS-related events as documented in board.h</p><p>SYMBOL Meaning LED</p><hr><p>LED_STARTED NuttX has been started OFF LED_HEAPALLOCATE Heap has been allocated OFF LED_IRQSENABLED Interrupts enabled OFF LED_STACKCREATED Idle stack created ON LED_INIRQ In an interrupt N/C LED_SIGNAL In a signal handler N/C LED_ASSERTION An assertion failed N/C LED_PANIC The system has crashed FLASH</p><p>Thus if the LED is statically on, NuttX has successfully booted and is, apparently, running normally. If the LED is flashing at approximately 2Hz, then a fatal error has been detected and the system has halted.</p><h3 id="buttons" tabindex="-1">Buttons <a class="header-anchor" href="#buttons" aria-label="Permalink to &quot;Buttons&quot;">​</a></h3><p>This IMXRT board has three external buttons</p><hr><p>SW2 (IRQ88, ONOFF) Not on a GPIO, No muxing SW3 (IRQ88, POR) Not on a GPIO, No muxing SW4 (IRQ88, USER) Wakeup, GPIO5-0</p><hr><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><h3 id="netnsh" tabindex="-1">netnsh <a class="header-anchor" href="#netnsh" aria-label="Permalink to &quot;netnsh&quot;">​</a></h3><p>This configuration is similar to the nsh configuration except that is has networking enabled, both IPv4 and IPv6. This NSH configuration is focused on network-related testing.</p><h3 id="nsh" tabindex="-1">nsh <a class="header-anchor" href="#nsh" aria-label="Permalink to &quot;nsh&quot;">​</a></h3><p>Configures the NuttShell (nsh) located at examples/nsh. This NSH configuration is focused on low level, command-line driver testing. Built-in applications are supported, but none are enabled. This configuration does not support a network.</p>`,35)]))}const m=a(r,[["render",s]]);export{p as __pageData,m as default};
