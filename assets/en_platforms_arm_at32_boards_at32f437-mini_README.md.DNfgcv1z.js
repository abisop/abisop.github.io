import{_ as e,c as t,al as s,o as r}from"./chunks/framework.NFAqBSgQ.js";const D=JSON.parse('{"title":"README","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/arm/at32/boards/at32f437-mini/README.md","filePath":"en/platforms/arm/at32/boards/at32f437-mini/README.md"}'),n={name:"en/platforms/arm/at32/boards/at32f437-mini/README.md"};function o(i,a,h,l,d,P){return r(),t("div",null,a[0]||(a[0]=[s('<h1 id="readme" tabindex="-1">README <a class="header-anchor" href="#readme" aria-label="Permalink to &quot;README&quot;">​</a></h1><p>This README discusses issues unique to NuttX configurations for the AT32F437-MINI development board featuring the AT32F437VMT7 MCU. The AT32F437VMT7 is a 288MHz Cortex-M4 operation with 4Mbyte Flash memory and 384kbytes.</p><h1 id="leds" tabindex="-1">LEDs <a class="header-anchor" href="#leds" aria-label="Permalink to &quot;LEDs&quot;">​</a></h1><p>LED1 = PE2 LED2 = PE3</p><h1 id="usart-uart" tabindex="-1">USART/UART <a class="header-anchor" href="#usart-uart" aria-label="Permalink to &quot;USART/UART&quot;">​</a></h1><p>USART1 RX = PA10 TX = PA9 The usart1 is used for console. ./tools/configure.sh at32f437-mini/nsh make -j16 and flash nuttx.hex,then run it will show: NuttShell (NSH) NuttX-12.2.1 nsh&gt; nsh&gt; nsh&gt; ps PID GROUP PRI POLICY TYPE NPX STATE EVENT SIGMASK STACK COMMAND 0 0 0 FIFO Kthread N-- Ready 0000000000000000 001016 Idle_Task 2 2 100 RR Task --- Running 0000000000000000 002016 nsh_main nsh&gt;</p><p>USART2/RS485 RX = PD6 TX = PD5<br> DIR = PD4</p><h1 id="can" tabindex="-1">CAN <a class="header-anchor" href="#can" aria-label="Permalink to &quot;CAN&quot;">​</a></h1><p>CAN1 TX = PD1 RX = PD0 CAN_CHARDRIVER: ./tools/configure.sh at32f437-mini/can_char CAN_SOCKET: ./tools/configure.sh at32f437-mini/can_socket</p><h1 id="usb" tabindex="-1">USB <a class="header-anchor" href="#usb" aria-label="Permalink to &quot;USB&quot;">​</a></h1><p>OTGFS1 D+ = PA12 D- = PA11</p><h1 id="sdio" tabindex="-1">SDIO <a class="header-anchor" href="#sdio" aria-label="Permalink to &quot;SDIO&quot;">​</a></h1><p>SDIO1 CMD = PD2 CLK = PC12 D0 = PC8 D1 = PC9 D2 = PC10 D3 = PC11</p><p>ETH RMII_REF_CLK = PA1 ETH_MDIO = PA2 RMII_CRS_DV = PA7 ETH_MDC = PC1 RMII_RXD0 = PC4 RMII_RXD1 = PC5 RMII_TX_EN = PB11 RMII_TXD0 = PB12 RMII_TXD1 = PB13 ETH_RST = PA3 The eth used lan8720a as phy</p><p>W25QXX CLK = PB3 MISO = PB4 MOSI = PB5 CS = PD7</p><p>RTC The board used rtc device on chip</p><p>PWM The pwm test with tim20 chanel1 in PE2</p><p>ADC ADC1 chanel8(PB0)</p>',18)]))}const T=e(n,[["render",o]]);export{D as __pageData,T as default};
