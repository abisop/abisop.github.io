import{_ as o,c as t,al as i,o as n}from"./chunks/framework.NFAqBSgQ.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/platforms/z80/ez80/boards/ez80f910200zco/README.md","filePath":"en/platforms/z80/ez80/boards/ez80f910200zco/README.md"}'),a={name:"en/platforms/z80/ez80/boards/ez80f910200zco/README.md"};function r(s,e,l,p,h,d){return n(),t("div",null,e[0]||(e[0]=[i('<p>README.txt ^^^^^^^^^^</p><p>ZDS-II Compiler Versions ^^^^^^^^^^^^^^^^^^^^^^^^</p><p>Different configurations have been build for this board using ZDS-11 Versions 4.11.0, 4.11.1, and 5.1.1 You have to check the files */Make.defs to see how the build is configured: Check the definitions of ZDSVERSION (if present) and ZDSINSTALLDIR.</p><p>NOTE: Different versions of the ZDS-II compiler may also require different versions of .linkcmd and .zdsproj files as well.</p><p>Version 5.3.3</p><p>As of this writing, this is the latest version available.</p><p>Version 4.11.0</p><p>The 5.3.3 version of the ZDS-II tools is the default configured for all ez80 boards. However, it is the older version 4.11.0 that this code has been verified against.</p><p>Version 5.1.1</p><p>On June 22, 2011 I verified that these configurations build successfully with the 5.1.1 ZDS-II version. On November 12, 2012, all of the configurations were converted to use 5.1.1, but have not been verified on a running target.</p><p>The above kludge for 4.11.0 is not required with 5.1.1.</p><p>Paths were also updated that are specific to a 32-bit toolchain running on a 64 bit windows platform. Change to a different toolchain, you will need to modify the versioning in Make.defs; if you want to build on a different platform, you will need to change the path the ZDS binaries in that files as well as in your PATH environment variable.</p><p>Version 5.2.1</p><p>On January 31, 2016, I tried ZDS-II version 5.2.1. I believe that I have all of the changes in place to support that version. At compile time, however, I encountered compiler internal errors. I did not pursue that build any further.</p><p>Version 5.3.0</p><p>I verified compilation using 5.30 on June 2, 2019. To use this version, I had to make spurious modification to the implementation of gmtimer() to work around an internal compiler error. I have still not verified that are no errors in the compiled code.</p><p>Other Versions If you use any version of ZDS-II other than 5.1.1, 5.2.1, or 5.3.0/3 or if you install ZDS-II at any location other than the default location, you will have to modify three files: (1) arch/arm/z80/src/ez80/Kconfig, (2) boards/z80/ez80/ez80f910200zco/scripts/Make.defs and, perhaps, (3) arch/z80/src/ez80/Toolchain.defs.</p><p>Configurations ^^^^^^^^^^^^^^</p><h2 id="common-configuration-notes" tabindex="-1">Common Configuration Notes <a class="header-anchor" href="#common-configuration-notes" aria-label="Permalink to &quot;Common Configuration Notes&quot;">​</a></h2><ol><li><p>src/ and include/</p><p>These directories contain common logic for all ez80f910200zco configurations.</p></li><li><p>Variations on the basic ez80f910200zco configuration are maintained in subdirectories. To configure any specific configuration, do the following steps:</p><p>tools/configure.sh ez80f910200zco:<code>&lt;sub-directory&gt;</code> make</p><p>Where <code>&lt;sub-directory&gt;</code> is the specific board configuration that you wish to build. The available board-specific configurations are summarized in the following paragraph.</p><p>Use configure.bat instead of configure.sh if you are building in a native Windows environment.</p></li><li><p>This configuration uses the mconf-based configuration tool. To change this configurations using that tool, you should:</p><p>a. Build and install the kconfig-mconf tool. See nuttx/README.txt see additional README.txt files in the NuttX tools repository.</p><p>b. Execute &#39;make menuconfig&#39; in nuttx/ in order to start the reconfiguration process.</p></li></ol><h2 id="configuration-subdirectories" tabindex="-1">Configuration Subdirectories <a class="header-anchor" href="#configuration-subdirectories" aria-label="Permalink to &quot;Configuration Subdirectories&quot;">​</a></h2><p>dhcpd: This builds the DHCP server using the examples/dhcpd application (for execution from FLASH.) See apps/examples/README.txt for information about the dhcpd example.</p><p>httpd: This builds the uIP web server example using the examples/webserver application (for execution from FLASH). See apps/examples/README.txt for information about httpd.</p><p>nsh: This configuration builds the NuttShell (NSH). That code can be found in examples/nsh. For more information see: examples/nsh/README.txt and Documentation/NuttShell.html.</p><p>nettest: This configuration is used for testing the eZ80F91 EMAC driver. It builds examples/nettest. See examples/README.txt for more information about nettest.</p><p>poll: This configuration is also used for testing the eZ80F91 EMAC driver. It builds examples/poll. See examples/README.txt for more information about the poll test.</p><p>dhcpd/README.txt ^^^^^^^^^^^^^^^^</p><p>dhcpd.zdsproj is a simple ZDS-II project that will allow you to use the ZDS-II debugger.</p><p>httpd/README.txt ^^^^^^^^^^^^^^^^ httpd.zdsproj is a simple ZDS-II project that will allow you to use the ZDS-II debugger.</p><p>nettest/README.txt ^^^^^^^^^^^^^^^^ nettest.zdsproj is a simple ZDS-II project that will allow you to use the ZDS-II debugger.</p><p>nsh/README.txt ^^^^^^^^^^^^^^^^ nsh.zdsproj is a simple ZDS-II project that will allow you to use the ZDS-II debugger.</p><p>poll/README.txt ^^^^^^^^^^^^^^^^</p><p>poll.zdsproj is a simple ZDS-II project that will allow you to use the ZDS-II debugger.</p>',33)]))}const f=o(a,[["render",r]]);export{c as __pageData,f as default};
