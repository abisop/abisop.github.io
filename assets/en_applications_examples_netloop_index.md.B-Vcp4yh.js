import{_ as o,c as l,al as t,o as i}from"./chunks/framework.NFAqBSgQ.js";const u=JSON.parse('{"title":"netloop Network loopback device","description":"","frontmatter":{},"headers":[],"relativePath":"en/applications/examples/netloop/index.md","filePath":"en/applications/examples/netloop/index.md"}'),a={name:"en/applications/examples/netloop/index.md"};function p(c,e,n,s,d,r){return i(),l("div",null,e[0]||(e[0]=[t('<h1 id="netloop-network-loopback-device" tabindex="-1"><code>netloop</code> Network loopback device <a class="header-anchor" href="#netloop-network-loopback-device" aria-label="Permalink to &quot;`netloop` Network loopback device&quot;">​</a></h1><p>This is a simple test of the netwok loopback device. <code>examples/nettest</code> can also be configured to provide (better) test of local loopback transfers. This version derives from <code>examples/poll</code> and is focused on testing <code>poll()</code> with loopback devices.</p><ul><li><code>CONFIG_EXAMPLES_NETLOOP=y</code> – Enables the nettest example.</li></ul><p>Dependencies:</p><ul><li><p><code>CONFIG_NET_LOOPBACK</code> – Requires local loopback support.</p></li><li><ul><li><p><code>CONFIG_NET_TCP</code> – Requires TCP support with the following:</p><ul><li><code>CONFIG_NET_TCPBACKLOG</code></li><li><code>CONFIG_NET_TCP_WRITE_BUFFERS</code></li></ul></li></ul></li><li><p><code>CONFIG_NET_IPv4</code> – Currently supports only IPv4.</p></li></ul>',5)]))}const T=o(a,[["render",p]]);export{u as __pageData,T as default};
